{"version":3,"sources":["actions/index.js","reducers/index.js","containers/App.jsx","components/Main.jsx","components/Navbar.jsx","components/About.jsx","components/Rooms.jsx","components/RoomsDetails.jsx","components/Home.jsx","components/App.jsx","service/firebase.js","index.js"],"names":["IS_LOGIN_USER","FETCH_PRODUCTS_BEGIN","GET_ERRORS","IS_LOGGED_IN_DATA","IS_LOGOUT_DATA","ROOMS_DATA","RTC_SETTING","ADD_MEDIA","REMOVE_VIDEO","READY_TO_CALL","LOCAL_VIDEO","CONNECTED_LOCAL","DISCONNECTED_WEBCAM","AUDIO_CHECK","ROOM_ADD","ROOM_REMOVE","CHANNEL_CHECK","initialState","items","isLoggedIn","error","isroom","peers","inroom","webrtc","roomname","mute","length","createHistory","forceRefresh","rtc","Main","props","react_default","a","createElement","className","htmlFor","src","alt","Link","to","type","id","name","ref","inputRef","placeholder","onClick","saveFormData","Navbar","signAlert","onLogoutButtonClick","onLoginButtonClick","url","About","goingRef","goingChannel","Rooms","_ref","roomDelete","roomData","uniqWith","isEqual","map","data","key","_id","concat","title","userName","data-mail","userMail","data-id","RoomsDetails","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","remoteVideos","room_name","match","params","startLoclaVideo","localVideo","AddpeerVideo","joinChat","_this2","_this$props","email","disconnect","handleSelfMute","connectVideo","autoPlay","vid","nick","split","getContainerId","getId","playsInline","Component","Home","location","pathname","title_len","some","item","alert","history","push","connection","stopLocalVideo","leaveRoom","go","init","components_Navbar","Switch","Route","exact","path","render","components_Main","assign","components_About","components_Rooms","Redirect","RoomsDetails_RoomsDetails","bind","localref","React","App","usingUserData","channelData","event","preventDefault","inputNode","value","dataId","target","dataset","dataMail","mail","channelTitle","gochannel","_this$props2","channelcheck","BrowserRouter","Home_Home","saveFormDatas","roomDeletes","loginUser","userlogout","signAlertMessage","localHostIp","localHostIpApi","provider","firebase","GoogleAuthProvider","socket","io","connect","state","defineProperty","dispatch","ownProps","user","signInWithPopup","then","result","credential","accessToken","users","uid","displayName","photoURL","axios","post","res","token","defaults","headers","common","setAuthToken","decoded","jwt_decode","localStorage","setItem","JSON","stringify","catch","parse","getItem","userRemove","removeItem","signOut","on","logedin","titleOverLap","Boolean","every","roommData","emit","itemsMail","localele","LioWebRTC","localVideoEl","dataOnly","network","maxPeers","minPeers","debug","sessionId","peer","payload","localvideo","start","startLocalVideo","config","targetremote","stream","attachStream","autoplay","undefined","joinroom","joinRoom","e","func","withref","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","arguments","action","objectSpread","islogedin","loggedTrue","roomCopy","toConsumableArray","dataroom","removeRoom","roomId","removeUpdate","filter","peerCopy","p","closed","unmute","applyMiddleware","logger","ReactDOM","react_redux_es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.604af022.chunk.js","sourcesContent":["export const IS_LOGIN_USER = 'IS_LOGIN_USER';\nexport const FETCH_PRODUCTS_BEGIN = 'FETCH_PRODUCTS_BEGIN';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const IS_LOGGED_IN_DATA = 'IS_LOGGED_IN_DATA';\nexport const IS_LOGOUT_DATA = 'IS_LOGOUT_DATA';\nexport const ROOMS_DATA = 'ROOMS_DATA';\nexport const RTC_SETTING = 'RTC_SETTING';\nexport const ADD_MEDIA = 'ADD_MEDIA';\nexport const REMOVE_VIDEO = 'REMOVE_VIDEO';\nexport const READY_TO_CALL = 'READY_TO_CALL';\nexport const LOCAL_VIDEO = 'LOCAL_VDIEO';\nexport const CONNECTED_LOCAL = 'CONNECTED_LOCAL';\nexport const DISCONNECTED_WEBCAM = 'DISCONNECTED_WEBCAM';\nexport const AUDIO_CHECK = 'AUDIO_CHECK';\nexport const ROOM_ADD = 'ROOM_ADD';\nexport const ROOM_REMOVE = 'ROOM_REMOVE';\nexport const CHANNEL_CHECK = 'CHANNEL_CHECK';\n\nexport const isLogoutData = () => ({\n\ttype: IS_LOGOUT_DATA\n});\n\nexport const isLoggedInData = () => ({\n\ttype: IS_LOGGED_IN_DATA\n});  \n\nexport const fetchProductsBegin = () => ({\n\ttype: FETCH_PRODUCTS_BEGIN\n});  \n\nexport const getErrors = () => ({\n\ttype: GET_ERRORS\n});  \n\nexport const roomdData = () => ({\n\ttype: ROOMS_DATA\n});\n\nexport const isLoginUser = products => ({\n  type: IS_LOGIN_USER,\n  payload: { products }\n});\n\n/* video RTC */\nexport const rtcSetting = products => ({\n  type: RTC_SETTING\n});\n\nexport const addMeida = products => ({\n  type: ADD_MEDIA\n});\n\nexport const removeVideo = products => ({\n  type: REMOVE_VIDEO\n});\n\nexport const readyToCall = products => ({\n  type: READY_TO_CALL\n});\n\nexport const localVideo = products => ({\n  type: LOCAL_VIDEO\n});\n\nexport const connectedLocal = products => ({\n  type: CONNECTED_LOCAL\n});\n\nexport const disconnectedWebcam = products => ({\n  type: DISCONNECTED_WEBCAM\n});\n\nexport const audioCheck = products => ({\n  type: AUDIO_CHECK\n});\n\nexport const roomAdd = products => ({\n  type: ROOM_ADD\n});\n\nexport const roomRemove = products => ({\n  type: ROOM_REMOVE\n});\n\nexport const channelCheck = products => ({\n  type: CHANNEL_CHECK\n});\n\n\n\n\n\n\n","import LioWebRTC from 'liowebrtc';\nimport { combineReducers } from 'redux';\nimport createHistory from 'history/createBrowserHistory';\nimport {\n\tFETCH_PRODUCTS_BEGIN,\n\tIS_LOGIN_USER,\n\tIS_LOGGED_IN_DATA,\n\tIS_LOGOUT_DATA,\n\tGET_ERRORS,\n\tROOMS_DATA,\n\tRTC_SETTING,\n\tCONNECTED_LOCAL,\n\tLOCAL_VIDEO,\n\tADD_MEDIA,\n\tREMOVE_VIDEO,\n\tREADY_TO_CALL,\n\tDISCONNECTED_WEBCAM,\n\tAUDIO_CHECK,\n\tROOM_ADD,\n\tROOM_REMOVE,\n\tCHANNEL_CHECK\n} from '../actions';\n\nconst initialState = {\n\titems: {},\n\tisLoggedIn: false,\n\terror: null,\n\tisroom: [],\n\tpeers: [],\n\tinroom: true,\n\twebrtc: null,\n\troomname: '',\n\tmute: false,\n\tlength: 0\n};\nconst history = createHistory({ forceRefresh: true });\n\nexport default function productReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FETCH_PRODUCTS_BEGIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tislogedin: false,\n\t\t\t\titems: {},\n\t\t\t\tisroom: [],\n\t\t\t\tinroom: false\n\t\t\t};\n\n\t\tcase IS_LOGIN_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: true,\n\t\t\t\titems: action.data,\n\t\t\t\tinroom: false\n\t\t\t};\n\n\t\tcase IS_LOGGED_IN_DATA:\n\t\t\tlet user = Boolean(action.data) ? action.data : {};\n\t\t\tlet loggedTrue = Boolean(action.data) ? true : false;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: loggedTrue,\n\t\t\t\titems: user,\n\t\t\t\tinroom: false\n\t\t\t}\n\n\t\tcase IS_LOGOUT_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: false,\n\t\t\t\titems: {},\n\t\t\t\tisroom: [],\n\t\t\t\tinroom: false\n\t\t\t}\n\n\t\tcase ROOMS_DATA:\n\t\t\tlet roomCopy = [...action.data, ...state.isroom];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: roomCopy,\n\t\t\t\tinroom: false\n\t\t\t}\n\n\t\tcase ROOM_ADD:\n\t\t\tconst dataroom = [...state.isroom, action.data];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: dataroom\n\t\t\t}\n\n\t\tcase ROOM_REMOVE:\n\t\t\tconst removeRoom = state.isroom;\n\t\t\tconst roomId = action.data;\n\t\t\tconst removeUpdate = removeRoom.filter((data) => roomId !== data._id);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: removeUpdate\n\t\t\t}\n\n\t\tcase RTC_SETTING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\twebrtc: action.payload,\n\t\t\t\tinroom: true\n\t\t\t};\n\n\t\tcase ADD_MEDIA:\n\t\t\tlet peerCopy = [...state.peers, action.peer];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpeers: peerCopy\n\t\t\t};\n\n\t\tcase REMOVE_VIDEO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpeers: state.peers.filter(p => !p.closed)\n\t\t\t};\n\n\t\tcase READY_TO_CALL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinroom: true\n\t\t\t};\n\n\t\tcase LOCAL_VIDEO:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase CONNECTED_LOCAL:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase DISCONNECTED_WEBCAM:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase AUDIO_CHECK:\n\t\t\t(state.mute) ? action.func.unmute() : action.func.mute();\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmute: !state.mute\n\t\t\t};\n\n\t\tcase CHANNEL_CHECK:\n\t\t\treturn {\n\t\t\t\t...state\t \n\t\t\t}\n\n\t\tcase GET_ERRORS:\n\t\t\treturn action.payload;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import { connect } from \"react-redux\";\nimport io from 'socket.io-client';\nimport { bindActionCreators } from 'redux'\nimport React, { Component } from 'react';\nimport { debounce } from \"lodash\";\nimport * as firebase from 'firebase';\nimport LioWebRTC from 'liowebrtc';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport {\n  IS_LOGIN_USER,\n  IS_LOGGED_IN_DATA,\n  IS_LOGOUT_DATA,\n  GET_ERRORS,\n  ROOMS_DATA,\n  CONNECTED_LOCAL,\n  LOCAL_VIDEO,\n  RTC_SETTING,\n  ADD_MEDIA,\n  REMOVE_VIDEO,\n  READY_TO_CALL,\n  AUDIO_CHECK,\n  ROOM_ADD,\n  ROOM_REMOVE,\n  CHANNEL_CHECK\n} from '../actions';\nimport App from \"../components/App.jsx\";\nimport createHistory from 'history/createBrowserHistory';\n\nlet rtc;\nconst simpLioRTC = 'https://sm1.lio.app:443/';\nconst localHostIp = 'https://videos-conf-service.herokuapp.com/';\nconst localHostIpApi = `${localHostIp}api/auth/`;\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst history = createHistory({ forceRefresh: true });\nconst socket = io(localHostIp);\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: state.items,\n  isLoggedIn: state.isLoggedIn,\n  error: state.error,\n  isroom: state.isroom,\n  isroom: state.isroom,\n  peers: state.peers,\n  webrtc: state.webrtc,\n  mute: state.mute,\n  length :  state.length\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    loginUser: (user) => {\n      firebase.auth().signInWithPopup(provider).then(result => {\n        let token = result.credential.accessToken;\n        let users = result.user;\n        let loginUser = {\n          uid: users.uid,\n          name: users.displayName,\n          url: users.photoURL,\n          email: users.email\n        }\n        axios.post(`${localHostIpApi}login`, loginUser).then(res => {\n          const { token } = res.data;\n          setAuthToken(token);\n          const decoded = jwt_decode(token);\n          dispatch({\n            type: IS_LOGIN_USER,\n            data: decoded\n          });\n          localStorage.setItem('user', JSON.stringify(decoded));\n        })\n      }).catch(error => {\n        dispatch({ type: GET_ERRORS, error });\n      });\n    },\n    usingUserData: () => {\n      let user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: IS_LOGGED_IN_DATA,\n        data: user\n      });\n    },\n    userlogout: () => {\n      let userRemove = localStorage.removeItem('user');\n      firebase.auth().signOut().then(() => {\n        history.push('/');\n        dispatch({\n          type: IS_LOGOUT_DATA,\n          data: userRemove\n        });\n      }).catch(error => {\n        dispatch({ type: GET_ERRORS, error });\n      });\n    },\n    channelData: () => {\n      socket.on('initialList',(data)=>{\n        dispatch({\n          type: ROOMS_DATA,\n          data\n        });\n      });\n      socket.on('itemAdded', (data) => {\n        dispatch({\n          type: ROOM_ADD,\n          data\n        });\n      });\n      socket.on('itemRemove', (data) => {\n        dispatch({\n          type: ROOM_REMOVE,\n          data\n        });\n      });\n    },\n    saveFormData: (logedin, items, title, isroom) => {\n      let titleOverLap = Boolean(isroom.every( roommData => roommData.title !== title));\n      if (logedin) {\n        if (title.length > 1 && title.length < 11) {\n          let data = {\n            title,\n            userName: items.name,\n            userMail: items.email\n          };\n          if ( titleOverLap || isroom === [] ) {\n            socket.emit('addItem', data);\n            history.push(`/rooms/${title}`);\n          } else {\n            alert('중복된 회의실이 있습니다.');\n          } \n        } else {\n          alert('회의방 제목은 2글자 이상 10글자 미만이에요.\\n다시 한번 작성해주세요');\n        }\n      } else {\n        alert('로그인을 해주세요');\n      } \n    },\n    roomDelete: (id, dataMail, itemsMail) => {\n      if (dataMail === itemsMail) {\n        socket.emit('removeItem' , id);\n        dispatch({\n          type: ROOM_REMOVE\n        });\n        alert('회의실이 삭제되었습니다.');\n      } else {\n        alert('회의실 삭제 권한은 주최자에게만 있어요.');\n      }\n    },\n    init: (localele) => {\n      let user = JSON.parse(localStorage.getItem('user'));\n      let email = (user !== null) ? `${user.email},${user.url}` : 'Not user';\n      rtc = new LioWebRTC({\n        url: simpLioRTC,\n        localVideoEl: '',\n        dataOnly: false,\n        network: {\n          maxPeers: 2,\n          minPeers: 1\n        },\n        debug: false,\n        nick: email\n      });\n      rtc\n        .on('connectionReady', (sessionId) => {\n          dispatch({\n            type: CONNECTED_LOCAL,\n            sessionId\n          });\n        })\n        .on('videoRemoved', (peer) => {\n          dispatch({\n            type: REMOVE_VIDEO,\n            peer\n          });\n        });\n      dispatch({ type: RTC_SETTING, payload: rtc });\n    },\n    startLoclaVideo: (localvideo) => {\n      dispatch({ type: LOCAL_VIDEO, start: rtc.startLocalVideo() });\n      if (localvideo) {\n        rtc.config.localVideoEl = localvideo;\n      } else {\n        rtc.config.localVideoEl = '';\n      }\n    },\n    AddpeerVideo: (targetremote) => {\n      rtc.on('videoAdded', (stream, peer) => {\n        if (targetremote) {\n          dispatch({\n            type: ADD_MEDIA,\n            peer,\n            rtc\n          });\n          rtc.attachStream(stream, targetremote[peer.id], { autoplay: true });\n        }\n      })\n    },\n    joinChat: (roomname) => {\n      // /history.go(0);\n      rtc.on('readyToCall', () => {\n        if (roomname !== undefined) {\n          dispatch({\n            type: READY_TO_CALL,\n            joinroom: rtc.joinRoom(roomname)\n          });\n        }\n      });\n    },\n    handleSelfMute: (e) => {\n      dispatch({\n        type: AUDIO_CHECK,\n        func: rtc\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { withref: true })(App);\n\n\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Main = props => {\n  return (\n    <div className=\"meeting-room-create\">\n      <div className=\"rooms_title\">\n        <form>\n          <label htmlFor=\"rooms_title\">\n            <h1>\n              <img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/logo.png?raw=true\" alt=\"\" />\n              <Link className=\"navbar-item\" to=\"/rooms\">Channel List</Link>\n            </h1>\n            <input type=\"text\" id=\"rooms_title\" name=\"rooms_title\" ref={props.inputRef} placeholder=\"안녕하세요!! 회의실을 생성해주세요.\" />\n            <button name=\"rooms_title\" onClick={props.saveFormData} >Create!</button>\n          </label>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = props => {\n  return (\n    <div className=\"container\">\n      <div className=\"navbar-start\">\n        <div className=\"nav-content\">\n          <div className=\"nav-menu\">\n            <dl>\n              <dt><Link to=\"/\"><img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/logo.png?raw=true\" alt=\"\"/></Link></dt>\n              <dd>\n                <Link to=\"/about\">About</Link>\n              </dd>\n              <dd>\n                {\n                  (props.isLoggedIn) ?\n                    <Link to=\"/rooms\">Public Channel</Link> :\n                    <Link onClick={props.signAlert} to=\"/\">Public Channel</Link>\n                }\n              </dd>\n              <dd>\n                {\n                  (props.isLoggedIn) ?\n                    <p onClick={props.onLogoutButtonClick}>Sign Out</p> :\n                    <p onClick={props.onLoginButtonClick}>Sign In</p>\n                }\n              </dd>\n            </dl>\n          </div>\n          <div className=\"user-info-nav\">\n            {\n              (props.isLoggedIn) ?\n                <p><img src={props.items.url} /> <strong>{props.items.name}</strong>님 안녕하세요.!!</p> :\n                <p>로그인해주세요.</p>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst About = props => {\n\treturn (\n\t\t<div className=\"about\">\n\t\t\t<div className=\"about-content\">\n\t\t\t\t<div className=\"about-img\">\n\t\t\t\t\t<img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/webcamconf.png?raw=true\" alt=\"\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"about-info-text\">\n\t\t\t\t\t<h2>Videos Conf</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t언제 어디서든 노트북만 있으면, 화상회의를 시작 하실 수 있습니다.\n\t\t\t\t\t\t지금 바로 시작해보세요.!!\n\t\t\t\t\t </p>\n\t\t\t\t\t<div className=\"goingChannel\">\n\t\t\t\t\t\t<label htmlFor=\"rooms_title\">\n\t\t\t\t\t\t\t<input type=\"text\" id=\"rooms_title\" name=\"rooms_title\" ref={props.goingRef} placeholder=\"참가 할 채널 제목을 입력해주세요!\" />\n\t\t\t\t\t\t\t<button name=\"rooms_title\" onClick={props.goingChannel} >Go!</button>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default About;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from \"react-router-dom\";\nimport { uniqWith, isEqual } from \"lodash\";\n\nconst Rooms = ({ roomDelete, roomData, peers }) => {\n  return (\n    <div className=\"rooms-list\">\n      <dl>\n        <dt>\n          <h2 className=\"title\">\n            Enjoy Public Room\n            <em>여기는 공개 회의실입니다.</em>\n          </h2>\n        </dt>\n        {\n          uniqWith(roomData, isEqual).map(data => {\n            return (\n              <dd key={data._id}>\n                <Link to={`rooms/${data.title}`}>\n                  {data.title}\n                  <p> Organiser {data.userName}</p>\n                </Link>\n                <button onClick={roomDelete} data-mail={data.userMail} data-id={data._id} >Delete</button>\n              </dd>\n            );\n          })\n        }\n      </dl>\n    </div>\n  );\n};\n\nexport default Rooms;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { uniqWith, isEqual } from \"lodash\";\n\nexport default class RoomsDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.remoteVideos = {};\n  }\n\n  componentDidMount() {\n    const { room_name } = this.props.match.params;\n    this.webrtc = this.props.webrtc;\n    this.props.startLoclaVideo(this.localVideo);\n    this.props.AddpeerVideo(this.remoteVideos);\n    this.props.joinChat(room_name);\n  }\n\n  render() {\n    const { peers, email, url, AddpeerVideo, webrtc, disconnect, handleSelfMute, mute, connectVideo } = this.props;\n    const { room_name } = this.props.match.params;\n    return (\n      <div className=\"details-box\">\n        <div className=\"sidebar local\">\n          <h2>\n            {room_name}\n            <em><i className=\"far fa-user\"></i> {peers.length + 1}</em>\n          </h2>\n          <div className=\"localBox\">\n            <video id='localVideo' autoPlay={true} ref={(vid) => this.localVideo = vid} />\n            <div className=\"nick\">\n              <p> {email} </p>\n            </div>\n          </div>\n          <div className=\"buttons\">\n            <button onClick={connectVideo}>\n              <i className=\"fas fa-video\"></i>\n            </button>\n            <button onClick={handleSelfMute}>\n              {\n                (mute) ?\n                  <i className=\"fas fa-volume-up\"></i> :\n                  <i className=\"fas fa-volume-mute\"></i>\n              }\n            </button>\n            <button onClick={disconnect}>\n              <i className=\"fas fa-sign-out-alt\"></i>\n            </button>\n            <p>통화버튼을 눌러주세요.</p>\n          </div>\n          <div className=\"remotePeerList\">\n            <h3>Member</h3>\n            <ul>\n              <li> <img src={url} alt=\"\" /> <p>{email}</p></li>\n              {\n                peers.map(name => <li key={name.id}> <img src={name.nick.split(',')[1]} alt=\"\" /> <p>{name.nick.split(',')[0]}</p></li>)\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"remotevideo\" >\n          {\n            uniqWith(peers, isEqual).map(data => (\n              <div className=\"vidContainer\" key={data.id} id={`${webrtc.getContainerId(data)}`} >\n                <video id={webrtc.getId(data)} autoPlay={true} ref={(vid) => this.remoteVideos[data.id] = vid} playsInline />\n                <div className=\"nick\">\n                  <p>{data.nick.split(',')[0]}</p>\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Main from './Main.jsx';\nimport Navbar from './Navbar.jsx';\nimport About from './About.jsx';\nimport Rooms from './Rooms.jsx';\nimport RoomsDetails from './RoomsDetails.jsx';\n\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidUpdate() {\n    if (!this.props.location.pathname.split('/rooms/')[1]) {\n      this.props.webrtc.connection.disconnect();\n      this.props.webrtc.stopLocalVideo();\n      this.props.webrtc.leaveRoom();\n    } else {\n      let title = this.props.isroom.map( data => data.title);\n      let title_len = this.props.location.pathname.split('/rooms/')[1];\n      let isRoomValid = title.some(item => item === title_len );\n      if(!isRoomValid) {\n        alert('없는 화상 회의실입니다.');\n        this.props.history.push('/rooms');\n      }\n    }\n  }\n\n  connectVideo() {\n    this.props.history.go(0);\n  }\n\n  disconnect() {\n    this.props.history.push('/rooms');\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      inputRef,\n      goingRef,\n      items,\n      isroom,\n      init,\n      peers,\n      inroom,\n      webrtc,\n      saveFormData,\n      AddpeerVideo,\n      joinChat,\n      startLoclaVideo,\n      handleSelfMute,\n      goingChannel,\n      mute } = this.props;\n    return (\n      <div id=\"app\" className=\"container\">\n        <Navbar\n          items={items}\n          isLoggedIn={isLoggedIn}\n          signAlert={this.props.signAlert}\n          onLoginButtonClick={this.props.onLoginButtonClick}\n          onLogoutButtonClick={this.props.onLogoutButtonClick}\n        />\n        <Switch>\n          <Route exact path=\"/\" render={props => {\n            return (\n              <Main\n                {...props}\n                isLoggedIn={isLoggedIn}\n                saveFormData={saveFormData}\n                inputRef={inputRef}\n              />\n            );\n          }} />\n          <Route exact path=\"/about\" render={props => {\n            return (\n              <About\n                {...props}\n                goingRef={goingRef}\n                goingChannel={goingChannel}\n              />\n            );\n          }} />\n          <Route exact path=\"/rooms\" render={props => {\n            if (isLoggedIn) {\n              return (\n                <Rooms\n                  roomData={isroom}\n                  roomDelete={this.props.roomDelete}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }} />\n          <Route exact path=\"/rooms/:room_name\" render={props => {\n            let email = items.email ? items.email : 'null';\n            if (isLoggedIn && isroom) {\n              return (\n                <RoomsDetails\n                  {...props}\n                  init={init}\n                  email={email}\n                  url={items.url}\n                  peers={peers}\n                  webrtc={webrtc}\n                  inroom={inroom}\n                  isroom={isroom}\n                  startLoclaVideo={startLoclaVideo}\n                  AddpeerVideo={AddpeerVideo}\n                  joinChat={joinChat}\n                  mute={mute}\n                  connectVideo={this.connectVideo.bind(this)}\n                  disconnect={this.disconnect.bind(this)}\n                  handleSelfMute={handleSelfMute}\n                  localref={(vid) => this.localVideo = vid}\n                />\n              );\n            } else {\n              return <span>Loading...</span>;\n            }\n          }} />\n          <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './Home.jsx';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.usingUserData();\n    this.props.channelData();\n    this.props.init();\n  }\n\n  signAlertMessage() {\n    alert('로그인을 해주세요');\n  }\n\n  saveFormDatas(event) {\n    event.preventDefault();\n    const { isLoggedIn, items, isroom } = this.props;\n    this.props.saveFormData(isLoggedIn, items, this.inputNode.value, isroom);\n    this.inputNode.value = '';\n  }\n\n  roomDeletes(event) {\n    event.preventDefault();\n    const dataId = event.target.dataset.id;\n    const dataMail = event.target.dataset.mail;\n    const { items } = this.props;\n    this.props.roomDelete(dataId, dataMail, items.email);\n  }\n\n  goingChannel(event) {\n    event.preventDefault();\n    const channelTitle = this.gochannel.value;\n    this.props.history.push(`/rooms/${channelTitle}`);\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      items,\n      isroom,\n      peers,\n      inroom,\n      webrtc,\n      joinChat,\n      AddpeerVideo,\n      startLoclaVideo,\n      handleSelfMute,\n      mute,\n      history,\n      channelcheck } = this.props;\n    return (\n      <Router>\n        <Route\n          render={props => {\n            if (isroom) {\n              return (\n                (webrtc !== null) ?\n                  <Home\n                    {...props}\n                    isLoggedIn={isLoggedIn}\n                    items={items}\n                    isroom={isroom}\n                    channelcheck={channelcheck}\n                    saveFormData={this.saveFormDatas.bind(this)}\n                    roomDelete={this.roomDeletes.bind(this)}\n                    goingChannel={this.goingChannel.bind(this)}\n                    onLoginButtonClick={this.props.loginUser}\n                    onLogoutButtonClick={this.props.userlogout}\n                    signAlert={this.signAlertMessage}\n                    webrtc={webrtc}\n                    peers={peers}\n                    inroom={inroom}\n                    startLoclaVideo={startLoclaVideo}\n                    AddpeerVideo={AddpeerVideo}\n                    mute={mute}\n                    handleSelfMute={handleSelfMute.bind(this)}\n                    joinChat={joinChat}\n                    inputRef={value => this.inputNode = value}\n                    goingRef={value => this.gochannel = value}\n                  /> :\n                  null\n              )\n            }\n          }}\n        />\n      </Router>\n    );\n  };\n};\n","import * as firebase from 'firebase';\n\n var config = {\n  apiKey: \"AIzaSyA2aWhmtwcW-HJ80tYyv1Hs2A9MRzY3acQ\",\n  authDomain: \"videoconference-bf935.firebaseapp.com\",\n  databaseURL: \"https://videoconference-bf935.firebaseio.com\",\n  projectId: \"videoconference-bf935\",\n  storageBucket: \"videoconference-bf935.appspot.com\",\n  messagingSenderId: \"895553387250\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport reducer from './reducers'\nimport App from './containers/App.jsx';\nimport './style.css';\nimport './service/firebase';\nimport createHistory from 'history/createBrowserHistory';\n\nconst history = createHistory({ forceRefresh: true });\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\t\n    <App history={history}/>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}