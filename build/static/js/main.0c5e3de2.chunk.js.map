{"version":3,"sources":["actions/index.js","reducers/index.js","containers/App.jsx","components/Alert.jsx","components/Main.jsx","components/LoginAlert.jsx","components/Navbar.jsx","components/About.jsx","components/Rooms.jsx","components/RoomsDetails.jsx","components/Home.jsx","components/NotSupport.jsx","components/App.jsx","service/firebase.js","index.js"],"names":["IS_LOGIN_USER","FETCH_PRODUCTS_BEGIN","GET_ERRORS","IS_LOGGED_IN_DATA","IS_LOGOUT_DATA","ROOMS_DATA","RTC_SETTING","ADD_MEDIA","REMOVE_VIDEO","READY_TO_CALL","LOCAL_VIDEO","CONNECTED_LOCAL","DISCONNECTED_WEBCAM","AUDIO_CHECK","ROOM_ADD","ROOM_REMOVE","CHANNEL_CHECK","PASSWORD_CHECK","POP_EVENT_CHECK","POP_ClOSE_CHECK","ROOM_MAINTENANCE","ROOM_TITLE_MATCH","FORMAT_ROOM_PASS","ALERT_MESSAGE_CHANGE","SPINNER_ACTION","ALERT_WARNING","LOGGIN_POP_OPEN","ROOM_REMOVE_POP","IE_CHECK","initialState","items","isLoggedIn","error","isroom","peers","inroom","webrtc","roomname","mute","length","pass","popopen","focusid","focustitle","aboutValueTitle","alertMessage","spinner","alertBoxBottom","alertColor","channelAlertMessage","loggedPopUp","deleteAelrt","ieCehck","rtc","Alert","_ref","gochnanelRoom","passCheckRef","passwordCheck","popClose","inputCancel","react_default","a","createElement","className","onClick","htmlFor","type","name","ref","placeholder","autoFocus","style","color","Main","saveFormData","inputRef","passRef","src","alt","id","components_Alert","LoginAlert","Navbar","loginpopEvent","alertMessageFormat","onLoginButtonClick","signAlert","onLogoutButtonClick","Link","to","url","components_LoginAlert","About","goingRef","goingChannel","Rooms","roomDelete","roomData","popEvent","roomDeletePop","uniqWith","isEqual","map","data","key","_id","title","userName","data-id","data-mail","userMail","RoomsDetails","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","remoteVideos","room_name","match","params","startLoclaVideo","localVideo","AddpeerVideo","joinChat","_this2","_this$props","email","disconnect","handleSelfMute","autoPlay","vid","nick","split","concat","getContainerId","getId","playsInline","Component","Home","window","onpopstate","e","location","pathname","disconnectSet","roomMatch","connection","stopLocalVideo","leaveRoom","history","push","alertMessageChange","init","components_Navbar","Switch","Route","exact","path","render","components_Main","assign","components_About","components_Rooms","Redirect","RoomsDetails_RoomsDetails","bind","localref","alert","React","NotSupport","href","App","usingUserData","channelData","chatRoomUsing","getVersionOfIE","event","preventDefault","channelTitle","inputNode","value","channelPassword","passNode","aboutPopEvent","MainAlertMessageChange","dataId","target","dataset","gochannel","_this$props2","titleEqualCheck","filter","goingChannels","aboutAlertMessageChange","dataTite","passCheck","checkNode","passpostCheck","goMoveChannel","_this$props3","channelcheck","alertHide","formatRoomPassword","loginUser","userlogout","BrowserRouter","_Object$assign","Home_Home","saveFormDatas","roomDeletes","signAlertMessage","defineProperty","components_NotSupport","localHostIp","localHostIpApi","provider","firebase","GoogleAuthProvider","createHistory","forceRefresh","socket","io","removeData","dispatch","roomDataRmove","localStorage","removeItem","connect","state","ownProps","user","signInWithPopup","then","result","credential","accessToken","users","uid","displayName","photoURL","axios","post","res","token","defaults","headers","common","setAuthToken","decoded","jwt_decode","setItem","JSON","stringify","resultBoolean","catch","parse","getItem","userRemove","signOut","on","logedin","roomPassword","callback","titleOverLap","Boolean","every","roommData","emit","booelan","undefined","channelName","deleteMsg","localele","LioWebRTC","localVideoEl","dataOnly","network","maxPeers","minPeers","debug","sessionId","peer","payload","localvideo","start","startLocalVideo","config","targetremote","stream","attachStream","autoplay","joinroom","joinRoom","func","password","roomid","check","item","inputdata","shouldCheck","message","roomObj","roomTitle","targetTitle","popBoolean","isroomdata","roomTitleUrl","isRoomValid","some","roomBoolean","checkVer","word","agent","navigator","userAgent","toLowerCase","appName","search","RegExp","exec","parseFloat","$1","$2","get_version_of_IE","ieBoolean","withref","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","arguments","action","objectSpread","islogedin","loggedTrue","roomCopy","toConsumableArray","dataroom","peerCopy","p","closed","unmute","removeRoom","roomId","removeUpdate","applyMiddleware","logger","ReactDOM","react_redux_es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.0c5e3de2.chunk.js","sourcesContent":["export const IS_LOGIN_USER = 'IS_LOGIN_USER';\nexport const FETCH_PRODUCTS_BEGIN = 'FETCH_PRODUCTS_BEGIN';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const IS_LOGGED_IN_DATA = 'IS_LOGGED_IN_DATA';\nexport const IS_LOGOUT_DATA = 'IS_LOGOUT_DATA';\nexport const ROOMS_DATA = 'ROOMS_DATA';\nexport const RTC_SETTING = 'RTC_SETTING';\nexport const ADD_MEDIA = 'ADD_MEDIA';\nexport const REMOVE_VIDEO = 'REMOVE_VIDEO';\nexport const READY_TO_CALL = 'READY_TO_CALL';\nexport const LOCAL_VIDEO = 'LOCAL_VDIEO';\nexport const CONNECTED_LOCAL = 'CONNECTED_LOCAL';\nexport const DISCONNECTED_WEBCAM = 'DISCONNECTED_WEBCAM';\nexport const AUDIO_CHECK = 'AUDIO_CHECK';\nexport const ROOM_ADD = 'ROOM_ADD';\nexport const ROOM_REMOVE = 'ROOM_REMOVE';\nexport const CHANNEL_CHECK = 'CHANNEL_CHECK';\nexport const PASSWORD_CHECK = 'PASSWORD_CHECK';\nexport const POP_EVENT_CHECK = 'POP_EVENT_CHECK';\nexport const POP_ClOSE_CHECK = 'POP_ClOSE_CHECK';\nexport const ROOM_MAINTENANCE = 'ROOM_MAINTENANCE';\nexport const ROOM_TITLE_MATCH = 'ROOM_TITLE_MATCH';\nexport const FORMAT_ROOM_PASS = 'FORMAT_ROOM_PASS';\nexport const ALERT_MESSAGE_CHANGE = 'ALERT_MESSAGE_CHANGE';\nexport const SPINNER_ACTION = 'SPINNER_ACTION';\nexport const ALERT_WARNING = 'ALERT_WARNING';\nexport const LOGGIN_POP_OPEN = 'LOGGIN_POP_OPEN';\nexport const ROOM_REMOVE_POP = 'ROOM_REMOVE_POP';\nexport const IE_CHECK = 'IE_CHECK';\n\nexport const isLogoutData = () => ({\n  type: IS_LOGOUT_DATA\n});\n\nexport const isLoggedInData = () => ({\n  type: IS_LOGGED_IN_DATA\n});\n\nexport const fetchProductsBegin = () => ({\n  type: FETCH_PRODUCTS_BEGIN\n});\n\nexport const getErrors = () => ({\n  type: GET_ERRORS\n});\n\nexport const roomdData = () => ({\n  type: ROOMS_DATA\n});\n\nexport const isLoginUser = products => ({\n  type: IS_LOGIN_USER\n});\n\n/* video RTC */\nexport const rtcSetting = products => ({\n  type: RTC_SETTING\n});\n\nexport const addMeida = products => ({\n  type: ADD_MEDIA\n});\n\nexport const removeVideo = products => ({\n  type: REMOVE_VIDEO\n});\n\nexport const readyToCall = products => ({\n  type: READY_TO_CALL\n});\n\nexport const localVideo = products => ({\n  type: LOCAL_VIDEO\n});\n\nexport const connectedLocal = products => ({\n  type: CONNECTED_LOCAL\n});\n\nexport const disconnectedWebcam = products => ({\n  type: DISCONNECTED_WEBCAM\n});\n\nexport const audioCheck = products => ({\n  type: AUDIO_CHECK\n});\n\nexport const roomAdd = products => ({\n  type: ROOM_ADD\n});\n\nexport const roomRemove = products => ({\n  type: ROOM_REMOVE\n});\n\nexport const channelCheck = products => ({\n  type: CHANNEL_CHECK\n});\n\nexport const passwordCheck = products => ({\n  type: PASSWORD_CHECK\n});\n\nexport const popEventCheck = products => ({\n  type: POP_EVENT_CHECK\n});\n\nexport const popCloseCheck = products => ({\n  type: POP_ClOSE_CHECK\n});\n\nexport const roomMaintenance = products => ({\n  type: ROOM_MAINTENANCE\n});\n\nexport const roomMatchTtile = products => ({\n  type: ROOM_TITLE_MATCH\n});\n\nexport const formatRoomPass = products => ({\n  type: FORMAT_ROOM_PASS\n});\n\nexport const alertMessageChange = products => ({\n  type: ALERT_MESSAGE_CHANGE\n});\n\nexport const spinnerAction = products => ({\n  type: SPINNER_ACTION\n});\n\nexport const alertWarning = products => ({\n  type: ALERT_WARNING\n});\n\nexport const loginPopOpen = products => ({\n  type: LOGGIN_POP_OPEN\n});\n\nexport const roomRemovePop = products => ({\n  type: ROOM_REMOVE_POP\n});\n\nexport const ieCheck = products => ({\n  type: IE_CHECK\n});\n\n","import LioWebRTC from 'liowebrtc';\nimport { combineReducers } from 'redux';\nimport createHistory from 'history/createBrowserHistory';\nimport {\n\tFETCH_PRODUCTS_BEGIN,\n\tIS_LOGIN_USER,\n\tIS_LOGGED_IN_DATA,\n\tIS_LOGOUT_DATA,\n\tGET_ERRORS,\n\tROOMS_DATA,\n\tRTC_SETTING,\n\tCONNECTED_LOCAL,\n\tLOCAL_VIDEO,\n\tADD_MEDIA,\n\tREMOVE_VIDEO,\n\tREADY_TO_CALL,\n\tDISCONNECTED_WEBCAM,\n\tAUDIO_CHECK,\n\tROOM_ADD,\n\tROOM_REMOVE,\n\tCHANNEL_CHECK,\n\tPASSWORD_CHECK,\n\tPOP_EVENT_CHECK,\n\tPOP_ClOSE_CHECK,\n\tROOM_MAINTENANCE,\n\tROOM_TITLE_MATCH,\n\tFORMAT_ROOM_PASS,\n\tALERT_MESSAGE_CHANGE,\n\tSPINNER_ACTION,\n\tALERT_WARNING,\n\tLOGGIN_POP_OPEN,\n\tROOM_REMOVE_POP,\n\tIE_CHECK\n} from '../actions';\n\nconst initialState = {\n\titems: {},\n\tisLoggedIn: false,\n\terror: null,\n\tisroom: [],\n\tpeers: [],\n\tinroom: false,\n\twebrtc: null,\n\troomname: '',\n\tmute: false,\n\tlength: 0,\n\tpass: false,\n\tpopopen: false,\n\tfocusid: '',\n\tfocustitle: '',\n\taboutValueTitle: '',\n\talertMessage: '회의실 패스워드를 입력해주세요.',\n\tspinner: false,\n\talertBoxBottom: '',\n\talertColor: '#3c29aa',\n\tchannelAlertMessage: false,\n\tloggedPopUp: false,\n\tdeleteAelrt: false,\n\tieCehck : ''\n};\n\nexport default function productReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FETCH_PRODUCTS_BEGIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tislogedin: false,\n\t\t\t\titems: {},\n\t\t\t\tisroom: []\n\t\t\t};\n\n\t\tcase IS_LOGIN_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: true,\n\t\t\t\titems: action.data\n\t\t\t};\n\n\t\tcase IS_LOGGED_IN_DATA:\n\t\t\tlet user = Boolean(action.data) ? action.data : {};\n\t\t\tlet loggedTrue = Boolean(action.data) ? true : false;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: loggedTrue,\n\t\t\t\titems: user\n\t\t\t}\n\n\t\tcase IS_LOGOUT_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: false,\n\t\t\t\titems: {}\n\t\t\t}\n\n\t\tcase ROOMS_DATA:\n\t\t\tlet roomCopy = [...action.data, ...state.isroom];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: roomCopy\n\t\t\t}\n\n\t\tcase ROOM_ADD:\n\t\t\tconst dataroom = [...state.isroom, action.data];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: dataroom\n\t\t\t}\n\n\t\tcase ROOM_REMOVE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeleteAelrt: action.deleteMsg\n\t\t\t}\n\n\t\tcase RTC_SETTING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\twebrtc: action.payload\n\t\t\t};\n\n\t\tcase ADD_MEDIA:\n\t\t\tlet peerCopy = [...state.peers, action.peer];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpeers: peerCopy\n\t\t\t};\n\n\t\tcase REMOVE_VIDEO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpeers: state.peers.filter(p => !p.closed)\n\t\t\t};\n\n\t\tcase READY_TO_CALL:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase LOCAL_VIDEO:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase CONNECTED_LOCAL:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase DISCONNECTED_WEBCAM:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase AUDIO_CHECK:\n\t\t\t(state.mute) ? action.func.unmute() : action.func.mute();\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmute: !state.mute\n\t\t\t};\n\n\t\tcase CHANNEL_CHECK:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t}\n\n\t\tcase PASSWORD_CHECK:\n\t\t\tif (action.result) {\n\t\t\t\tstate.inroom = true\n\t\t\t} else {\n\t\t\t\tstate.inroom = false\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpass: action.result,\n\t\t\t\tfocustitle: action.title,\n\t\t\t\tspinner: false\n\t\t\t}\n\n\t\tcase POP_EVENT_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopopen: action.booelan,\n\t\t\t\tfocusid: action.dataId,\n\t\t\t\taboutValueTitle: action.targetTitle\n\t\t\t}\n\n\t\tcase FORMAT_ROOM_PASS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpass: action.pass\n\t\t\t}\n\n\t\tcase POP_ClOSE_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopopen: action.booelan,\n\t\t\t\tloggedPopUp: action.popBoolean,\n\t\t\t\tdeleteAelrt: action.deleteMsg\n\t\t\t}\n\n\t\tcase ROOM_MAINTENANCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopopen: action.booelan,\n\t\t\t\tpass: action.data\n\t\t\t}\n\n\t\tcase ROOM_TITLE_MATCH:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinroom: action.roomBoolean\n\t\t\t}\n\n\t\tcase ALERT_MESSAGE_CHANGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\talertMessage: action.message\n\t\t\t}\n\n\t\tcase SPINNER_ACTION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tspinner: action.check\n\t\t\t}\n\n\t\tcase ALERT_WARNING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\talertBoxBottom: action.alert,\n\t\t\t\talertColor: action.color,\n\t\t\t\tchannelAlertMessage: action.resultBoolean\n\t\t\t}\n\n\t\tcase ROOM_REMOVE_POP:\n\t\t\tconst removeRoom = state.isroom;\n\t\t\tconst roomId = action.data;\n\t\t\tconst removeUpdate = removeRoom.filter((data) => roomId !== data._id);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: removeUpdate,\n\t\t\t\tdeleteAelrt: action.deleteMsg\n\t\t\t}\n\n\t\tcase LOGGIN_POP_OPEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloggedPopUp: action.popBoolean\n\t\t\t}\n\n\t\tcase IE_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tieCehck: action.ieBoolean\n\t\t\t}\n\n\t\tcase GET_ERRORS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: {},\n\t\t\t\tisLoggedIn: false\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import { connect } from \"react-redux\";\nimport io from 'socket.io-client';\nimport { bindActionCreators } from 'redux'\nimport React, { Component } from 'react';\nimport { debounce } from \"lodash\";\nimport * as firebase from 'firebase';\nimport LioWebRTC from 'liowebrtc';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport {\n  IS_LOGIN_USER,\n  IS_LOGGED_IN_DATA,\n  IS_LOGOUT_DATA,\n  GET_ERRORS,\n  ROOMS_DATA,\n  CONNECTED_LOCAL,\n  LOCAL_VIDEO,\n  RTC_SETTING,\n  ADD_MEDIA,\n  REMOVE_VIDEO,\n  READY_TO_CALL,\n  AUDIO_CHECK,\n  ROOM_ADD,\n  ROOM_REMOVE,\n  CHANNEL_CHECK,\n  PASSWORD_CHECK,\n  POP_EVENT_CHECK,\n  POP_ClOSE_CHECK,\n  ROOM_MAINTENANCE,\n  ROOM_TITLE_MATCH,\n  FORMAT_ROOM_PASS,\n  ALERT_MESSAGE_CHANGE,\n  SPINNER_ACTION,\n  ALERT_WARNING,\n  LOGGIN_POP_OPEN,\n  ROOM_REMOVE_POP,\n  IE_CHECK\n} from '../actions';\nimport App from \"../components/App.jsx\";\nimport createHistory from 'history/createBrowserHistory';\n\nlet rtc;\nconst simpLioRTC = 'https://sm1.lio.app:443/';\nconst localHostIp = 'https://videos-conf-service.herokuapp.com/';\nconst localHostIpApi = `${localHostIp}api/auth/`;\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst history = createHistory({ forceRefresh: true });\nconst socket = io(localHostIp);\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nconst get_version_of_IE = () => {\n  var word;\n  var agent = navigator.userAgent.toLowerCase();\n  if (navigator.appName == \"Microsoft Internet Explorer\") {\n    word = \"msie \";\n  } else if (agent.search(\"trident\") > -1) {\n    word = \"trident/.*rv:\";\n  } else if (agent.search(\"edge/\") > -1) {\n    word = \"edge/\";\n  } else {\n    return -1;\n  }\n  var reg = new RegExp(word + \"([0-9]{1,})(\\\\.{0,}[0-9]{0,1})\");\n  if (reg.exec(agent) != null) return parseFloat(RegExp.$1 + RegExp.$2);\n  return -1;\n}\n\nconst removeData = (dispatch) => {\n  let roomDataRmove = localStorage.removeItem('roomPassResults');\n  let roomNull = roomDataRmove === null ? false : null\n  dispatch({\n    type: ROOM_MAINTENANCE,\n    data: roomNull\n  });\n}\n\nconst mapStateToProps = state => ({\n  items: state.items,\n  isLoggedIn: state.isLoggedIn,\n  error: state.error,\n  isroom: state.isroom,\n  inroom: state.inroom,\n  peers: state.peers,\n  webrtc: state.webrtc,\n  mute: state.mute,\n  length: state.length,\n  popopen: state.popopen,\n  focusid: state.focusid,\n  pass: state.pass,\n  focustitle: state.focustitle,\n  aboutValueTitle: state.aboutValueTitle,\n  alertMessage: state.alertMessage,\n  spinner: state.spinner,\n  alertBoxBottom: state.alertBoxBottom,\n  alertColor: state.alertColor,\n  channelAlertMessage: state.channelAlertMessage,\n  loggedPopUp: state.loggedPopUp,\n  deleteAelrt: state.deleteAelrt,\n  ieCehck: state.ieCehck\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    loginUser: (user) => {\n      firebase.auth().signInWithPopup(provider).then(result => {\n        let token = result.credential.accessToken;\n        let users = result.user;\n        let loginUser = {\n          uid: users.uid,\n          name: users.displayName,\n          url: users.photoURL,\n          email: users.email\n        }\n        axios.post(`${localHostIpApi}login`, loginUser).then(res => {\n          const { token } = res.data;\n          setAuthToken(token);\n          const decoded = jwt_decode(token);\n          dispatch({\n            type: IS_LOGIN_USER,\n            data: decoded\n          });\n          localStorage.setItem('user', JSON.stringify(decoded));\n        });\n        dispatch({\n          type: ALERT_WARNING,\n          alert: '패스워드를 입력해주세요.',\n          color: '#3f46ad',\n          resultBoolean: false\n        });\n      }).catch(error => {\n        dispatch({ type: GET_ERRORS, error });\n      });\n    },\n    usingUserData: () => {\n      let user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: IS_LOGGED_IN_DATA,\n        data: user\n      });\n    },\n    userlogout: () => {\n      let userRemove = localStorage.removeItem('user');\n      firebase.auth().signOut().then(() => {\n        dispatch({\n          type: IS_LOGOUT_DATA,\n          data: userRemove\n        });\n        dispatch({\n          type: ALERT_WARNING,\n          alert: '패스워드를 입력해주세요.',\n          color: '#3f46ad',\n          resultBoolean: false\n        });\n      }).catch(error => {\n        dispatch({ type: GET_ERRORS, error });\n      });\n    },\n    channelData: () => {\n      socket.on('initialList', (data) => {\n        dispatch({\n          type: ROOMS_DATA,\n          data\n        });\n      });\n      socket.on('itemAdded', (data) => {\n        dispatch({\n          type: ROOM_ADD,\n          data\n        });\n      });\n      socket.on('itemRemove', (data) => {\n        dispatch({\n          type: ROOM_REMOVE_POP,\n          data\n        });\n      });\n    },\n    saveFormData: (logedin, items, title, roomPassword, isroom, callback) => {\n      removeData(dispatch)\n      let titleOverLap = Boolean(isroom.every(roommData => roommData.title !== title));\n      if (logedin) {\n        if (title.length > 1 && title.length < 11 && roomPassword.length > 1 && roomPassword.length < 11) {\n          let data = {\n            title,\n            roomPassword,\n            userName: items.name,\n            userMail: items.email\n          };\n          dispatch({\n            type: ALERT_WARNING,\n            alert: '패스워드를 입력해주세요.',\n            color: '#3f46ad',\n            resultBoolean: false\n          });\n          if (titleOverLap || isroom === []) {\n            socket.emit('addItem', data);\n            dispatch({\n              type: POP_EVENT_CHECK,\n              booelan: true,\n              title\n            })\n            callback(title)\n          } else {\n            dispatch({\n              type: ALERT_WARNING,\n              alert: '중복된 채널이 있습니다.',\n              color: '#e30641',\n              resultBoolean: true\n            });\n          }\n        } else {\n          dispatch({\n            type: ALERT_WARNING,\n            alert: '채널 제목 및 패스워드는 2글자 이상 11글자 미만이에요.\\n다시 한번 작성해주세요',\n            color: '#e30641',\n            resultBoolean: true\n          });\n        }\n      } else {\n        dispatch({\n          type: ALERT_WARNING,\n          alert: '로그인을 해주셔야, 채널을 생성 하실 수 있습니다.',\n          color: '#e30641',\n          resultBoolean: true\n        });\n      }\n    },\n    goingChannels: (isLoggedIn, channelTitle, isroom, titleEqualCheck, callback) => {\n      removeData(dispatch)\n      if (isLoggedIn) {\n        if (channelTitle.length > 1 && channelTitle.length < 11) {\n          if (titleEqualCheck !== undefined) {\n            if (titleEqualCheck.title === channelTitle) {\n              callback(channelTitle);\n              dispatch({\n                type: ALERT_WARNING,\n                alert: '패스워드를 입력해주세요.',\n                color: '#3f46ad',\n                resultBoolean: false\n              });\n            }\n          } else {\n            dispatch({\n              type: ALERT_WARNING,\n              alert: '채널 목록에 없는 채널입니다.',\n              color: '#e30641',\n              resultBoolean: true\n            });\n          }\n        } else {\n          dispatch({\n            type: ALERT_WARNING,\n            alert: '채널 제목은 2글자 미만이거나, 11글자 이상 일 수 없습니다.',\n            color: '#e30641',\n            resultBoolean: true\n          });\n        }\n      } else {\n        dispatch({\n          type: ALERT_WARNING,\n          alert: '로그인을 해주셔야, 채널에 입장 하실 수 있습니다.',\n          color: '#e30641',\n          resultBoolean: true\n        });\n      }\n    },\n    goMoveChannel: (channelName) => {\n      history.push(`/rooms/${channelName}`)\n    },\n    roomDelete: (id) => {\n      localStorage.setItem('roomObjId', JSON.stringify(id));\n      dispatch({\n        type: ROOM_REMOVE,\n        deleteMsg: true\n      });\n    },\n    roomDeletePop: () => {\n      const id = JSON.parse(localStorage.getItem('roomObjId'));\n      dispatch({\n        type: ROOM_REMOVE_POP,\n        deleteMsg: false\n      });\n      socket.emit('removeItem', id);\n    },\n    init: (localele) => {\n      let user = JSON.parse(localStorage.getItem('user'));\n      let email = (user !== null) ? `${user.name},${user.url}` : 'Not user';\n      rtc = new LioWebRTC({\n        url: simpLioRTC,\n        localVideoEl: '',\n        dataOnly: false,\n        network: {\n          maxPeers: 2,\n          minPeers: 1\n        },\n        debug: false,\n        nick: email\n      });\n      rtc\n        .on('connectionReady', (sessionId) => {\n          dispatch({\n            type: CONNECTED_LOCAL,\n            sessionId\n          });\n        })\n        .on('videoRemoved', (peer) => {\n          dispatch({\n            type: REMOVE_VIDEO,\n            peer\n          });\n        });\n      dispatch({ type: RTC_SETTING, payload: rtc });\n    },\n    startLoclaVideo: (localvideo) => {\n      dispatch({ type: LOCAL_VIDEO, start: rtc.startLocalVideo() });\n      if (localvideo) {\n        rtc.config.localVideoEl = localvideo;\n      } else {\n        rtc.config.localVideoEl = localvideo;\n      }\n    },\n    AddpeerVideo: (targetremote) => {\n      rtc.on('videoAdded', (stream, peer) => {\n        if (targetremote) {\n          dispatch({\n            type: ADD_MEDIA,\n            peer,\n            rtc\n          });\n          rtc.attachStream(stream, targetremote[peer.id], { autoplay: true });\n        }\n      })\n    },\n    joinChat: (roomname) => {\n      rtc.on('readyToCall', () => {\n        if (roomname !== undefined) {\n          dispatch({\n            type: READY_TO_CALL,\n            joinroom: rtc.joinRoom(roomname)\n          });\n        }\n      });\n    },\n    handleSelfMute: (e) => {\n      dispatch({\n        type: AUDIO_CHECK,\n        func: rtc\n      });\n    },\n    passpostCheck: (password, roomid, isroom, dataTite, event) => {\n      event.preventDefault();\n      dispatch({\n        type: SPINNER_ACTION,\n        check: true\n      });\n      isroom.filter(item => {\n        if (item._id === roomid || item.title === dataTite) {\n          if (password.length >= 1) {\n            const inputdata = {\n              password,\n              roomid: item._id\n            }\n            axios.post(`${localHostIp}passcheck`, inputdata)\n              .then(data => {\n                const shouldCheck = data.data.message;\n                dispatch({\n                  type: PASSWORD_CHECK,\n                  result: shouldCheck,\n                  title: item.title\n                })\n                const roomObj = {\n                  item,\n                  shouldCheck\n                }\n                if (shouldCheck === true) {\n                  localStorage.setItem('roomPassResults', JSON.stringify(roomObj));\n                  dispatch({\n                    type: ALERT_WARNING,\n                    alert: '패스워드를 입력해주세요.',\n                    color: '#3f46ad'\n                  });\n                } else {\n                  localStorage.setItem('roomPassResults', JSON.stringify(roomObj));\n                  dispatch({\n                    type: SPINNER_ACTION,\n                    check: false\n                  });\n                  dispatch({\n                    type: ALERT_WARNING,\n                    alert: '패스워드를 잘못 입력하셨습니다.',\n                    color: '#e30641'\n                  });\n                }\n              })\n              .catch(error => {\n                dispatch({ type: GET_ERRORS, error });\n              });\n          } else {\n            dispatch({\n              type: SPINNER_ACTION,\n              check: false\n            });\n            dispatch({\n              type: ALERT_WARNING,\n              alert: '패스워드가 입력되지 않았습니다.',\n              color: '#e30641'\n            });\n          }\n        }\n      });\n    },\n    chatRoomUsing: () => {\n      let roomData = JSON.parse(localStorage.getItem('roomPassResults'));\n      let roomTitle = history.location.pathname.split('/rooms/')[1];\n      if (roomTitle !== undefined && roomData !== null) {\n        if (history.location.pathname.split('/rooms/')[1] && roomData !== null) {\n          if (roomTitle === roomData.item.title && roomData.shouldCheck) {\n            dispatch({\n              type: ROOM_MAINTENANCE,\n              data: roomData.shouldCheck\n            });\n          } else {\n            dispatch({\n              type: ROOM_MAINTENANCE,\n              data: false\n            });\n          }\n        }\n      }\n    },\n    popEvent: (event) => {\n      const dataId = event.target.dataset.id;\n      dispatch({\n        type: POP_EVENT_CHECK,\n        booelan: true,\n        dataId\n      });\n      dispatch({\n        type: ALERT_MESSAGE_CHANGE,\n        message: `채널 패스워드를 입력해주세요.`\n      });\n      dispatch({\n        type: ALERT_WARNING,\n        alert: '채널 패스워드를 입력해주세요.',\n        color: '#3f46ad'\n      });\n    },\n    aboutPopEvent: (targetTitle) => {\n      dispatch({\n        type: POP_EVENT_CHECK,\n        booelan: true,\n        targetTitle\n      });\n    },\n    popClose: () => {\n      removeData(dispatch)\n      dispatch({\n        type: POP_ClOSE_CHECK,\n        booelan: false,\n        popBoolean: false,\n        deleteMsg: false\n      });\n      dispatch({\n        type: ALERT_WARNING,\n        alert: '패스워드를 입력해주세요.',\n        color: '#3f46ad',\n        resultBoolean: false\n      });\n    },\n    inputCancel: () => {\n      dispatch({\n        type: POP_ClOSE_CHECK,\n        booelan: false\n      });\n    },\n    formatRoomPassword: () => {\n      let roomDataRmove = localStorage.removeItem('roomPassResults');\n      if (history.location.pathname.split('/rooms/')[1]) {\n        dispatch({\n          type: FORMAT_ROOM_PASS,\n          data: null,\n          pass: true\n        });\n      }\n    },\n    roomMatch: (isroomdata) => {\n      let roomTitleUrl = history.location.pathname.split('/rooms/')[1];\n      if (history.location.pathname.split('/rooms/')[1]) {\n        let title = isroomdata.map(data => data.title);\n        let isRoomValid = title.some(item => item === roomTitleUrl);\n        if (isRoomValid) {\n          dispatch({\n            type: ROOM_TITLE_MATCH,\n            roomBoolean: true\n          });\n        } else {\n          dispatch({\n            type: ROOM_TITLE_MATCH,\n            roomBoolean: false\n          });\n        }\n      }\n    },\n    MainAlertMessageChange: () => {\n      dispatch({\n        type: ALERT_MESSAGE_CHANGE,\n        message: '채널이 생성되었습니다.\\n지금 바로 입장하실려면 패스워드를 입력해주세요.'\n      });\n    },\n    aboutAlertMessageChange: () => {\n      dispatch({\n        type: ALERT_MESSAGE_CHANGE,\n        message: `채널 패스워드를 입력해주세요.`\n      });\n    },\n    alertMessageFormat: () => {\n      dispatch({\n        type: ALERT_WARNING,\n        alert: '패스워드를 입력해주세요.',\n        color: '#3f46ad',\n        resultBoolean: false\n      });\n    },\n    loginpopEvent: () => {\n      dispatch({\n        type: LOGGIN_POP_OPEN,\n        popBoolean: true\n      })\n    },\n    getVersionOfIE: () => {\n      let checkVer = get_version_of_IE();\n      if (checkVer == -1) {\n        dispatch({\n          type : IE_CHECK,\n          ieBoolean : true\n        })\n      }\n      else {\n        dispatch({\n          type : IE_CHECK,\n          ieBoolean : false\n        })\n      }\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { withref: true })(App);\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Alert = ({ gochnanelRoom, spinner, passCheckRef, passwordCheck, popClose, pass, focustitle, inputCancel, alertMessage, alertBoxBottom, alertColor }) => {\n  return (\n    <div className=\"AlertBox\">\n      <div className=\"loginContent\">\n        <div className=\"close-btn\">\n          <i className=\"fas fa-times\" onClick={popClose}></i>\n        </div>\n        <form>\n          <h3>{alertMessage}</h3>\n          <label htmlFor=\"pass_check\">\n            <input type=\"password\" name=\"pass_check\" ref={passCheckRef} placeholder='패스워드' autoFocus />\n            <button name=\"pass_check\" onClick={passwordCheck} >\n              check\n              {\n                spinner ?  <i className=\"fas fa-spinner\"></i> : null\n              }\n            </button>\n          </label>\n        </form>\n        <div className=\"pass-check\">\n          {\n            pass ?\n              <p className=\"sucess-password\" onClick={gochnanelRoom}>패스워드가 일치합니다. 참여하실려면 클릭해주세요.</p> : <p style={{ color : alertColor }}>{alertBoxBottom}</p>\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Alert;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Alert from './Alert.jsx';\n\nconst Main = ({ gochnanelRoom, channelAlertMessage, saveFormData, inputRef, passRef, passCheckRef, passwordCheck, popClose, pass, focustitle, inputCancel, popopen, alertMessage, spinner, alertBoxBottom, alertColor }) => {\n  return (\n    <div className=\"meeting-room-create\">\n      <div className=\"rooms_title\">\n        <form>\n          <label htmlFor=\"rooms_title\">\n            <h1>\n              <img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/logo.png?raw=true\" alt=\"\" />\n            </h1>\n            <div className=\"inputbox\">\n              <input type=\"text\" id=\"rooms_title\" name=\"rooms_title\" ref={inputRef} placeholder=\"안녕하세요. 채널을 생성해주세요.\" />\n              <input type=\"password\" id=\"rooms_password\" name=\"rooms_title\" ref={passRef} placeholder=\"패스워드도 설정해주세요.\" />\n            </div>\n            <button name=\"rooms_title\" onClick={saveFormData} >Create!</button>\n            {\n              channelAlertMessage ?\n                <p className=\"goingChannel-Check-Message\" style={{ color: alertColor }}>{alertBoxBottom}</p> :\n                null\n            }\n          </label>\n        </form>\n      </div>\n      {\n        (popopen) ?\n          <Alert gochnanelRoom={gochnanelRoom} alertColor={alertColor} alertBoxBottom={alertBoxBottom} spinner={spinner} alertMessage={alertMessage} passCheckRef={passCheckRef} passwordCheck={passwordCheck} popClose={popClose} pass={pass} focustitle={focustitle} inputCancel={inputCancel} /> :\n          null\n      }\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LoginAlert = ({ popClose }) => {\n  return (\n    <div className=\"AlertBox\">\n      <div className=\"loginContent\">\n        <div className=\"close-btn\">\n          <i className=\"fas fa-times\" onClick={popClose}></i>\n        </div>\n        <h2>로그인을 해주세요.</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginAlert;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginAlert from './LoginAlert.jsx';\n\nconst Navbar = ({ loggedPopUp, popopen, popClose, loginpopEvent, isLoggedIn, alertMessageFormat, signAlert, onLoginButtonClick, onLogoutButtonClick, items}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"navbar-start\">\n        <div className=\"nav-content\">\n          <div className=\"nav-menu\">\n            <dl>\n              <dt><Link onClick={alertMessageFormat} to=\"/\"><img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/logo.png?raw=true\" alt=\"\"/></Link></dt>\n              <dd>\n                <Link onClick={alertMessageFormat} to=\"/about\">About</Link>\n              </dd>\n              <dd>\n                {\n                  (isLoggedIn) ?\n                    <Link onClick={alertMessageFormat} to=\"/rooms\">Channel List</Link> :\n                    <p onClick={loginpopEvent}>Channel List</p>\n                }\n              </dd>\n              <dd>\n                {\n                  (isLoggedIn) ?\n                    <p onClick={onLogoutButtonClick}>Sign Out</p> :\n                    <p onClick={onLoginButtonClick}>Sign In</p>\n                }\n              </dd>\n            </dl>\n          </div>\n          <div className=\"user-info-nav\">\n            {\n              (isLoggedIn) ?\n                <p className=\"userIn\"><img src={items.url} /> <strong>{items.name}</strong>님 안녕하세요.</p> :\n                <p>로그인을 해주세요.</p>\n            }\n          </div>\n        </div>\n      </div>\n      {\n        (loggedPopUp) ?\n          <LoginAlert popClose={popClose} /> :\n          null\n      }\n    </div>\n  );\n};\n\nexport default Navbar;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Alert from './Alert.jsx';\n\nconst About = ({ gochnanelRoom, channelAlertMessage, goingRef, goingChannel, passCheckRef, passwordCheck, popClose, pass, focustitle, popopen, inputCancel, alertMessage, spinner, alertBoxBottom, alertColor }) => {\n\treturn (\n\t\t<div className=\"about\">\n\t\t\t<div className=\"about-content\">\n\t\t\t\t<div className=\"about-img\"></div>\n\t\t\t\t<div className=\"about-info-text\">\n\t\t\t\t\t<h2>Videos Conf</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t언제 어디서든 노트북만 있으면, 화상회의를<br />시작하실 수 있습니다.\n\t\t\t\t\t\t지금 바로 시작해보세요.\n\t\t\t\t\t </p>\n\t\t\t\t\t<div className=\"goingChannel\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<label htmlFor=\"going_channel\">\n\t\t\t\t\t\t\t\t<input type=\"text\" id=\"going_channel\" name=\"going_channel\" ref={goingRef} placeholder=\"채널 제목을 입력해주세요!\" />\n\t\t\t\t\t\t\t\t<button name=\"going_channel\" onClick={goingChannel} >Go!</button>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tchannelAlertMessage ?\n\t\t\t\t\t\t\t\t\t\t<p className=\"goingChannel-Check-Message\" style={{ color: alertColor }}>{alertBoxBottom}</p> :\n\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\t(popopen) ?\n\t\t\t\t\t<Alert gochnanelRoom={gochnanelRoom} alertColor={alertColor} alertBoxBottom={alertBoxBottom} spinner={spinner} alertMessage={alertMessage} passCheckRef={passCheckRef} passwordCheck={passwordCheck} popClose={popClose} pass={pass} focustitle={focustitle} inputCancel={inputCancel} /> :\n\t\t\t\t\tnull\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default About;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from \"react-router-dom\";\nimport { uniqWith, isEqual } from \"lodash\";\nimport Alert from './Alert.jsx';\n\nconst Rooms = ({ gochnanelRoom, deleteAelrt, spinner, roomDelete, roomData, passCheckRef, passwordCheck, items, popopen, popEvent, popClose, roomDeletePop, pass, focustitle, inputCancel, alertMessage, alertBoxBottom, alertColor }) => {\n  return (\n    <div className=\"rooms-list\">\n      <dl>\n        <dt>\n          <h2 className=\"title\">\n            Enjoy Channel\n            <em>여기는 채널 리스트입니다.</em>\n          </h2>\n        </dt>\n        { \n          (roomData.length) ?\n          uniqWith(roomData, isEqual).map(data => {\n            return (\n              <dd key={data._id}>\n                <h3>\n                  {data.title}\n                  <p> Organiser {data.userName}</p>\n                </h3>\n                <div className=\"del-enter\">\n                  <button onClick={popEvent} data-id={data._id}>\n                    <i className=\"fas fa-sign-in-alt\" data-id={data._id}></i>\n                  </button>\n                  {\n                    (data.userName === items.name) ?\n                      <button onClick={roomDelete} data-mail={data.userMail} data-id={data._id} >\n                        <i className=\"fas fa-trash\" data-mail={data.userMail} data-id={data._id} ></i>\n                      </button> : null\n                  }\n                </div>\n              </dd>\n            );\n          }) :\n          <dd className=\"no-channel\">현재 채널이 없습니다. 생성해주세요.</dd>\n        }\n      </dl>\n      {\n        (popopen) ?\n          <Alert gochnanelRoom={gochnanelRoom} alertColor={alertColor} alertBoxBottom={alertBoxBottom} spinner={spinner} alertMessage={alertMessage} passCheckRef={passCheckRef} passwordCheck={passwordCheck} popClose={popClose} pass={pass} focustitle={focustitle} inputCancel={inputCancel} /> :\n          null\n      }\n      {\n        (deleteAelrt) ?\n          <div className=\"removeAlertBox\">\n            <div className=\"loginContent\">\n              <div className=\"close-btn\">\n                <i className=\"fas fa-times\" onClick={roomDeletePop}></i>\n              </div>\n              <h2>채널이 삭제 되었습니다.</h2>\n            </div>\n          </div> :\n          null\n      }\n    </div>\n  );\n};\n\nexport default Rooms;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { uniqWith, isEqual } from \"lodash\";\n\nexport default class RoomsDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.remoteVideos = {};\n  }\n\n  componentDidMount() {\n    const { room_name } = this.props.match.params;\n    this.webrtc = this.props.webrtc;\n    this.props.startLoclaVideo(this.localVideo);\n    this.props.AddpeerVideo(this.remoteVideos);\n    this.props.joinChat(room_name);\n  }\n\n  render() {\n    const { peers, email, url, AddpeerVideo, webrtc, disconnect, handleSelfMute, mute } = this.props;\n    const { room_name } = this.props.match.params;\n    return (\n      <div className=\"details-box\">\n        <div className=\"sidebar local\">\n          <h2>\n            {room_name}\n          </h2>\n          <div className=\"localBox\">\n            <video id='localVideo' autoPlay={true} ref={(vid) => this.localVideo = vid} />\n            <div className=\"nick\">\n              <p> {email} </p>\n            </div>\n          </div>\n          <div className=\"buttons\">\n            <button onClick={handleSelfMute}>\n              {\n                (mute) ?\n                  <i className=\"fas fa-volume-up\"></i> :\n                  <i className=\"fas fa-volume-mute\"></i>\n              }\n            </button>\n            <button onClick={disconnect}>\n              <i className=\"fas fa-sign-out-alt\"></i>\n            </button>\n          </div>\n          <div className=\"remotePeerList\">\n            <h3><em><i className=\"far fa-user\"></i>{peers.length + 1}</em>Member</h3>\n            <ul>\n              <li> <img src={url} alt=\"\" /> <p>{email}</p></li>\n              {\n                peers.map(name => <li key={name.id}> <img src={name.nick.split(',')[1]} alt=\"\" /> <p>{name.nick.split(',')[0]}</p></li>)\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"remotevideo\" >\n          <div className=\"remoteList\">\n            {\n              uniqWith(peers, isEqual).map(data => (\n                <div className=\"vidContainer\" key={data.id} id={`${webrtc.getContainerId(data)}`} >\n                  <video id={webrtc.getId(data)} autoPlay={true} ref={(vid) => this.remoteVideos[data.id] = vid} playsInline />\n                  <div className=\"nick\">\n                    <p>{data.nick.split(',')[0]}</p>\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Main from './Main.jsx';\nimport Navbar from './Navbar.jsx';\nimport About from './About.jsx';\nimport Rooms from './Rooms.jsx';\nimport RoomsDetails from './RoomsDetails.jsx';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    window.onpopstate = e => {\n      this.props.popClose();\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.props.location.pathname.split('/rooms/')[1]) {\n      this.disconnectSet();\n    }\n    this.props.roomMatch(this.props.isroom);\n  }\n\n  disconnectSet() {\n    this.props.webrtc.connection.disconnect();\n    this.props.webrtc.stopLocalVideo();\n    this.props.webrtc.leaveRoom();\n  }\n\n  disconnect() {\n    this.props.history.push('/rooms');\n    this.props.alertMessageChange();\n    this.props.popClose();\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      inputRef,\n      goingRef,\n      items,\n      isroom,\n      init,\n      peers,\n      inroom,\n      webrtc,\n      saveFormData,\n      AddpeerVideo,\n      joinChat,\n      startLoclaVideo,\n      handleSelfMute,\n      goingChannel,\n      passRef,\n      passCheckRef,\n      passwordCheck,\n      pass,\n      mute,\n      popopen,\n      popEvent,\n      popClose,\n      focustitle,\n      inputCancel,\n      alertMessage,\n      spinner,\n      alertBoxBottom,\n      alertColor,\n      channelAlertMessage,\n      alertMessageFormat,\n      onLogoutButtonClick,\n      onLoginButtonClick,\n      signAlert,\n      loginpopEvent,\n      loggedPopUp,\n      deleteAelrt,\n      roomDeletePop,\n      gochnanelRoom } = this.props;\n    return (\n      <div id=\"app\" className=\"container\">\n        <Navbar\n          items={items}\n          loginpopEvent={loginpopEvent}\n          loggedPopUp={loggedPopUp}\n          isLoggedIn={isLoggedIn}\n          signAlert={signAlert}\n          onLoginButtonClick={onLoginButtonClick}\n          onLogoutButtonClick={onLogoutButtonClick}\n          alertMessageFormat={alertMessageFormat}\n          alertBoxBottom={alertBoxBottom}\n          popEvent={popEvent}\n          popClose={popClose}\n          popopen={popopen}\n        />\n        <Switch>\n          <Route exact path=\"/\" render={props => {\n            return (\n              <Main\n                {...props}\n                spinner={spinner}\n                isLoggedIn={isLoggedIn}\n                saveFormData={saveFormData}\n                inputRef={inputRef}\n                passRef={passRef}\n                pass={pass}\n                popEvent={popEvent}\n                popClose={popClose}\n                popopen={popopen}\n                passwordCheck={passwordCheck}\n                passCheckRef={passCheckRef}\n                focustitle={focustitle}\n                alertMessage={alertMessage}\n                alertBoxBottom={alertBoxBottom}\n                alertColor={alertColor}\n                channelAlertMessage={channelAlertMessage}\n                gochnanelRoom={gochnanelRoom}\n              />\n            );\n          }} />\n          <Route exact path=\"/about\" render={props => {\n            return (\n              <About\n                {...props}\n                spinner={spinner}\n                goingRef={goingRef}\n                goingChannel={goingChannel}\n                pass={pass}\n                channelAlertMessage={channelAlertMessage}\n                popEvent={popEvent}\n                popClose={popClose}\n                popopen={popopen}\n                passwordCheck={passwordCheck}\n                passCheckRef={passCheckRef}\n                focustitle={focustitle}\n                inputCancel={inputCancel}\n                alertMessage={alertMessage}\n                alertBoxBottom={alertBoxBottom}\n                alertColor={alertColor}\n                gochnanelRoom={gochnanelRoom}\n              />\n            );\n          }} />\n          <Route exact path=\"/rooms\" render={props => {\n            if (isLoggedIn) {\n              return (\n                <Rooms\n                  spinner={spinner}\n                  popClose={popClose}\n                  popopen={popopen}\n                  pass={pass}\n                  items={items}\n                  roomData={isroom}\n                  roomDelete={this.props.roomDelete}\n                  passCheckRef={passCheckRef}\n                  passwordCheck={passwordCheck}\n                  popEvent={popEvent}\n                  focustitle={focustitle}\n                  inputCancel={inputCancel}\n                  alertMessage={alertMessage}\n                  alertBoxBottom={alertBoxBottom}\n                  alertColor={alertColor}\n                  deleteAelrt={deleteAelrt}\n                  roomDeletePop={roomDeletePop}\n                  gochnanelRoom={gochnanelRoom}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }} />\n          <Route exact path=\"/rooms/:room_name\" render={props => {\n            let email = items.name ? items.name : 'null';\n            if (isLoggedIn && isroom) {\n              if (pass) {\n                return (\n                  <RoomsDetails\n                    {...props}\n                    init={init}\n                    email={email}\n                    url={items.url}\n                    peers={peers}\n                    webrtc={webrtc}\n                    inroom={inroom}\n                    isroom={isroom}\n                    startLoclaVideo={startLoclaVideo}\n                    AddpeerVideo={AddpeerVideo}\n                    joinChat={joinChat}\n                    mute={mute}\n                    pass={pass}\n                    disconnect={this.disconnect.bind(this)}\n                    handleSelfMute={handleSelfMute}\n                    localref={(vid) => this.localVideo = vid}\n                  />\n                );\n              } else {\n                alert('잘못된 접근입니다.');\n                return <Redirect to=\"/rooms\" />;\n              }\n            } else {\n              return <span>Loading...</span>;\n            }\n          }} />\n          <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst NotSupport = () => {\n  return (\n    <div className=\"NotSupport\">\n      <p>\n        현재 이 서비스는 익스플로러를 지원 하지 않습니다.\n        <br />크롬을 다운 후 실행시켜주세요.\n        <a href=\"https://www.google.com/intl/ko_ALL/chrome/\">CHROME 다운로드</a>\n      </p>\n      <p className=\"NotSupportText\">Not Support</p>\n    </div>\n  );\n};\n\nexport default NotSupport;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './Home.jsx';\nimport { throws } from 'assert';\nimport NotSupport from './NotSupport.jsx'\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.usingUserData();\n    this.props.channelData();\n    this.props.init();\n    this.props.chatRoomUsing();\n    this.props.getVersionOfIE();\n  }\n\n  saveFormDatas(event) {\n    event.preventDefault();\n    const { isLoggedIn, items, isroom } = this.props;\n    const channelTitle = this.inputNode.value\n    const channelPassword = this.passNode.value\n    this.props.saveFormData(isLoggedIn, items, channelTitle, channelPassword, isroom, this.props.aboutPopEvent);\n    this.props.MainAlertMessageChange();\n    this.inputNode.value = '';\n    this.passNode.value = '';\n  }\n\n  roomDeletes(event) {\n    event.preventDefault();\n    const dataId = event.target.dataset.id;\n    this.props.roomDelete(dataId);\n  }\n\n  goingChannel(event) {\n    event.preventDefault();\n    const channelTitle = this.gochannel.value;\n    const { isLoggedIn, isroom } = this.props;\n    const titleEqualCheck = isroom.filter(data => data.title === channelTitle)[0]\n    this.props.goingChannels(isLoggedIn, channelTitle, isroom, titleEqualCheck, this.props.aboutPopEvent)\n    this.props.aboutAlertMessageChange();\n    this.gochannel.value = '';\n  }\n\n  passwordCheck(event) {\n    event.preventDefault();\n    const dataTite = this.props.aboutValueTitle;\n    const dataId = this.props.focusid;\n    const passCheck = this.checkNode.value;\n    const { isroom } = this.props;\n    this.props.passpostCheck(passCheck, dataId, isroom, dataTite, event)\n  }\n\n  gochnanelRoom() {\n    const {focustitle} = this.props;\n    this.props.goMoveChannel(focustitle);\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      items,\n      isroom,\n      peers,\n      inroom,\n      webrtc,\n      joinChat,\n      AddpeerVideo,\n      startLoclaVideo,\n      handleSelfMute,\n      mute,\n      pass,\n      history,\n      popopen,\n      channelcheck,\n      popEvent,\n      popClose,\n      passpostCheck,\n      focustitle,\n      roomMatch,\n      alertHide,\n      inputCancel,\n      formatRoomPassword,\n      alertMessage,\n      loginUser,\n      userlogout,\n      aboutAlertMessageChange,\n      spinner,\n      alertBoxBottom,\n      alertColor,\n      channelAlertMessage,\n      alertMessageFormat,\n      loginpopEvent,\n      loggedPopUp,\n      deleteAelrt,\n      roomDeletePop,\n      gochnanelRoom,\n      ieCehck } = this.props;\n    return (\n      <Router>\n        <Route\n          render={props => {\n            if (isroom && ieCehck) {\n              return (\n                (webrtc !== null) ?\n                  <Home\n                    {...props}\n                    isLoggedIn={isLoggedIn}\n                    items={items}\n                    isroom={isroom}\n                    channelcheck={channelcheck}\n                    alertMessageFormat={alertMessageFormat}\n                    saveFormData={this.saveFormDatas.bind(this)}\n                    roomDelete={this.roomDeletes.bind(this)}\n                    roomDeletePop={roomDeletePop.bind(this)}\n                    goingChannel={this.goingChannel.bind(this)}\n                    passwordCheck={this.passwordCheck.bind(this)}\n                    formatRoomPassword={formatRoomPassword}\n                    handleSelfMute={handleSelfMute.bind(this)}\n                    inputCancel={inputCancel.bind(this)}\n                    passpostCheck={passpostCheck}\n                    popEvent={popEvent.bind(this)}\n                    gochnanelRoom={this.gochnanelRoom.bind(this)}\n                    loginpopEvent={loginpopEvent.bind(this)}\n                    loggedPopUp={loggedPopUp}\n                    popClose={popClose}\n                    focustitle={focustitle}\n                    alertHide={alertHide}\n                    alertColor={alertColor}\n                    alertBoxBottom={alertBoxBottom}\n                    onLoginButtonClick={loginUser}\n                    onLogoutButtonClick={userlogout}\n                    signAlert={this.signAlertMessage}\n                    alertMessageChange={aboutAlertMessageChange}\n                    webrtc={webrtc}\n                    peers={peers}\n                    inroom={inroom}\n                    pass={pass}\n                    roomMatch={roomMatch}\n                    channelAlertMessage={channelAlertMessage}\n                    startLoclaVideo={startLoclaVideo}\n                    AddpeerVideo={AddpeerVideo}\n                    mute={mute}\n                    loginpopEvent={loginpopEvent}\n                    popopen={popopen}\n                    joinChat={joinChat}\n                    alertMessage={alertMessage}\n                    spinner={spinner}\n                    deleteAelrt={deleteAelrt}\n                    inputRef={value => this.inputNode = value}\n                    goingRef={value => this.gochannel = value}\n                    passRef={value => this.passNode = value}\n                    passCheckRef={value => this.checkNode = value}\n                  /> :\n                  <div className=\"loadspin\"></div>\n              )\n            } else {\n              return <NotSupport />\n            }\n          }}\n        />\n      </Router>\n    );\n  };\n};\n","import * as firebase from 'firebase';\n\n var config = {\n  apiKey: \"AIzaSyA2aWhmtwcW-HJ80tYyv1Hs2A9MRzY3acQ\",\n  authDomain: \"videoconference-bf935.firebaseapp.com\",\n  databaseURL: \"https://videoconference-bf935.firebaseio.com\",\n  projectId: \"videoconference-bf935\",\n  storageBucket: \"videoconference-bf935.appspot.com\",\n  messagingSenderId: \"895553387250\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport reducer from './reducers'\nimport App from './containers/App.jsx';\nimport './style.css';\nimport './service/firebase';\nimport createHistory from 'history/createBrowserHistory';\n\nconst history = createHistory({ forceRefresh: true });\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\t\n    <App history={history}/>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}