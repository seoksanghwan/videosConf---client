{"version":3,"sources":["actions/index.js","reducers/index.js","containers/App.jsx","components/Alert.jsx","components/Main.jsx","components/Navbar.jsx","components/About.jsx","components/Rooms.jsx","components/RoomsDetails.jsx","components/Home.jsx","components/App.jsx","service/firebase.js","index.js"],"names":["IS_LOGIN_USER","FETCH_PRODUCTS_BEGIN","GET_ERRORS","IS_LOGGED_IN_DATA","IS_LOGOUT_DATA","ROOMS_DATA","RTC_SETTING","ADD_MEDIA","REMOVE_VIDEO","READY_TO_CALL","LOCAL_VIDEO","CONNECTED_LOCAL","DISCONNECTED_WEBCAM","AUDIO_CHECK","ROOM_ADD","ROOM_REMOVE","CHANNEL_CHECK","PASSWORD_CHECK","POP_EVENT_CHECK","POP_ClOSE_CHECK","ROOM_MAINTENANCE","ROOM_TITLE_MATCH","FORMAT_ROOM_PASS","ALERT_MESSAGE_CHANGE","initialState","items","isLoggedIn","error","isroom","peers","inroom","webrtc","roomname","mute","length","pass","popopen","focusid","focustitle","aboutValueTitle","alertMessage","createHistory","forceRefresh","rtc","Alert","_ref","passCheckRef","passwordCheck","popClose","inputCancel","react_default","a","createElement","className","onClick","htmlFor","type","name","ref","placeholder","Link","to","concat","Main","saveFormData","inputRef","passRef","src","alt","id","components_Alert","Navbar","props","signAlert","onLogoutButtonClick","onLoginButtonClick","url","About","goingRef","goingChannel","Rooms","roomDelete","roomData","popEvent","uniqWith","isEqual","map","data","key","_id","title","userName","data-id","data-mail","userMail","RoomsDetails","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","remoteVideos","room_name","match","params","startLoclaVideo","localVideo","AddpeerVideo","joinChat","_this2","_this$props","email","disconnect","handleSelfMute","connectVideo","autoPlay","vid","nick","split","getContainerId","getId","playsInline","Component","Home","window","onpopstate","e","location","pathname","disconnectSet","alertMessageChange","roomMatch","connection","stopLocalVideo","leaveRoom","history","go","push","init","components_Navbar","Switch","Route","exact","path","render","components_Main","assign","components_About","components_Rooms","Redirect","RoomsDetails_RoomsDetails","bind","localref","alert","React","App","usingUserData","channelData","chatRoomUsing","event","preventDefault","channelTitle","inputNode","value","channelPassword","passNode","aboutPopEvent","dataId","target","dataset","dataMail","mail","gochannel","titleEqualCheck","filter","undefined","dataTite","passCheck","checkNode","passpostCheck","_this$props2","channelcheck","alertHide","formatRoomPassword","loginUser","userlogout","BrowserRouter","Home_Home","saveFormDatas","roomDeletes","signAlertMessage","localHostIp","localHostIpApi","provider","firebase","GoogleAuthProvider","socket","io","connect","state","dispatch","ownProps","user","signInWithPopup","then","result","credential","accessToken","users","uid","displayName","photoURL","axios","post","res","token","defaults","headers","common","setAuthToken","decoded","jwt_decode","localStorage","setItem","JSON","stringify","catch","parse","getItem","userRemove","removeItem","signOut","on","logedin","roomPassword","callback","titleOverLap","Boolean","every","roommData","emit","booelan","itemsMail","localele","LioWebRTC","localVideoEl","dataOnly","network","maxPeers","minPeers","debug","sessionId","peer","payload","localvideo","start","startLocalVideo","config","targetremote","stream","attachStream","autoplay","joinroom","joinRoom","func","password","roomid","item","inputdata","shouldCheck","message","roomObj","roomTitle","targetTitle","roomNull","isroomdata","roomTitleUrl","isRoomValid","some","roomBoolean","withref","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","arguments","action","objectSpread","islogedin","loggedTrue","roomCopy","toConsumableArray","dataroom","removeRoom","roomId","removeUpdate","peerCopy","p","closed","unmute","applyMiddleware","logger","ReactDOM","react_redux_es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.08a5d33f.chunk.js","sourcesContent":["export const IS_LOGIN_USER = 'IS_LOGIN_USER';\nexport const FETCH_PRODUCTS_BEGIN = 'FETCH_PRODUCTS_BEGIN';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const IS_LOGGED_IN_DATA = 'IS_LOGGED_IN_DATA';\nexport const IS_LOGOUT_DATA = 'IS_LOGOUT_DATA';\nexport const ROOMS_DATA = 'ROOMS_DATA';\nexport const RTC_SETTING = 'RTC_SETTING';\nexport const ADD_MEDIA = 'ADD_MEDIA';\nexport const REMOVE_VIDEO = 'REMOVE_VIDEO';\nexport const READY_TO_CALL = 'READY_TO_CALL';\nexport const LOCAL_VIDEO = 'LOCAL_VDIEO';\nexport const CONNECTED_LOCAL = 'CONNECTED_LOCAL';\nexport const DISCONNECTED_WEBCAM = 'DISCONNECTED_WEBCAM';\nexport const AUDIO_CHECK = 'AUDIO_CHECK';\nexport const ROOM_ADD = 'ROOM_ADD';\nexport const ROOM_REMOVE = 'ROOM_REMOVE';\nexport const CHANNEL_CHECK = 'CHANNEL_CHECK';\nexport const PASSWORD_CHECK = 'PASSWORD_CHECK';\nexport const POP_EVENT_CHECK = 'POP_EVENT_CHECK';\nexport const POP_ClOSE_CHECK = 'POP_ClOSE_CHECK';\nexport const ROOM_MAINTENANCE = 'ROOM_MAINTENANCE';\nexport const ROOM_TITLE_MATCH = 'ROOM_TITLE_MATCH';\nexport const FORMAT_ROOM_PASS = 'FORMAT_ROOM_PASS';\nexport const ALERT_MESSAGE_CHANGE = 'ALERT_MESSAGE_CHANGE';\n\nexport const isLogoutData = () => ({\n  type: IS_LOGOUT_DATA\n});\n\nexport const isLoggedInData = () => ({\n  type: IS_LOGGED_IN_DATA\n});\n\nexport const fetchProductsBegin = () => ({\n  type: FETCH_PRODUCTS_BEGIN\n});\n\nexport const getErrors = () => ({\n  type: GET_ERRORS\n});\n\nexport const roomdData = () => ({\n  type: ROOMS_DATA\n});\n\nexport const isLoginUser = products => ({\n  type: IS_LOGIN_USER\n});\n\n/* video RTC */\nexport const rtcSetting = products => ({\n  type: RTC_SETTING\n});\n\nexport const addMeida = products => ({\n  type: ADD_MEDIA\n});\n\nexport const removeVideo = products => ({\n  type: REMOVE_VIDEO\n});\n\nexport const readyToCall = products => ({\n  type: READY_TO_CALL\n});\n\nexport const localVideo = products => ({\n  type: LOCAL_VIDEO\n});\n\nexport const connectedLocal = products => ({\n  type: CONNECTED_LOCAL\n});\n\nexport const disconnectedWebcam = products => ({\n  type: DISCONNECTED_WEBCAM\n});\n\nexport const audioCheck = products => ({\n  type: AUDIO_CHECK\n});\n\nexport const roomAdd = products => ({\n  type: ROOM_ADD\n});\n\nexport const roomRemove = products => ({\n  type: ROOM_REMOVE\n});\n\nexport const channelCheck = products => ({\n  type: CHANNEL_CHECK\n});\n\nexport const passwordCheck = products => ({\n  type: PASSWORD_CHECK\n});\n\nexport const popEventCheck = products => ({\n  type: POP_EVENT_CHECK\n});\n\nexport const popCloseCheck = products => ({\n  type: POP_ClOSE_CHECK\n});\n\nexport const roomMaintenance = products => ({\n  type: ROOM_MAINTENANCE\n});\n\nexport const roomMatchTtile = products => ({\n  type: ROOM_TITLE_MATCH\n});\n\nexport const formatRoomPass = products => ({\n  type: FORMAT_ROOM_PASS\n});\n\nexport const alertMessageChange = products => ({\n  type: ALERT_MESSAGE_CHANGE\n});\n","import LioWebRTC from 'liowebrtc';\nimport { combineReducers } from 'redux';\nimport createHistory from 'history/createBrowserHistory';\nimport {\n\tFETCH_PRODUCTS_BEGIN,\n\tIS_LOGIN_USER,\n\tIS_LOGGED_IN_DATA,\n\tIS_LOGOUT_DATA,\n\tGET_ERRORS,\n\tROOMS_DATA,\n\tRTC_SETTING,\n\tCONNECTED_LOCAL,\n\tLOCAL_VIDEO,\n\tADD_MEDIA,\n\tREMOVE_VIDEO,\n\tREADY_TO_CALL,\n\tDISCONNECTED_WEBCAM,\n\tAUDIO_CHECK,\n\tROOM_ADD,\n\tROOM_REMOVE,\n\tCHANNEL_CHECK,\n\tPASSWORD_CHECK,\n\tPOP_EVENT_CHECK,\n\tPOP_ClOSE_CHECK,\n\tROOM_MAINTENANCE,\n\tROOM_TITLE_MATCH,\n\tFORMAT_ROOM_PASS,\n\tALERT_MESSAGE_CHANGE\n} from '../actions';\n\nconst initialState = {\n\titems: {},\n\tisLoggedIn: false,\n\terror: null,\n\tisroom: [],\n\tpeers: [],\n\tinroom: false,\n\twebrtc: null,\n\troomname: '',\n\tmute: false,\n\tlength: 0,\n\tpass: false,\n\tpopopen: false,\n\tfocusid: '',\n\tfocustitle: '',\n\taboutValueTitle: '',\n\talertMessage: '회의실 패스워드를 입력해주세요.'\n};\nconst history = createHistory({ forceRefresh: true });\n\nexport default function productReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FETCH_PRODUCTS_BEGIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tislogedin: false,\n\t\t\t\titems: {},\n\t\t\t\tisroom: []\n\t\t\t};\n\n\t\tcase IS_LOGIN_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: true,\n\t\t\t\titems: action.data\n\t\t\t};\n\n\t\tcase IS_LOGGED_IN_DATA:\n\t\t\tlet user = Boolean(action.data) ? action.data : {};\n\t\t\tlet loggedTrue = Boolean(action.data) ? true : false;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: loggedTrue,\n\t\t\t\titems: user\n\t\t\t}\n\n\t\tcase IS_LOGOUT_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: false,\n\t\t\t\titems: {},\n\t\t\t\tisroom: []\n\t\t\t}\n\n\t\tcase ROOMS_DATA:\n\t\t\tlet roomCopy = [...action.data, ...state.isroom];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: roomCopy\n\t\t\t}\n\n\t\tcase ROOM_ADD:\n\t\t\tconst dataroom = [...state.isroom, action.data];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: dataroom\n\t\t\t}\n\n\t\tcase ROOM_REMOVE:\n\t\t\tconst removeRoom = state.isroom;\n\t\t\tconst roomId = action.data;\n\t\t\tconst removeUpdate = removeRoom.filter((data) => roomId !== data._id);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: removeUpdate\n\t\t\t}\n\n\t\tcase RTC_SETTING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\twebrtc: action.payload\n\t\t\t};\n\n\t\tcase ADD_MEDIA:\n\t\t\tlet peerCopy = [...state.peers, action.peer];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpeers: peerCopy\n\t\t\t};\n\n\t\tcase REMOVE_VIDEO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpeers: state.peers.filter(p => !p.closed)\n\t\t\t};\n\n\t\tcase READY_TO_CALL:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase LOCAL_VIDEO:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase CONNECTED_LOCAL:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase DISCONNECTED_WEBCAM:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase AUDIO_CHECK:\n\t\t\t(state.mute) ? action.func.unmute() : action.func.mute();\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmute: !state.mute\n\t\t\t};\n\n\t\tcase CHANNEL_CHECK:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t}\n\n\t\tcase PASSWORD_CHECK:\n\t\t\tif (action.result) {\n\t\t\t\tstate.inroom = true\n\t\t\t} else {\n\t\t\t\tstate.inroom = false\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpass: action.result,\n\t\t\t\tfocustitle: action.title\n\t\t\t}\n\n\t\tcase POP_EVENT_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopopen: action.booelan,\n\t\t\t\tfocusid: action.dataId,\n\t\t\t\taboutValueTitle: action.targetTitle\n\t\t\t}\n\n\t\tcase FORMAT_ROOM_PASS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpass : action.pass\n\t\t\t}\n\n\t\tcase POP_ClOSE_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopopen: action.booelan\n\t\t\t}\n\n\t\tcase ROOM_MAINTENANCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopopen: action.booelan,\n\t\t\t\tpass: action.data\n\t\t\t}\n\n\t\tcase ROOM_TITLE_MATCH:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinroom : action.roomBoolean\n\t\t\t}\n\n\t\tcase ALERT_MESSAGE_CHANGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\talertMessage: action.message\n\t\t\t}\n\n\t\tcase GET_ERRORS:\n\t\t\treturn action.payload;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import { connect } from \"react-redux\";\nimport io from 'socket.io-client';\nimport { bindActionCreators } from 'redux'\nimport React, { Component } from 'react';\nimport { debounce } from \"lodash\";\nimport * as firebase from 'firebase';\nimport LioWebRTC from 'liowebrtc';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport {\n  IS_LOGIN_USER,\n  IS_LOGGED_IN_DATA,\n  IS_LOGOUT_DATA,\n  GET_ERRORS,\n  ROOMS_DATA,\n  CONNECTED_LOCAL,\n  LOCAL_VIDEO,\n  RTC_SETTING,\n  ADD_MEDIA,\n  REMOVE_VIDEO,\n  READY_TO_CALL,\n  AUDIO_CHECK,\n  ROOM_ADD,\n  ROOM_REMOVE,\n  CHANNEL_CHECK,\n  PASSWORD_CHECK,\n  POP_EVENT_CHECK,\n  POP_ClOSE_CHECK,\n  ROOM_MAINTENANCE,\n  ROOM_TITLE_MATCH,\n  FORMAT_ROOM_PASS,\n  ALERT_MESSAGE_CHANGE\n} from '../actions';\nimport App from \"../components/App.jsx\";\nimport createHistory from 'history/createBrowserHistory';\n\n//https://videos-conf-service.herokuapp.com/\n//http://localhost:8080/\nlet rtc;\nconst simpLioRTC = 'https://sm1.lio.app:443/';\nconst localHostIp = 'https://videos-conf-service.herokuapp.com/';\nconst localHostIpApi = `${localHostIp}api/auth/`;\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst history = createHistory({ forceRefresh: true });\nconst socket = io(localHostIp);\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: state.items,\n  isLoggedIn: state.isLoggedIn,\n  error: state.error,\n  isroom: state.isroom,\n  inroom: state.inroom,\n  peers: state.peers,\n  webrtc: state.webrtc,\n  mute: state.mute,\n  length: state.length,\n  popopen: state.popopen,\n  focusid: state.focusid,\n  pass: state.pass,\n  focustitle: state.focustitle,\n  aboutValueTitle: state.aboutValueTitle,\n  alertMessage: state.alertMessage\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    loginUser: (user) => {\n      firebase.auth().signInWithPopup(provider).then(result => {\n        let token = result.credential.accessToken;\n        let users = result.user;\n        let loginUser = {\n          uid: users.uid,\n          name: users.displayName,\n          url: users.photoURL,\n          email: users.email\n        }\n        axios.post(`${localHostIpApi}login`, loginUser).then(res => {\n          const { token } = res.data;\n          setAuthToken(token);\n          const decoded = jwt_decode(token);\n          dispatch({\n            type: IS_LOGIN_USER,\n            data: decoded\n          });\n          localStorage.setItem('user', JSON.stringify(decoded));\n        })\n      }).catch(error => {\n        dispatch({ type: GET_ERRORS, error });\n      });\n    },\n    usingUserData: () => {\n      let user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: IS_LOGGED_IN_DATA,\n        data: user\n      });\n    },\n    userlogout: () => {\n      let userRemove = localStorage.removeItem('user');\n      firebase.auth().signOut().then(() => {\n        history.push('/');\n        dispatch({\n          type: IS_LOGOUT_DATA,\n          data: userRemove\n        });\n      }).catch(error => {\n        dispatch({ type: GET_ERRORS, error });\n      });\n    },\n    channelData: () => {\n      socket.on('initialList', (data) => {\n        dispatch({\n          type: ROOMS_DATA,\n          data\n        });\n      });\n      socket.on('itemAdded', (data) => {\n        dispatch({\n          type: ROOM_ADD,\n          data\n        });\n      });\n      socket.on('itemRemove', (data) => {\n        dispatch({\n          type: ROOM_REMOVE,\n          data\n        });\n      });\n    },\n    saveFormData: (logedin, items, title, roomPassword, isroom, callback) => {\n      let titleOverLap = Boolean(isroom.every(roommData => roommData.title !== title));\n      if (logedin) {\n        if (title.length > 1 && title.length < 11 && roomPassword.length > 1 && roomPassword.length < 11) {\n          let data = {\n            title,\n            roomPassword,\n            userName: items.name,\n            userMail: items.email\n          };\n          if (titleOverLap || isroom === []) {\n            socket.emit('addItem', data);\n            dispatch({\n              type: POP_EVENT_CHECK,\n              booelan: true,\n              title\n            })\n            callback(title)\n          } else {\n            alert('중복된 회의실이 있습니다.');\n          }\n        } else {\n          alert('회의방 제목 및 패스워드는 2글자 이상 10글자 미만이에요.\\n다시 한번 작성해주세요');\n        }\n      } else {\n        alert('로그인을 해주세요');\n      }\n    },\n    roomDelete: (id, dataMail, itemsMail) => {\n      if (dataMail === itemsMail) {\n        socket.emit('removeItem', id);\n        dispatch({\n          type: ROOM_REMOVE\n        });\n        alert('회의실이 삭제되었습니다.');\n      } else {\n        alert('회의실 삭제 권한은 주최자에게만 있어요.');\n      }\n    },\n    init: (localele) => {\n      let user = JSON.parse(localStorage.getItem('user'));\n      let email = (user !== null) ? `${user.email},${user.url}` : 'Not user';\n      rtc = new LioWebRTC({\n        url: simpLioRTC,\n        localVideoEl: '',\n        dataOnly: false,\n        network: {\n          maxPeers: 2,\n          minPeers: 1\n        },\n        debug: false,\n        nick: email\n      });\n      rtc\n        .on('connectionReady', (sessionId) => {\n          dispatch({\n            type: CONNECTED_LOCAL,\n            sessionId\n          });\n        })\n        .on('videoRemoved', (peer) => {\n          dispatch({\n            type: REMOVE_VIDEO,\n            peer\n          });\n        });\n      dispatch({ type: RTC_SETTING, payload: rtc });\n    },\n    startLoclaVideo: (localvideo) => {\n      dispatch({ type: LOCAL_VIDEO, start: rtc.startLocalVideo() });\n      if (localvideo) {\n        rtc.config.localVideoEl = localvideo;\n      } else {\n        rtc.config.localVideoEl = localvideo;\n      }\n    },\n    AddpeerVideo: (targetremote) => {\n      rtc.on('videoAdded', (stream, peer) => {\n        if (targetremote) {\n          dispatch({\n            type: ADD_MEDIA,\n            peer,\n            rtc\n          });\n          rtc.attachStream(stream, targetremote[peer.id], { autoplay: true });\n        }\n      })\n    },\n    joinChat: (roomname) => {\n      rtc.on('readyToCall', () => {\n        if (roomname !== undefined) {\n          dispatch({\n            type: READY_TO_CALL,\n            joinroom: rtc.joinRoom(roomname)\n          });\n        }\n      });\n    },\n    handleSelfMute: (e) => {\n      dispatch({\n        type: AUDIO_CHECK,\n        func: rtc\n      });\n    },\n    passpostCheck: (password, roomid, isroom, dataTite, event) => {\n      event.preventDefault();\n      isroom.filter(item => {\n        if (item._id === roomid || item.title === dataTite) {\n          if (password.length >= 1) {\n            const inputdata = {\n              password,\n              roomid: item._id\n            }\n            axios.post(`${localHostIp}passcheck`, inputdata)\n              .then(data => {\n                const shouldCheck = data.data.message;\n                dispatch({\n                  type: PASSWORD_CHECK,\n                  result: shouldCheck,\n                  title: item.title\n                })\n                const roomObj = {\n                  item,\n                  shouldCheck\n                }\n                if (shouldCheck === true) {\n                  localStorage.setItem('roomPassResults', JSON.stringify(roomObj));\n                } else {\n                  localStorage.setItem('roomPassResults', JSON.stringify(roomObj));\n                }\n              })\n              .catch(error => {\n                dispatch({ type: GET_ERRORS, error });\n              });\n          }\n        }\n      })\n    },\n    chatRoomUsing: () => {\n      let roomData = JSON.parse(localStorage.getItem('roomPassResults'));\n      let roomTitle = history.location.pathname.split('/rooms/')[1];\n      if (roomTitle !== undefined && roomData !== null) {\n        if (history.location.pathname.split('/rooms/')[1] && roomData !== null) {\n          if (roomTitle === roomData.item.title && roomData.shouldCheck) {\n            dispatch({\n              type: ROOM_MAINTENANCE,\n              data: roomData.shouldCheck\n            })\n          } else {\n            dispatch({\n              type: ROOM_MAINTENANCE,\n              data: false\n            })\n          }\n        }\n      }\n    },\n    popEvent: (event) => {\n      const dataId = event.target.dataset.id;\n      dispatch({\n        type: POP_EVENT_CHECK,\n        booelan: true,\n        dataId\n      })\n    },\n    aboutPopEvent: (targetTitle) => {\n      dispatch({\n        type: POP_EVENT_CHECK,\n        booelan: true,\n        targetTitle\n      })\n    },\n    popClose: () => {\n      let roomDataRmove = localStorage.removeItem('roomPassResults');\n      let roomNull = roomDataRmove === null ? false : null\n      dispatch({\n        type: POP_ClOSE_CHECK,\n        booelan: false\n      })\n      dispatch({\n        type: ROOM_MAINTENANCE,\n        data: roomNull\n      })\n    },\n    inputCancel: () => {\n      dispatch({\n        type: POP_ClOSE_CHECK,\n        booelan: false\n      })\n    },\n    formatRoomPassword: () => {\n      let roomDataRmove = localStorage.removeItem('roomPassResults');\n      if (history.location.pathname.split('/rooms/')[1]) {\n        dispatch({\n          type: FORMAT_ROOM_PASS,\n          data: null,\n          pass: true\n        })\n      }\n    },\n    roomMatch: (isroomdata) => {\n      let roomTitleUrl = history.location.pathname.split('/rooms/')[1];\n      if (history.location.pathname.split('/rooms/')[1]) {\n        let title = isroomdata.map(data => data.title);\n        let isRoomValid = title.some(item => item === roomTitleUrl);\n        if (isRoomValid) {\n          dispatch({\n            type: ROOM_TITLE_MATCH,\n            roomBoolean: true\n          })\n        } else {\n          dispatch({\n            type: ROOM_TITLE_MATCH,\n            roomBoolean: false\n          })\n        }\n      }\n    },\n    alertMessageChange: () => {\n      if (history.location.pathname === '/') {\n        dispatch({\n          type : ALERT_MESSAGE_CHANGE,\n          message : '회의실이 생성되었습니다.\\n지금 바로 입장하실려면 패스워드를 입력해주세요.'\n        })\n      } else {\n        dispatch({\n          type : ALERT_MESSAGE_CHANGE,\n          message : `회의실 패스워드를 입력해주세요.`\n        })\n      }\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { withref: true })(App);\n\n\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Alert = ({ passCheckRef, passwordCheck, popClose, pass, focustitle, inputCancel, alertMessage }) => {\n  return (\n    <div className=\"AlertBox\">\n      <div className=\"loginContent\">\n        <div className=\"close-btn\">\n          <i className=\"fas fa-times\" onClick={popClose}></i>\n        </div>\n        <form>\n          <h3>{alertMessage}</h3>\n          <label htmlFor=\"pass_check\">\n            <input type=\"password\" name=\"pass_check\" ref={passCheckRef} placeholder='패스워드' />\n            <button name=\"pass_check\" onClick={passwordCheck} type=\"button\"> check </button>\n          </label>\n        </form>\n        <div className=\"pass-check\">\n          {\n            pass ?\n              <Link to={`rooms/${focustitle}`}  >패스워드가 일치합니다. 참여하실려면 클릭해주세요.</Link> : <p>패스워드를 입력해주세요.</p>\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Alert;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Alert from './Alert.jsx';\n\nconst Main = ({saveFormData, inputRef ,passRef, passCheckRef, passwordCheck, popClose, pass, focustitle, inputCancel, popopen, alertMessage}) => {\n  return (\n    <div className=\"meeting-room-create\">\n      <div className=\"rooms_title\">\n        <form>\n          <label htmlFor=\"rooms_title\">\n            <h1>\n              <img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/logo.png?raw=true\" alt=\"\" />\n              <Link className=\"navbar-item\" to=\"/rooms\">Channel List</Link>\n            </h1>\n            <div className=\"inputbox\">\n              <input type=\"text\" id=\"rooms_title\" name=\"rooms_title\" ref={inputRef} placeholder=\"안녕하세요!! 회의실을 생성해주세요.\" />\n              <input type=\"password\" id=\"rooms_password\" name=\"rooms_title\" ref={passRef} placeholder=\"비밀번호도 설정해봐요.\" />\n            </div>\n            <button name=\"rooms_title\" onClick={saveFormData} >Create!</button>\n          </label>\n        </form>\n      </div>\n      {\n        (popopen) ?\n          <Alert alertMessage={alertMessage} passCheckRef={passCheckRef} passwordCheck={passwordCheck} popClose={popClose} pass={pass} focustitle={focustitle} inputCancel={inputCancel} /> :\n          null\n      }\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = props => {\n  return (\n    <div className=\"container\">\n      <div className=\"navbar-start\">\n        <div className=\"nav-content\">\n          <div className=\"nav-menu\">\n            <dl>\n              <dt><Link to=\"/\"><img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/logo.png?raw=true\" alt=\"\"/></Link></dt>\n              <dd>\n                <Link to=\"/about\">About</Link>\n              </dd>\n              <dd>\n                {\n                  (props.isLoggedIn) ?\n                    <Link to=\"/rooms\">Channel List</Link> :\n                    <Link onClick={props.signAlert} to=\"/\">Channel List</Link>\n                }\n              </dd>\n              <dd>\n                {\n                  (props.isLoggedIn) ?\n                    <p onClick={props.onLogoutButtonClick}>Sign Out</p> :\n                    <p onClick={props.onLoginButtonClick}>Sign In</p>\n                }\n              </dd>\n            </dl>\n          </div>\n          <div className=\"user-info-nav\">\n            {\n              (props.isLoggedIn) ?\n                <p><img src={props.items.url} /> <strong>{props.items.name}</strong>님 안녕하세요.!!</p> :\n                <p>로그인해주세요.</p>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Alert from './Alert.jsx';\n\nconst About = ({goingRef, goingChannel, passCheckRef, passwordCheck, popClose, pass, focustitle, popopen, inputCancel, alertMessage})=> {\n\treturn (\n\t\t<div className=\"about\">\n\t\t\t<div className=\"about-content\">\n\t\t\t\t<div className=\"about-img\">\n\t\t\t\t\t<img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/webcamconf.png?raw=true\" alt=\"\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"about-info-text\">\n\t\t\t\t\t<h2>Videos Conf</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t언제 어디서든 노트북만 있으면, 화상회의를<br/>시작 하실 수 있습니다.\n\t\t\t\t\t\t지금 바로 시작해보세요.!!\n\t\t\t\t\t </p>\n\t\t\t\t\t<div className=\"goingChannel\">\n\t\t\t\t\t\t<label htmlFor=\"going_channel\">\n\t\t\t\t\t\t\t<input type=\"text\" id=\"going_channel\" name=\"going_channel\" ref={goingRef} placeholder=\"채널 제목을 입력해주세요!\" />\n\t\t\t\t\t\t\t<button name=\"going_channel\" onClick={goingChannel} >Go!</button>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n        (popopen) ?\n          <Alert alertMessage={alertMessage} passCheckRef={passCheckRef} passwordCheck={passwordCheck} popClose={popClose} pass={pass} focustitle={focustitle} inputCancel={inputCancel} /> :\n          null\n      }\n\t\t</div>\n\t);\n};\n\nexport default About;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from \"react-router-dom\";\nimport { uniqWith, isEqual } from \"lodash\";\nimport Alert from './Alert.jsx';\n\nconst Rooms = ({ roomDelete, roomData, passCheckRef, passwordCheck, items, popopen, popEvent, popClose, pass, focustitle, inputCancel, alertMessage }) => {\n  return (\n    <div className=\"rooms-list\">\n      <dl>\n        <dt>\n          <h2 className=\"title\">\n            Enjoy Channel!!\n            <em>안녕하세요 회의실 리스트입니다.</em>\n          </h2>\n        </dt>\n        {\n          uniqWith(roomData, isEqual).map(data => {\n            return (\n              <dd key={data._id}>\n                <h3>\n                  {data.title}\n                  <p> Organiser {data.userName}</p>\n                </h3>\n                <div className=\"del-enter\">\n                  <button onClick={popEvent} data-id={data._id}>\n                    <i className=\"fas fa-sign-in-alt\" data-id={data._id}></i>\n                  </button>\n                  {\n                    (data.userName === items.name) ?\n                      <button onClick={roomDelete} data-mail={data.userMail} data-id={data._id} >\n                       <i className=\"fas fa-trash\" data-mail={data.userMail} data-id={data._id} ></i>\n                      </button> : null\n                  }\n                </div>\n              </dd>\n            );\n          })\n        }\n      </dl>\n      {\n        (popopen) ?\n          <Alert alertMessage={alertMessage} passCheckRef={passCheckRef} passwordCheck={passwordCheck} popClose={popClose} pass={pass} focustitle={focustitle} inputCancel={inputCancel} /> :\n          null\n      }\n    </div>\n  );\n};\n\nexport default Rooms;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { uniqWith, isEqual } from \"lodash\";\n\nexport default class RoomsDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.remoteVideos = {};\n  }\n\n  componentDidMount() {\n    const { room_name } = this.props.match.params;\n    this.webrtc = this.props.webrtc;\n    this.props.startLoclaVideo(this.localVideo);\n    this.props.AddpeerVideo(this.remoteVideos);\n    this.props.joinChat(room_name);\n  }\n\n  render() {\n    const { peers, email, url, AddpeerVideo, webrtc, disconnect, handleSelfMute, mute, connectVideo } = this.props;\n    const { room_name } = this.props.match.params;\n    return (\n      <div className=\"details-box\">\n        <div className=\"sidebar local\">\n          <h2>\n            {room_name}\n            <em><i className=\"far fa-user\"></i> {peers.length + 1}</em>\n          </h2>\n          <div className=\"localBox\">\n            <video id='localVideo' autoPlay={true} ref={(vid) => this.localVideo = vid} />\n            <div className=\"nick\">\n              <p> {email} </p>\n            </div>\n          </div>\n          <div className=\"buttons\">\n            <button onClick={connectVideo}>\n              <i className=\"fas fa-video\"></i>\n            </button>\n            <button onClick={handleSelfMute}>\n              {\n                (mute) ?\n                  <i className=\"fas fa-volume-up\"></i> :\n                  <i className=\"fas fa-volume-mute\"></i>\n              }\n            </button>\n            <button onClick={disconnect}>\n              <i className=\"fas fa-sign-out-alt\"></i>\n            </button>\n            <p>통화버튼을 눌러주세요.</p>\n          </div>\n          <div className=\"remotePeerList\">\n            <h3>Member</h3>\n            <ul>\n              <li> <img src={url} alt=\"\" /> <p>{email}</p></li>\n              {\n                peers.map(name => <li key={name.id}> <img src={name.nick.split(',')[1]} alt=\"\" /> <p>{name.nick.split(',')[0]}</p></li>)\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"remotevideo\" >\n          {\n            uniqWith(peers, isEqual).map(data => (\n              <div className=\"vidContainer\" key={data.id} id={`${webrtc.getContainerId(data)}`} >\n                <video id={webrtc.getId(data)} autoPlay={true} ref={(vid) => this.remoteVideos[data.id] = vid} playsInline />\n                <div className=\"nick\">\n                  <p>{data.nick.split(',')[0]}</p>\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Main from './Main.jsx';\nimport Navbar from './Navbar.jsx';\nimport About from './About.jsx';\nimport Rooms from './Rooms.jsx';\nimport RoomsDetails from './RoomsDetails.jsx';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    window.onpopstate = e => {\n      this.props.popClose();\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.props.location.pathname.split('/rooms/')[1]) {\n      this.disconnectSet();\n      this.props.alertMessageChange();\n    }\n    this.props.roomMatch(this.props.isroom);\n  }\n\n  disconnectSet() {\n    this.props.webrtc.connection.disconnect();\n    this.props.webrtc.stopLocalVideo();\n    this.props.webrtc.leaveRoom();\n  }\n\n  connectVideo() {\n    this.props.history.go(0);\n  }\n\n  disconnect() {\n    this.props.history.push('/rooms');\n    this.props.alertMessageChange();\n    this.props.popClose();\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      inputRef,\n      goingRef,\n      items,\n      isroom,\n      init,\n      peers,\n      inroom,\n      webrtc,\n      saveFormData,\n      AddpeerVideo,\n      joinChat,\n      startLoclaVideo,\n      handleSelfMute,\n      goingChannel,\n      passRef,\n      passCheckRef,\n      passwordCheck,\n      pass,\n      mute,\n      popopen,\n      popEvent,\n      popClose,\n      focustitle,\n      inputCancel,\n      alertMessage } = this.props;\n    return (\n      <div id=\"app\" className=\"container\">\n        <Navbar\n          items={items}\n          isLoggedIn={isLoggedIn}\n          signAlert={this.props.signAlert}\n          onLoginButtonClick={this.props.onLoginButtonClick}\n          onLogoutButtonClick={this.props.onLogoutButtonClick}\n        />\n        <Switch>\n          <Route exact path=\"/\" render={props => {\n            return (\n              <Main\n                {...props}\n                isLoggedIn={isLoggedIn}\n                saveFormData={saveFormData}\n                inputRef={inputRef}\n                passRef={passRef}\n                pass={pass}\n                popEvent={popEvent}\n                popClose={popClose}\n                popopen={popopen}\n                passwordCheck={passwordCheck}\n                passCheckRef={passCheckRef}\n                focustitle={focustitle}\n                alertMessage={alertMessage}\n              />\n            );\n          }} />\n          <Route exact path=\"/about\" render={props => {\n            return (\n              <About\n                {...props}\n                goingRef={goingRef}\n                goingChannel={goingChannel}\n                pass={pass}\n                popEvent={popEvent}\n                popClose={popClose}\n                popopen={popopen}\n                passwordCheck={passwordCheck}\n                passCheckRef={passCheckRef}\n                focustitle={focustitle}\n                inputCancel={inputCancel}\n                alertMessage={alertMessage}\n              />\n            );\n          }} />\n          <Route exact path=\"/rooms\" render={props => {\n            if (isLoggedIn) {\n              return (\n                <Rooms\n                  popClose={popClose}\n                  popopen={popopen}\n                  pass={pass}\n                  items={items}\n                  roomData={isroom}\n                  roomDelete={this.props.roomDelete}\n                  passCheckRef={passCheckRef}\n                  passwordCheck={passwordCheck}\n                  popEvent={popEvent}\n                  focustitle={focustitle}\n                  inputCancel={inputCancel}\n                  alertMessage={alertMessage}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }} />\n          <Route exact path=\"/rooms/:room_name\" render={props => {\n            let email = items.email ? items.email : 'null';\n            if (isLoggedIn && isroom ) {\n              if (pass) {\n                return (\n                  <RoomsDetails\n                    {...props}\n                    init={init}\n                    email={email}\n                    url={items.url}\n                    peers={peers}\n                    webrtc={webrtc}\n                    inroom={inroom}\n                    isroom={isroom}\n                    startLoclaVideo={startLoclaVideo}\n                    AddpeerVideo={AddpeerVideo}\n                    joinChat={joinChat}\n                    mute={mute}\n                    pass={pass}\n                    connectVideo={this.connectVideo.bind(this)}\n                    disconnect={this.disconnect.bind(this)}\n                    handleSelfMute={handleSelfMute}\n                    localref={(vid) => this.localVideo = vid}\n                  />\n                );\n              } else {\n                alert('잘못된 접근입니다.');\n                return <Redirect to=\"/rooms\" />;\n              }\n            } else {\n              return <span>Loading...</span>;\n            }\n          }} />\n          <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './Home.jsx';\nimport { throws } from 'assert';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.usingUserData();\n    this.props.channelData();\n    this.props.init();\n    this.props.chatRoomUsing();\n    this.props.alertMessageChange();\n  }\n\n  signAlertMessage() {\n    alert('로그인을 해주세요');\n  }\n\n  saveFormDatas(event) {\n    event.preventDefault();\n    const { isLoggedIn, items, isroom } = this.props;\n    const channelTitle = this.inputNode.value\n    const channelPassword = this.passNode.value\n    this.props.saveFormData(isLoggedIn, items, channelTitle, channelPassword, isroom, this.props.aboutPopEvent);\n    this.props.alertMessageChange();\n    this.inputNode.value = '';\n    this.passNode.value = '';\n  }\n\n  roomDeletes(event) {\n    event.preventDefault();\n    const dataId = event.target.dataset.id;\n    const dataMail = event.target.dataset.mail;\n    const { items } = this.props;\n    this.props.roomDelete(dataId, dataMail, items.email);\n  }\n\n  goingChannel(event) {\n    event.preventDefault();\n    const channelTitle = this.gochannel.value;\n    const { isroom } = this.props;\n    const titleEqualCheck = isroom.filter(data => data.title === channelTitle)[0]\n    if (channelTitle.length > 1 && channelTitle.length < 11) {\n      if (titleEqualCheck !== undefined) {\n        if (titleEqualCheck.title === channelTitle) {\n          this.props.aboutPopEvent(channelTitle);\n        }\n      } else {\n        alert('채널 목록에 없는 채널입니다.');\n        this.gochannel.value = '';\n      }\n    } else {\n      alert('채널 제목은 2글자 미만이거나, 11글자 이상 일 수 없습니다.');\n      this.gochannel.value = '';\n    }\n  }\n\n  passwordCheck(event) {\n    event.preventDefault();\n    const dataTite = this.props.aboutValueTitle;\n    const dataId = this.props.focusid;\n    const passCheck = this.checkNode.value;\n    const { isroom } = this.props;\n    this.props.passpostCheck(passCheck, dataId, isroom, dataTite, event)\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      items,\n      isroom,\n      peers,\n      inroom,\n      webrtc,\n      joinChat,\n      AddpeerVideo,\n      startLoclaVideo,\n      handleSelfMute,\n      mute,\n      pass,\n      history,\n      popopen,\n      channelcheck,\n      popEvent,\n      popClose,\n      passpostCheck,\n      focustitle,\n      roomMatch,\n      alertHide,\n      inputCancel,\n      formatRoomPassword,\n      alertMessage,\n      loginUser,\n      userlogout,\n      alertMessageChange } = this.props;\n    return (\n      <Router>\n        <Route\n          render={props => {\n            if (isroom) {\n              return (\n                (webrtc !== null) ?\n                  <Home\n                    {...props}\n                    isLoggedIn={isLoggedIn}\n                    items={items}\n                    isroom={isroom}\n                    channelcheck={channelcheck}\n                    saveFormData={this.saveFormDatas.bind(this)}\n                    roomDelete={this.roomDeletes.bind(this)}\n                    goingChannel={this.goingChannel.bind(this)}\n                    passwordCheck={this.passwordCheck.bind(this)}\n                    formatRoomPassword={formatRoomPassword}\n                    handleSelfMute={handleSelfMute.bind(this)}\n                    inputCancel={inputCancel.bind(this)}\n                    passpostCheck={passpostCheck}\n                    popEvent={popEvent.bind(this)}\n                    popClose={popClose}\n                    focustitle={focustitle}\n                    alertHide={alertHide}\n                    onLoginButtonClick={loginUser}\n                    onLogoutButtonClick={userlogout}\n                    signAlert={this.signAlertMessage}\n                    alertMessageChange={alertMessageChange}\n                    webrtc={webrtc}\n                    peers={peers}\n                    inroom={inroom}\n                    pass={pass}\n                    roomMatch={roomMatch}\n                    startLoclaVideo={startLoclaVideo}\n                    AddpeerVideo={AddpeerVideo}\n                    mute={mute}\n                    popopen={popopen}\n                    joinChat={joinChat}\n                    alertMessage={alertMessage}\n                    inputRef={value => this.inputNode = value}\n                    goingRef={value => this.gochannel = value}\n                    passRef={value => this.passNode = value}\n                    passCheckRef={value => this.checkNode = value}\n                  /> :\n                  null\n              )\n            }\n          }}\n        />\n      </Router>\n    );\n  };\n};\n","import * as firebase from 'firebase';\n\n var config = {\n  apiKey: \"AIzaSyA2aWhmtwcW-HJ80tYyv1Hs2A9MRzY3acQ\",\n  authDomain: \"videoconference-bf935.firebaseapp.com\",\n  databaseURL: \"https://videoconference-bf935.firebaseio.com\",\n  projectId: \"videoconference-bf935\",\n  storageBucket: \"videoconference-bf935.appspot.com\",\n  messagingSenderId: \"895553387250\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport reducer from './reducers'\nimport App from './containers/App.jsx';\nimport './style.css';\nimport './service/firebase';\nimport createHistory from 'history/createBrowserHistory';\n\nconst history = createHistory({ forceRefresh: true });\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\t\n    <App history={history}/>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}