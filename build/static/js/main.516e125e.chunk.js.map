{"version":3,"sources":["serviceWorker.js","containers/App.jsx","actions/index.js","reducer/index.js","components/Alert.jsx","components/Main.jsx","components/LoginAlert.jsx","components/Navbar.jsx","components/About.jsx","components/Rooms.jsx","components/RoomsDetails.jsx","components/Warning.jsx","components/Home.jsx","components/NotSupport.jsx","components/App.jsx","service/firebase.js","index.js"],"names":["Boolean","window","location","hostname","match","rtc","ALERT_WARNING","initialState","items","isLoggedIn","error","isroom","peers","inroom","webrtc","roomname","mute","length","pass","popopen","focusid","focustitle","aboutValueTitle","alertMessage","spinner","alertBoxBottom","alertColor","channelAlertMessage","loggedPopUp","deleteAelrt","ieCehck","pageReturn","reducer","state","arguments","undefined","action","type","Object","objectSpread","data","user","loggedTrue","roomCopy","toConsumableArray","concat","dataroom","removeRoom","roomId","removeUpdate","filter","_id","deleteMsg","payload","peerCopy","peer","p","closed","func","unmute","result","title","booelan","dataId","targetTitle","popBoolean","roomBoolean","message","check","alert","color","resultBoolean","ieBoolean","warningSould","Alert","_ref","gochnanelRoom","passCheckRef","passwordCheck","popClose","inputCancel","react_default","a","createElement","className","onClick","htmlFor","name","ref","placeholder","autoFocus","style","Main","saveFormData","inputRef","passRef","src","alt","id","components_Alert","LoginAlert","Navbar","loginpopEvent","alertMessageFormat","onLoginButtonClick","signAlert","onLogoutButtonClick","Link","to","url","components_LoginAlert","About","goingRef","goingChannel","Rooms","delPopClose","roomDelete","roomData","popEvent","roomDeletePop","uniqWith","isEqual","map","key","userName","data-id","data-mail","userMail","RoomsDetails","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","remoteVideos","_this$props","room_name","params","startLoclaVideo","localVideo","AddpeerVideo","joinChat","_this2","_this$props2","email","disconnect","handleSelfMute","autoPlay","vid","nick","split","getContainerId","getId","playsInline","Component","Warning","pageGoback","Redirect","React","Home","onpopstate","e","disconnectSet","pathname","chatRoomUsing","connection","stopLocalVideo","leaveRoom","history","push","alertMessageChange","init","validityCheck","components_Navbar","Switch","Route","exact","path","render","components_Main","assign","components_About","components_Rooms","RoomsDetails_RoomsDetails","bind","localref","Warning_Warning","NotSupport","href","App","usingUserData","channelData","getVersionOfIE","event","preventDefault","channelTitle","inputNode","value","channelPassword","passNode","aboutPopEvent","MainAlertMessageChange","target","dataset","gochannel","titleEqualCheck","goingChannels","aboutAlertMessageChange","dataTite","passCheck","checkNode","passpostCheck","goMoveChannel","_this$props3","channelcheck","roomMatch","alertHide","formatRoomPassword","loginUser","userlogout","react","_Object$assign","Home_Home","saveFormDatas","roomDeletes","signAlertMessage","defineProperty","components_NotSupport","localHostIp","localHostIpApi","provider","firebase","GoogleAuthProvider","createHistory","forceRefresh","socket","io","removeData","dispatch","localStorage","removeItem","connect","signInWithPopup","then","credential","accessToken","users","uid","displayName","photoURL","axios","post","res","token","defaults","headers","common","setAuthToken","decoded","jwt_decode","setItem","JSON","stringify","catch","parse","getItem","userRemove","signOut","on","logedin","roomPassword","callback","titleBlank","replace","titleOverLap","every","roommData","test","emit","channelName","localele","LioWebRTC","localVideoEl","dataOnly","debug","sessionId","localvideo","start","startLocalVideo","config","targetremote","stream","attachStream","autoplay","joinroom","joinRoom","password","roomid","item","inputdata","shouldCheck","roomObj","isroomdata","roomTitle","isRoomValid","some","roomTitleUrl","checkVer","word","agent","navigator","userAgent","toLowerCase","appName","search","RegExp","exec","parseFloat","$1","$2","get_version_of_IE","debounce","withref","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","createBrowserHistory","store","createStore","connectRouter","compose","applyMiddleware","routerMiddleware","logger","es","lib","containers_App","document","getElementById"],"mappings":"qPAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+DCyBFC,mCCnBSC,EAAgB,gBCShBC,EAAe,CAC3BC,MAAO,GACPC,YAAY,EACZC,MAAO,KACPC,OAAQ,GACRC,MAAO,GACPC,QAAQ,EACRC,OAAQ,KACRC,SAAU,GACVC,MAAM,EACNC,OAAQ,EACRC,MAAM,EACNC,SAAS,EACTC,QAAS,GACTC,WAAY,GACZC,gBAAiB,GACjBC,aAAc,0FACdC,SAAS,EACTC,eAAgB,GAChBC,WAAY,UACZC,qBAAqB,EACrBC,aAAa,EACbC,aAAa,EACbC,QAAS,GACTC,YAAY,GA2MEC,EAxMC,WAAkC,IAAjCC,EAAiCC,UAAAjB,OAAA,QAAAkB,IAAAD,UAAA,GAAAA,UAAA,GAAzB3B,EAAc6B,EAAWF,UAAAjB,OAAA,EAAAiB,UAAA,QAAAC,EACjD,OAAQC,EAAOC,MAEd,ID/D2B,gBCgE1B,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECxB,YAAY,EACZD,MAAO4B,EAAOI,OAGhB,IDpE+B,oBCqE9B,IAAIC,EAAOzC,QAAQoC,EAAOI,MAAQJ,EAAOI,KAAO,GAC5CE,IAAa1C,QAAQoC,EAAOI,MAChC,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECxB,WAAYiC,EACZlC,MAAOiC,IAGT,ID5E4B,iBC6E3B,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECxB,YAAY,EACZD,MAAO,KAGT,IDlFwB,aCmFvB,IAAImC,EAAQL,OAAAM,EAAA,EAAAN,CAAOF,EAAOI,MAAdK,OAAAP,OAAAM,EAAA,EAAAN,CAAuBL,EAAMtB,SACzC,OAAO2B,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECtB,OAAQgC,IAGV,IDhFsB,WCiFrB,IAAMG,EAAQR,OAAAM,EAAA,EAAAN,CAAOL,EAAMtB,QAAbkC,OAAA,CAAqBT,EAAOI,OAC1C,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECtB,OAAQmC,IAGV,ID1E6B,kBC2E5B,IAAMC,EAAad,EAAMtB,OACnBqC,EAASZ,EAAOI,KAChBS,EAAeF,EAAWG,OAAO,SAACV,GAAD,OAAUQ,IAAWR,EAAKW,MACjE,OAAOb,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECtB,OAAQsC,EACRpB,YAAaO,EAAOgB,YAGtB,IDhGyB,cCiGxB,OAAOd,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECJ,YAAaO,EAAOgB,YAGtB,ID/GyB,cCgHxB,OAAOd,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECnB,OAAQsB,EAAOiB,UAGjB,IDpHuB,YCqHtB,IAAIC,EAAQhB,OAAAM,EAAA,EAAAN,CAAOL,EAAMrB,OAAbiC,OAAA,CAAoBT,EAAOmB,OACvC,OAAOjB,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECrB,MAAO0C,IAGT,ID1H0B,eC2HzB,OAAOhB,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECrB,MAAOqB,EAAMrB,MAAMsC,OAAO,SAAAM,GAAC,OAAKA,EAAEC,WAGpC,ID/H2B,gBCoI3B,IDnIyB,cCwIzB,IDvI6B,kBC4I7B,ID3IiC,sBC4IhC,OAAOnB,OAAAC,EAAA,EAAAD,CAAA,GACHL,GAGL,ID/IyB,cCiJxB,OADCA,EAAMjB,KAAQoB,EAAOsB,KAAKC,SAAWvB,EAAOsB,KAAK1C,OAC3CsB,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECjB,MAAOiB,EAAMjB,OAGf,IDnJ2B,gBCoJ1B,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GACHL,GAGL,IDvJ4B,iBCwJ3B,OAAOK,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECf,KAAMkB,EAAOwB,OACbvC,WAAYe,EAAOyB,MACnBrC,SAAS,IAGX,ID9J6B,kBC+J5B,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECd,QAASiB,EAAO0B,QAChB1C,QAASgB,EAAO2B,OAChBzC,gBAAiBc,EAAO4B,cAG1B,IDlK8B,mBCmK7B,OAAO1B,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECf,KAAMkB,EAAOlB,OAGf,ID3K6B,kBC4K5B,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECd,QAASiB,EAAO0B,QAChBlC,YAAaQ,EAAO6B,WACpBpC,YAAaO,EAAOgB,YAGtB,IDlL8B,mBCmL7B,OAAOd,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECf,KAAMkB,EAAOI,KACb3B,OAAQuB,EAAO8B,cAGjB,IDxL8B,mBCyL7B,OAAO5B,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECpB,OAAQuB,EAAO8B,cAGjB,ID5LkC,uBC6LjC,OAAO5B,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECV,aAAca,EAAO+B,UAGvB,IDjM4B,iBCkM3B,OAAO7B,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECT,QAASY,EAAOgC,QAGlB,KAAK9D,EACJ,OAAOgC,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECR,eAAgBW,EAAOiC,MACvB3C,WAAYU,EAAOkC,MACnB3C,oBAAqBS,EAAOmC,gBAG9B,ID7M6B,kBC8M5B,OAAOjC,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECL,YAAaQ,EAAO6B,aAGtB,IDjNsB,WCkNrB,OAAO3B,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECH,QAASM,EAAOoC,YAGlB,IDtN2B,gBCuN1B,OAAOlC,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECF,WAAYK,EAAOqC,eAGrB,IDvPwB,aCwPvB,OAAOnC,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECzB,MAAO,GACPC,YAAY,IAGd,QACC,OAAOwB,6JC/NKyC,EA9BD,SAAAC,GAAgJ,IAA7IC,EAA6ID,EAA7IC,cAAepD,EAA8HmD,EAA9HnD,QAASqD,EAAqHF,EAArHE,aAAcC,EAAuGH,EAAvGG,cAAeC,EAAwFJ,EAAxFI,SAAU7D,EAA8EyD,EAA9EzD,KAA+BK,GAA+CoD,EAAxEtD,WAAwEsD,EAA5DK,YAA4DL,EAA/CpD,cAAcE,EAAiCkD,EAAjClD,eAAgBC,EAAiBiD,EAAjBjD,WAC3I,OACEuD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,QAASN,KAEvCE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAK5D,GACL0D,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,cACbL,EAAAC,EAAAC,cAAA,SAAO9C,KAAK,WAAWkD,KAAK,aAAaC,IAAKX,EAAcY,YAAY,2BAAOC,WAAS,IACxFT,EAAAC,EAAAC,cAAA,UAAQI,KAAK,aAAaF,QAASP,GAAnC,QAGItD,EAAWyD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAwB,QAKxDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEXlE,EACE+D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBC,QAAST,GAAxC,6IAAyFK,EAAAC,EAAAC,cAAA,KAAGQ,MAAO,CAAErB,MAAQ5C,IAAeD,OCY3HmE,EAjCF,SAAAjB,GAA+M,IAA5MC,EAA4MD,EAA5MC,cAAejD,EAA6LgD,EAA7LhD,oBAAqBkE,EAAwKlB,EAAxKkB,aAAcC,EAA0JnB,EAA1JmB,SAAUC,EAAgJpB,EAAhJoB,QAASlB,EAAuIF,EAAvIE,aAAcC,EAAyHH,EAAzHG,cAAeC,EAA0GJ,EAA1GI,SAAU7D,EAAgGyD,EAAhGzD,KAAMG,EAA0FsD,EAA1FtD,WAAY2D,EAA8EL,EAA9EK,YAAa7D,EAAiEwD,EAAjExD,QAASI,EAAwDoD,EAAxDpD,aAAcC,EAA0CmD,EAA1CnD,QAASC,EAAiCkD,EAAjClD,eAAgBC,EAAiBiD,EAAjBjD,WACzM,OACEuD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eACbL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKa,IAAI,4FAA4FC,IAAI,MAE3GhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,SAAO9C,KAAK,OAAO6D,GAAG,cAAcX,KAAK,cAAcC,IAAKM,EAAUL,YAAY,6FAClFR,EAAAC,EAAAC,cAAA,SAAO9C,KAAK,WAAW6D,GAAG,iBAAiBX,KAAK,cAAcC,IAAKO,EAASN,YAAY,0EAE1FR,EAAAC,EAAAC,cAAA,UAAQI,KAAK,cAAcF,QAASQ,GAApC,WAEElE,EACEsD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAA6BO,MAAO,CAAErB,MAAO5C,IAAeD,GACzE,SAOTN,EACC8D,EAAAC,EAAAC,cAACgB,EAAD,CAAOvB,cAAeA,EAAelD,WAAYA,EAAYD,eAAgBA,EAAgBD,QAASA,EAASD,aAAcA,EAAcsD,aAAcA,EAAcC,cAAeA,EAAeC,SAAUA,EAAU7D,KAAMA,EAAMG,WAAYA,EAAY2D,YAAaA,IAC1Q,gBCfKoB,EAbI,SAAAzB,GAAkB,IAAfI,EAAeJ,EAAfI,SACpB,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,QAASN,KAEvCE,EAAAC,EAAAC,cAAA,mEC2COkB,EAjDA,SAAA1B,GAAkJ,IAA/I/C,EAA+I+C,EAA/I/C,YAAsBmD,GAAyHJ,EAAlIxD,QAAkIwD,EAAzHI,UAAUuB,EAA+G3B,EAA/G2B,cAAe7F,EAAgGkE,EAAhGlE,WAAY8F,EAAoF5B,EAApF4B,mBAA+BC,GAAqD7B,EAAhE8B,UAAgE9B,EAArD6B,oBAAoBE,EAAiC/B,EAAjC+B,oBAAqBlG,EAAYmE,EAAZnE,MACnJ,OACEyE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMtB,QAASkB,EAAoBK,GAAG,KACpC3B,EAAAC,EAAAC,cAAA,OAAKa,IAAI,4FAA4FC,IAAI,OAG7GhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMtB,QAASkB,EAAoBK,GAAG,UAAtC,UAEF3B,EAAAC,EAAAC,cAAA,UAEK1E,EACCwE,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMtB,QAASkB,EAAoBK,GAAG,UAAtC,gBACA3B,EAAAC,EAAAC,cAAA,KAAGE,QAASiB,GAAZ,iBAGNrB,EAAAC,EAAAC,cAAA,UAEK1E,EACCwE,EAAAC,EAAAC,cAAA,KAAGE,QAASqB,GAAZ,YACAzB,EAAAC,EAAAC,cAAA,KAAGE,QAASmB,GAAZ,cAKVvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEV3E,EACCwE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKa,IAAKxF,EAAMqG,MAAtC,IAA8C5B,EAAAC,EAAAC,cAAA,cAAS3E,EAAM+E,MAA7D,0CACAN,EAAAC,EAAAC,cAAA,kEAMPvD,EACCqD,EAAAC,EAAAC,cAAC2B,EAAD,CAAY/B,SAAUA,IACtB,OCRKgC,EAnCD,SAAApC,GAAsM,IAAnMC,EAAmMD,EAAnMC,cAAejD,EAAoLgD,EAApLhD,oBAAqBqF,EAA+JrC,EAA/JqC,SAAUC,EAAqJtC,EAArJsC,aAAcpC,EAAuIF,EAAvIE,aAAcC,EAAyHH,EAAzHG,cAAeC,EAA0GJ,EAA1GI,SAAU7D,EAAgGyD,EAAhGzD,KAAMG,EAA0FsD,EAA1FtD,WAAYF,EAA8EwD,EAA9ExD,QAAS6D,EAAqEL,EAArEK,YAAazD,EAAwDoD,EAAxDpD,aAAcC,EAA0CmD,EAA1CnD,QAASC,EAAiCkD,EAAjClD,eAAgBC,EAAiBiD,EAAjBjD,WAClM,OACCuD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,6HACwBF,EAAAC,EAAAC,cAAA,WADxB,6HAIAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,iBACdL,EAAAC,EAAAC,cAAA,SAAO9C,KAAK,OAAO6D,GAAG,gBAAgBX,KAAK,gBAAgBC,IAAKwB,EAAUvB,YAAY,0EACtFR,EAAAC,EAAAC,cAAA,UAAQI,KAAK,gBAAgBF,QAAS4B,GAAtC,OAECtF,EACCsD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAA6BO,MAAO,CAAErB,MAAO5C,IAAeD,GACzE,UAQLN,EACA8D,EAAAC,EAAAC,cAACgB,EAAD,CAAOvB,cAAeA,EAAelD,WAAYA,EAAYD,eAAgBA,EAAgBD,QAASA,EAASD,aAAcA,EAAcsD,aAAcA,EAAcC,cAAeA,EAAeC,SAAUA,EAAU7D,KAAMA,EAAMG,WAAYA,EAAY2D,YAAaA,IAC1Q,OCkCUkC,EA7DD,SAAAvC,GAAgPA,EAA7O/D,MAA6O,IAAtOuG,EAAsOxC,EAAtOwC,YAAavC,EAAyND,EAAzNC,cAAe/C,EAA0M8C,EAA1M9C,YAAaL,EAA6LmD,EAA7LnD,QAAS4F,EAAoLzC,EAApLyC,WAAYC,EAAwK1C,EAAxK0C,SAAUxC,EAA8JF,EAA9JE,aAAcC,EAAgJH,EAAhJG,cAAetE,EAAiImE,EAAjInE,MAAOW,EAA0HwD,EAA1HxD,QAASmG,EAAiH3C,EAAjH2C,SAAUvC,EAAuGJ,EAAvGI,SAAUwC,EAA6F5C,EAA7F4C,cAAerG,EAA8EyD,EAA9EzD,KAAMG,EAAwEsD,EAAxEtD,WAAY2D,EAA4DL,EAA5DK,YAAazD,EAA+CoD,EAA/CpD,aAAcE,EAAiCkD,EAAjClD,eAAgBC,EAAiBiD,EAAjBjD,WAC3O,OACEuD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,gBAEEH,EAAAC,EAAAC,cAAA,qFAIDkC,EAASpG,OACRuG,mBAASH,EAAUI,WAASC,IAAI,SAAAlF,GAC9B,OACEyC,EAAAC,EAAAC,cAAA,MAAIwC,IAAKnF,EAAKW,KACZ8B,EAAAC,EAAAC,cAAA,UACG3C,EAAKqB,MACNoB,EAAAC,EAAAC,cAAA,uBAAe3C,EAAKoF,WAEtB3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQE,QAASiC,EAAUO,UAASrF,EAAKW,KACvC8B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAqByC,UAASrF,EAAKW,OAG/CX,EAAKoF,WAAapH,EAAM+E,KACvBN,EAAAC,EAAAC,cAAA,UAAQE,QAAS+B,EAAYU,YAAWtF,EAAKuF,SAAUF,UAASrF,EAAKW,KACnE8B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,QAAS+B,EAAYU,YAAWtF,EAAKuF,SAAUF,UAASrF,EAAKW,OAC/E,SAMxB8B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,oGAIHjE,EACC8D,EAAAC,EAAAC,cAACgB,EAAD,CAAOvB,cAAeA,EAAelD,WAAYA,EAAYD,eAAgBA,EAAgBD,QAASA,EAASD,aAAcA,EAAcsD,aAAcA,EAAcC,cAAeA,EAAeC,SAAUA,EAAU7D,KAAMA,EAAMG,WAAYA,EAAY2D,YAAaA,IAC1Q,KAGDnD,EACCoD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,QAAS8B,GAArC,MAEFlC,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQE,QAASkC,GAAjB,WACJtC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQE,QAAS8B,GAAjB,0BAIV,OCzDWa,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA5F,OAAA6F,EAAA,EAAA7F,CAAA8F,KAAAJ,IACjBE,EAAA5F,OAAA+F,EAAA,EAAA/F,CAAA8F,KAAA9F,OAAAgG,EAAA,EAAAhG,CAAA0F,GAAAO,KAAAH,KAAMH,KACDO,aAAe,GAFHN,oFAOjBE,KAAKlH,KAAOkH,KAAKH,MAAM/G,iDAGL,IAAAuH,EACsBL,KAAKH,MAA7BtH,GADE8H,EACV5H,OADU4H,EACF9H,QACR+H,GAFUD,EACMvH,KADNuH,EACY7H,MACRwH,KAAKH,MAAM7H,MAAMuI,OAA/BD,WACRN,KAAKtH,OAASsH,KAAKH,MAAMnH,OACzBsH,KAAKH,MAAMW,gBAAgBR,KAAKS,YAChCT,KAAKH,MAAMa,aAAaV,KAAKI,cAC7BJ,KAAKH,MAAMc,SAASL,EAAW/H,oCAGxB,IAAAqI,EAAAZ,KAAAa,EAC+Eb,KAAKH,MAAnFrH,EADDqI,EACCrI,MAAOsI,EADRD,EACQC,MAAOrC,EADfoC,EACepC,IAAmB/F,GADlCmI,EACoBH,aADpBG,EACkCnI,QAAQqI,EAD1CF,EAC0CE,WAAYC,EADtDH,EACsDG,eAAgBpI,EADtEiI,EACsEjI,KACrE0H,EAAcN,KAAKH,MAAM7H,MAAMuI,OAA/BD,UACR,OACEzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UACGuD,GAEHzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,SAAOe,GAAG,aAAamD,UAAU,EAAM7D,IAAK,SAAC8D,GAAD,OAASN,EAAKH,WAAaS,KACvErE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UAAQE,QAAS+D,GAEZpI,EACCiE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAGnBH,EAAAC,EAAAC,cAAA,UAAQE,QAAS8D,GACflE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAGjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,aAAK+D,EAAL,OAGJjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAmBxE,EAAMK,OAAS,GAAvD,UACAgE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,OAAKa,IAAKa,EAAKZ,IAAI,KAAxB,IAA8BhB,EAAAC,EAAAC,cAAA,SAAI+D,IAEhCtI,EAAM8G,IAAI,SAAAnC,GAAI,OAAIN,EAAAC,EAAAC,cAAA,MAAIwC,IAAKpC,EAAKW,IAAd,IAAmBjB,EAAAC,EAAAC,cAAA,OAAKa,IAAKT,EAAKgE,KAAKC,MAAM,KAAK,GAAIvD,IAAI,KAA1D,IAAgEhB,EAAAC,EAAAC,cAAA,SAAII,EAAKgE,KAAKC,MAAM,KAAK,UAKnHvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEXoC,mBAAS5G,EAAO6G,WAASC,IAAI,SAAAlF,GAAI,OAC/ByC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeuC,IAAKnF,EAAK0D,GAAIA,GAAE,GAAArD,OAAK/B,EAAO2I,eAAejH,KACvEyC,EAAAC,EAAAC,cAAA,SAAOe,GAAIpF,EAAO4I,MAAMlH,GAAO6G,UAAU,EAAM7D,IAAK,SAAC8D,GAAD,OAASN,EAAKR,aAAahG,EAAK0D,IAAMoD,GAAKK,aAAW,IAC1G1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SAAI3C,EAAK+G,KAAKC,MAAM,KAAK,kBAhEHI,aCArBC,cACnB,SAAAA,EAAa5B,GAAQ,OAAA3F,OAAA6F,EAAA,EAAA7F,CAAA8F,KAAAyB,GAAAvH,OAAA+F,EAAA,EAAA/F,CAAA8F,KAAA9F,OAAAgG,EAAA,EAAAhG,CAAAuH,GAAAtB,KAAAH,KACbH,qFAIPG,KAAKH,MAAM6B,aACX1B,KAAKH,MAAMlD,4CAGF,IACDhD,EAAcqG,KAAKH,MAAnBlG,WACP,OACEkD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8DAAaF,EAAAC,EAAAC,cAAA,WAAb,4IACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAb,8JAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEZrD,EAAckD,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAUnD,GAAG,WAAc,aApBfoD,IAAMJ,WCMtBK,cACnB,SAAAA,EAAYhC,GAAO,IAAAC,EAAA,OAAA5F,OAAA6F,EAAA,EAAA7F,CAAA8F,KAAA6B,GACjB/B,EAAA5F,OAAA+F,EAAA,EAAA/F,CAAA8F,KAAA9F,OAAAgG,EAAA,EAAAhG,CAAA2H,GAAA1B,KAAAH,KAAMH,IACNhI,OAAOiK,WAAa,SAAAC,GAClBjC,EAAKD,MAAMlD,WACXmD,EAAKkC,iBAJUlC,oFASZE,KAAKH,MAAM/H,SAASmK,SAASb,MAAM,WAAW,GAGjDpB,KAAKH,MAAMqC,cAAclC,KAAKH,MAAMtH,OAAQyH,KAAKH,MAAMpH,OAAQuH,KAAKH,MAAMrH,OAF1EwH,KAAKgC,wDAOPhC,KAAKH,MAAMnH,OAAOyJ,WAAWpB,aAC7Bf,KAAKH,MAAMnH,OAAO0J,iBAClBpC,KAAKH,MAAMnH,OAAO2J,iDAIlBrC,KAAKH,MAAMyC,QAAQC,KAAK,UACxBvC,KAAKH,MAAM2C,qBACXxC,KAAKH,MAAMlD,4CAGJ,IAAAiE,EAAAZ,KAAAK,EA6CaL,KAAKH,MA3CvBxH,EAFKgI,EAELhI,WACAqF,EAHK2C,EAGL3C,SACAkB,EAJKyB,EAILzB,SACAxG,EALKiI,EAKLjI,MACAG,EANK8H,EAML9H,OACAkK,EAPKpC,EAOLoC,KACAjK,EARK6H,EAQL7H,MACAC,EATK4H,EASL5H,OACAC,EAVK2H,EAUL3H,OACA+E,EAXK4C,EAWL5C,aACAiD,EAZKL,EAYLK,aACAC,EAbKN,EAaLM,SACAH,EAdKH,EAcLG,gBACAQ,EAfKX,EAeLW,eACAnC,EAhBKwB,EAgBLxB,aACAlB,EAjBK0C,EAiBL1C,QACAlB,EAlBK4D,EAkBL5D,aACAC,EAnBK2D,EAmBL3D,cACA5D,EApBKuH,EAoBLvH,KACAF,EArBKyH,EAqBLzH,KACAG,EAtBKsH,EAsBLtH,QACAmG,EAvBKmB,EAuBLnB,SACAvC,EAxBK0D,EAwBL1D,SACA1D,EAzBKoH,EAyBLpH,WACA2D,EA1BKyD,EA0BLzD,YACAzD,EA3BKkH,EA2BLlH,aACAC,EA5BKiH,EA4BLjH,QACAC,EA7BKgH,EA6BLhH,eACAC,EA9BK+G,EA8BL/G,WACAC,EA/BK8G,EA+BL9G,oBACA4E,EAhCKkC,EAgCLlC,mBACAG,EAjCK+B,EAiCL/B,oBACAF,EAlCKiC,EAkCLjC,mBACAC,EAnCKgC,EAmCLhC,UACAH,EApCKmC,EAoCLnC,cACA1E,EArCK6G,EAqCL7G,YACAC,EAtCK4G,EAsCL5G,YACA0F,EAvCKkB,EAuCLlB,cACA3C,EAxCK6D,EAwCL7D,cACAuC,EAzCKsB,EAyCLtB,YACAC,EA1CKqB,EA0CLrB,WACA0C,EA3CKrB,EA2CLqB,WACA/H,GA5CK0G,EA4CL1G,WA5CK0G,EA6CLqC,cACF,OACE7F,EAAAC,EAAAC,cAAA,OAAKe,GAAG,MAAMd,UAAU,aACtBH,EAAAC,EAAAC,cAAC4F,EAAD,CACEvK,MAAOA,EACP8F,cAAeA,EACf1E,YAAaA,EACbnB,WAAYA,EACZgG,UAAWA,EACXD,mBAAoBA,EACpBE,oBAAqBA,EACrBH,mBAAoBA,EACpB9E,eAAgBA,EAChB6F,SAAUA,EACVvC,SAAUA,EACV5D,QAASA,IAEX8D,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,KACE/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAAnD,GAC5B,OACEhD,EAAAC,EAAAC,cAACkG,EAAD/I,OAAAgJ,OAAA,GACMrD,EADN,CAEEzG,QAASA,EACTf,WAAYA,EACZoF,aAAcA,EACdC,SAAUA,EACVC,QAASA,EACT7E,KAAMA,EACNoG,SAAUA,EACVvC,SAAUA,EACV5D,QAASA,EACT2D,cAAeA,EACfD,aAAcA,EACdxD,WAAYA,EACZE,aAAcA,EACdE,eAAgBA,EAChBC,WAAYA,EACZC,oBAAqBA,EACrBiD,cAAeA,QAIrBK,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,SAAAnD,GACjC,OACEhD,EAAAC,EAAAC,cAACoG,EAADjJ,OAAAgJ,OAAA,GACMrD,EADN,CAEEzG,QAASA,EACTwF,SAAUA,EACVC,aAAcA,EACd/F,KAAMA,EACNS,oBAAqBA,EACrB2F,SAAUA,EACVvC,SAAUA,EACV5D,QAASA,EACT2D,cAAeA,EACfD,aAAcA,EACdxD,WAAYA,EACZ2D,YAAaA,EACbzD,aAAcA,EACdE,eAAgBA,EAChBC,WAAYA,EACZkD,cAAeA,QAIrBK,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,SAAAnD,GACjC,OAAIxH,EAEAwE,EAAAC,EAAAC,cAACqG,EAAD,CACEhK,QAASA,EACTuD,SAAUA,EACV5D,QAASA,EACTD,KAAMA,EACNV,MAAOA,EACP6G,SAAU1G,EACVyG,WAAYA,EACZvC,aAAcA,EACdC,cAAeA,EACfwC,SAAUA,EACVjG,WAAYA,EACZ2D,YAAaA,EACbzD,aAAcA,EACdE,eAAgBA,EAChBC,WAAYA,EACZG,YAAaA,EACb0F,cAAeA,EACf3C,cAAeA,EACfuC,YAAaA,EACbvG,MAAOA,IAIJqE,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAUnD,GAAG,SAGxB3B,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,OAAQ,SAAAnD,GAC5C,IAAIiB,EAAQ1I,EAAM+E,KAAO/E,EAAM+E,KAAO,OACtC,OAAI9E,EACEI,EAEAoE,EAAAC,EAAAC,cAACsG,EAADnJ,OAAAgJ,OAAA,GACMrD,EADN,CAEE4C,KAAMA,EACN3B,MAAOA,EACPrC,IAAKrG,EAAMqG,IACXjG,MAAOA,EACPE,OAAQA,EACRD,OAAQA,EACRF,OAAQA,EACRiI,gBAAiBA,EACjBE,aAAcA,EACdC,SAAUA,EACV/H,KAAMA,EACNE,KAAMA,EACNiI,WAAYH,EAAKG,WAAWuC,KAAK1C,GACjCI,eAAgBA,EAChBuC,SAAU,SAACrC,GAAD,OAASN,EAAKH,WAAaS,MAIlCrE,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAUnD,GAAG,aAGf3B,EAAAC,EAAAC,cAAA,6BAIXF,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOE,KAAK,WAAWC,OAAQ,SAAAnD,GAAK,OAAKhD,EAAAC,EAAAC,cAACyG,EAADtJ,OAAAgJ,OAAA,GAAarD,EAAb,CAAoB6B,WAAYA,EAAY/H,WAAYA,GAAYgD,SAAUA,QACvHE,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOG,OAAQ,kBAAMnG,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAUnD,GAAG,UAEpC3B,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,oDA7MwByE,aCMnBiC,UAbI,WACjB,OACE5G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,iJAEEF,EAAAC,EAAAC,cAAA,WAFF,qFAGEF,EAAAC,EAAAC,cAAA,KAAG2G,KAAK,8CAAR,oCAEF7G,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,kBCHe2G,cAEnB,SAAAA,EAAY9D,GAAQ,OAAA3F,OAAA6F,EAAA,EAAA7F,CAAA8F,KAAA2D,GAAAzJ,OAAA+F,EAAA,EAAA/F,CAAA8F,KAAA9F,OAAAgG,EAAA,EAAAhG,CAAAyJ,GAAAxD,KAAAH,KACZH,qFAING,KAAKH,MAAM+D,gBACX5D,KAAKH,MAAMgE,cACX7D,KAAKH,MAAM4C,OACXzC,KAAKH,MAAMiE,uDAGCC,GACZA,EAAMC,iBADa,IAAA3D,EAEmBL,KAAKH,MAAnCxH,EAFWgI,EAEXhI,WAAYD,EAFDiI,EAECjI,MAAOG,EAFR8H,EAEQ9H,OACrB0L,EAAejE,KAAKkE,UAAUC,MAC9BC,EAAkBpE,KAAKqE,SAASF,MACtCnE,KAAKH,MAAMpC,aAAapF,EAAYD,EAAO6L,EAAcG,EAAiB7L,EAAQyH,KAAKH,MAAMyE,eAC7FtE,KAAKH,MAAM0E,yBACXvE,KAAKkE,UAAUC,MAAQ,GACvBnE,KAAKqE,SAASF,MAAQ,uCAGZJ,GACVA,EAAMC,iBACN,IAAMrI,EAASoI,EAAMS,OAAOC,QAAQ3G,GACpCkC,KAAKH,MAAMb,WAAWrD,wCAGXoI,GACXA,EAAMC,iBACN,IAAMC,EAAejE,KAAK0E,UAAUP,MAFlBtD,EAGab,KAAKH,MAA5BxH,EAHUwI,EAGVxI,WAAYE,EAHFsI,EAGEtI,OACdoM,EAAkBpM,EAAOuC,OAAO,SAAAV,GAAI,OAAIA,EAAKqB,QAAUwI,IAAc,GAC3EjE,KAAKH,MAAM+E,cAAcvM,EAAY4L,EAAc1L,EAAQoM,EAAiB3E,KAAKH,MAAMyE,eACvFtE,KAAKH,MAAMgF,0BACX7E,KAAK0E,UAAUP,MAAQ,yCAGXJ,GACZA,EAAMC,iBACN,IAAMc,EAAW9E,KAAKH,MAAM3G,gBACtByC,EAASqE,KAAKH,MAAM7G,QACpB+L,EAAY/E,KAAKgF,UAAUb,MACzB5L,EAAWyH,KAAKH,MAAhBtH,OACRyH,KAAKH,MAAMoF,cAAcF,EAAWpJ,EAAQpD,EAAQuM,EAAUf,2CAGhD,IACP9K,EAAc+G,KAAKH,MAAnB5G,WACP+G,KAAKH,MAAMqF,cAAcjM,oCAGlB,IAAA6G,EAAAE,KAAAmF,EA2CUnF,KAAKH,MAzCpBxH,EAFK8M,EAEL9M,WACAD,EAHK+M,EAGL/M,MACAG,EAJK4M,EAIL5M,OACAC,EALK2M,EAKL3M,MACAC,EANK0M,EAML1M,OACAC,EAPKyM,EAOLzM,OACAiI,EARKwE,EAQLxE,SACAD,EATKyE,EASLzE,aACAF,EAVK2E,EAUL3E,gBACAQ,EAXKmE,EAWLnE,eACApI,EAZKuM,EAYLvM,KACAE,EAbKqM,EAaLrM,KAEAC,GAfKoM,EAcL7C,QAdK6C,EAeLpM,SACAqM,EAhBKD,EAgBLC,aACAlG,EAjBKiG,EAiBLjG,SACAvC,EAlBKwI,EAkBLxI,SACAsI,EAnBKE,EAmBLF,cACAhM,EApBKkM,EAoBLlM,WACAoM,EArBKF,EAqBLE,UACAC,EAtBKH,EAsBLG,UACA1I,EAvBKuI,EAuBLvI,YACA2I,EAxBKJ,EAwBLI,mBACApM,EAzBKgM,EAyBLhM,aACAqM,EA1BKL,EA0BLK,UACAC,EA3BKN,EA2BLM,WACAZ,EA5BKM,EA4BLN,wBACAzL,EA7BK+L,EA6BL/L,QACAC,EA9BK8L,EA8BL9L,eACAC,EA/BK6L,EA+BL7L,WACAC,EAhCK4L,EAgCL5L,oBACA4E,EAjCKgH,EAiCLhH,mBACAD,EAlCKiH,EAkCLjH,cACA1E,EAnCK2L,EAmCL3L,YACAC,EApCK0L,EAoCL1L,YACA0F,EArCKgG,EAqCLhG,cAEAzF,GAvCKyL,EAsCL3I,cAtCK2I,EAuCLzL,SACAqF,EAxCKoG,EAwCLpG,YACAmD,EAzCKiD,EAyCLjD,cACAR,EA1CKyD,EA0CLzD,WACA/H,EA3CKwL,EA2CLxL,WACF,OACEkD,EAAAC,EAAAC,cAAC2I,EAAA,SAAD,KACE7I,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOE,KAAK,IACVC,OAAQ,SAAAnD,GACO,IAAA8F,EAAb,OAAIjM,EAEY,OAAXhB,GAAmBd,QAAQW,GAC1BsE,EAAAC,EAAAC,cAAC6I,EAAD1L,OAAAgJ,OAAA,GACMrD,GADN8F,EAAA,CAEEtN,WAAYA,EACZD,MAAOA,EACPG,OAAQA,EACR6M,aAAcA,EACdlD,cAAeA,EACf/D,mBAAoBA,EACpBV,aAAcqC,EAAK+F,cAAcvC,KAAKxD,GACtCd,WAAYc,EAAKgG,YAAYxC,KAAKxD,GAClCX,cAAeA,EAAcmE,KAAKxD,GAClCjB,aAAciB,EAAKjB,aAAayE,KAAKxD,GACrCpD,cAAeoD,EAAKpD,cAAc4G,KAAKxD,GACvCyF,mBAAoBA,EACpBvE,eAAgBA,EAAesC,KAAKxD,GACpClD,YAAaA,EAAY0G,KAAKxD,GAC9BmF,cAAeA,EACf/F,SAAUA,EAASoE,KAAKxD,GACxBf,YAAaA,EAAYuE,KAAKxD,GAC9BtD,cAAesD,EAAKtD,cAAc8G,KAAKxD,GACvC5B,cAAeA,EAAcoF,KAAKxD,GAClCtG,YAAaA,EACbkI,WAAYA,EACZ/E,SAAUA,EACV1D,WAAYA,EACZqM,UAAWA,EACXhM,WAAYA,EACZK,WAAYA,EACZN,eAAgBA,EAChB+E,mBAAoBoH,EACpBlH,oBAAqBmH,EACrBpH,UAAWyB,EAAKiG,iBAChBvD,mBAAoBqC,EACpBnM,OAAQA,EACRF,MAAOA,EACPC,OAAQA,EACRK,KAAMA,EACNuM,UAAWA,EACX9L,oBAAqBA,EACrBiH,gBAAiBA,EACjBE,aAAcA,EACd9H,KAAMA,GAzCRsB,OAAA8L,EAAA,EAAA9L,CAAAyL,EAAA,gBA0CiBzH,GA1CjBhE,OAAA8L,EAAA,EAAA9L,CAAAyL,EAAA,UA2CW5M,GA3CXmB,OAAA8L,EAAA,EAAA9L,CAAAyL,EAAA,WA4CYhF,GA5CZzG,OAAA8L,EAAA,EAAA9L,CAAAyL,EAAA,eA6CgBxM,GA7ChBe,OAAA8L,EAAA,EAAA9L,CAAAyL,EAAA,UA8CWvM,GA9CXc,OAAA8L,EAAA,EAAA9L,CAAAyL,EAAA,cA+CelM,GA/CfS,OAAA8L,EAAA,EAAA9L,CAAAyL,EAAA,WAgDY,SAAAxB,GAAK,OAAIrE,EAAKoE,UAAYC,IAhDtCjK,OAAA8L,EAAA,EAAA9L,CAAAyL,EAAA,WAiDY,SAAAxB,GAAK,OAAIrE,EAAK4E,UAAYP,IAjDtCjK,OAAA8L,EAAA,EAAA9L,CAAAyL,EAAA,UAkDW,SAAAxB,GAAK,OAAIrE,EAAKuE,SAAWF,IAlDpCjK,OAAA8L,EAAA,EAAA9L,CAAAyL,EAAA,eAmDgB,SAAAxB,GAAK,OAAIrE,EAAKkF,UAAYb,IAnD1CwB,KAqDA9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAGZH,EAAAC,EAAAC,cAACkJ,EAAD,iBAjKYrE,IAAMJ,6BbqCjC0E,EAAc,6CACdC,EAAc,GAAA1L,OAAMyL,EAAN,aACdE,EAAW,IAAIC,OAAcC,mBAC7BhE,GAAUiE,IAAc,CAAEC,cAAc,IACxCC,GAASC,IAAGR,GA2BZS,GAAa,SAACC,GAGlBA,EAAS,CACP3M,KC7D4B,mBD8D5BG,KAH+B,OADbyM,aAAaC,WAAW,oBACI,QAmhBnCC,qBA5gBS,SAAAlN,GAAK,MAAK,CAChCzB,MAAOyB,EAAMzB,MACbC,WAAYwB,EAAMxB,WAClBC,MAAOuB,EAAMvB,MACbC,OAAQsB,EAAMtB,OACdE,OAAQoB,EAAMpB,OACdD,MAAOqB,EAAMrB,MACbE,OAAQmB,EAAMnB,OACdE,KAAMiB,EAAMjB,KACZC,OAAQgB,EAAMhB,OACdE,QAASc,EAAMd,QACfC,QAASa,EAAMb,QACfF,KAAMe,EAAMf,KACZG,WAAYY,EAAMZ,WAClBC,gBAAiBW,EAAMX,gBACvBC,aAAcU,EAAMV,aACpBC,QAASS,EAAMT,QACfC,eAAgBQ,EAAMR,eACtBC,WAAYO,EAAMP,WAClBC,oBAAqBM,EAAMN,oBAC3BC,YAAaK,EAAML,YACnBC,YAAaI,EAAMJ,YACnBC,QAASG,EAAMH,QACfC,WAAYE,EAAMF,aAGO,SAACiN,GAC1B,MAAO,CACLpB,UAAW,SAACnL,GACVgM,SAAgBW,gBAAgBZ,GAAUa,KAAK,SAAAzL,GACjCA,EAAO0L,WAAWC,YAA9B,IACIC,EAAQ5L,EAAOnB,KACfmL,EAAY,CACd6B,IAAKD,EAAMC,IACXlK,KAAMiK,EAAME,YACZ7I,IAAK2I,EAAMG,SACXzG,MAAOsG,EAAMtG,OAEf0G,IAAMC,KAAN,GAAAhN,OAAc0L,EAAd,SAAqCX,GAAWyB,KAAK,SAAAS,GAAO,IAClDC,EAAUD,EAAItN,KAAduN,OA1EG,SAAAA,GACfA,EACFH,IAAMI,SAASC,QAAQC,OAAvB,cAAiDH,SAG1CH,IAAMI,SAASC,QAAQC,OAAvB,cAsEDC,CAAaJ,GACb,IAAMK,EAAUC,IAAWN,GAC3Bf,EAAS,CACP3M,KChIiB,gBDiIjBG,KAAM4N,IAERnB,aAAaqB,QAAQ,OAAQC,KAAKC,UAAUJ,MAE9CpB,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,uEACPC,MAAO,UACPC,eAAe,MAEhBkM,MAAM,SAAA/P,GACPsO,EAAS,CAAE3M,KC3IO,aD2IW3B,aAGjCsL,cAAe,WACb,IAAIvJ,EAAO8N,KAAKG,MAAMzB,aAAa0B,QAAQ,SAC3C3B,EAAS,CACP3M,KChJyB,oBDiJzBG,KAAMC,KAGVoL,WAAY,WACV,IAAI+C,EAAa3B,aAAaC,WAAW,QACzCT,SAAgBoC,UAAUxB,KAAK,WAC7BL,EAAS,CACP3M,KCvJoB,iBDwJpBG,KAAMoO,IAER5B,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,uEACPC,MAAO,UACPC,eAAe,MAEhBkM,MAAM,SAAA/P,GACPsO,EAAS,CAAE3M,KCnKO,aDmKW3B,aAGjCuL,YAAa,WACX4C,GAAOiC,GAAG,cAAe,SAACtO,GACxBwM,EAAS,CACP3M,KCtKgB,aDuKhBG,WAGJqM,GAAOiC,GAAG,YAAa,SAACtO,GACtBwM,EAAS,CACP3M,KCnKc,WDoKdG,WAGJqM,GAAOiC,GAAG,aAAc,SAACtO,GACvBwM,EAAS,CACP3M,KC5JqB,kBD6JrBG,YAINqD,aAAc,SAACkL,EAASvQ,EAAOqD,EAAOmN,EAAcrQ,EAAQsQ,GAC1DlC,GAAWC,GACX,IACMkC,EAAarN,EAAMsN,QAAQ,cAAU,IACvCC,EAAepR,QAAQW,EAAO0Q,MAAM,SAAAC,GAAS,OAAIA,EAAUzN,QAAUA,KACzE,GAAIkN,EACF,GAAIlN,EAAM5C,OAAS,GAAK4C,EAAM5C,OAAS,GAAK,CAC1C,IAAIuB,EAAO,CACTqB,QACAmN,eACApJ,SAAUpH,EAAM+E,KAChBwC,SAAUvH,EAAM0I,OAEdkI,GAAgBzQ,IAAW,GAXjB,uDAYG4Q,KAAKP,GAOO,KAAfE,EACVlC,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,+GACPC,MAAO,UACPC,eAAe,KAGjBsK,GAAO2C,KAAK,UAAWhP,GACvBwM,EAAS,CACP3M,KCzMe,kBD0MfyB,SAAS,EACTD,UAEFoN,EAASpN,IApBTmL,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,gLACPC,MAAO,UACPC,eAAe,IAmBnByK,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,kEACPC,MAAO,UACPC,eAAe,SAInByK,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,+FACPC,MAAO,UACPC,eAAe,SAInByK,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,mIACPC,MAAO,UACPC,eAAe,KAIrByI,cAAe,SAACvM,EAAY4L,EAAc1L,EAAQoM,EAAiBkE,GACjElC,GAAWC,GACPvO,EACE4L,EAAapL,OAAS,GAAKoL,EAAapL,OAAS,QAC3BkB,IAApB4K,EACEA,EAAgBlJ,QAAUwI,IAC5B4E,EAAS5E,GACT2C,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,uEACPC,MAAO,UACPC,eAAe,KAInByK,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,+EACPC,MAAO,UACPC,eAAe,IAInByK,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,oJACPC,MAAO,UACPC,eAAe,IAInByK,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,mIACPC,MAAO,UACPC,eAAe,KAIrB+I,cAAe,SAACmE,GACd/G,GAAQC,KAAR,UAAA9H,OAAuB4O,KAEzBrK,WAAY,SAAClB,GACX+I,aAAaqB,QAAQ,YAAaC,KAAKC,UAAUtK,IACjD8I,EAAS,CACP3M,KCxRmB,cDyRnBe,WAAW,KAGfmE,cAAe,WACb,IAAMrB,EAAKqK,KAAKG,MAAMzB,aAAa0B,QAAQ,cAC3C3B,EAAS,CACP3M,KCnRuB,kBDoRvBe,WAAW,IAEbyL,GAAO2C,KAAK,aAActL,IAE5B2E,KAAM,SAAC6G,GACL,IAAIjP,EAAO8N,KAAKG,MAAMzB,aAAa0B,QAAQ,SACvCzH,EAAkB,OAATzG,EAAD,GAAAI,OAAqBJ,EAAK8C,KAA1B,KAAA1C,OAAkCJ,EAAKoE,KAAQ,YAC3DxG,EAAM,IAAIsR,IAAU,CAClB9K,IA1QW,2BA2QX+K,aAAc,GACdC,UAAU,EACVC,OAAO,EACPvI,KAAML,KAGL4H,GAAG,kBAAmB,SAACiB,GACtB/C,EAAS,CACP3M,KCrTmB,kBDsTnB0P,gBAGHjB,GAAG,eAAgB,SAACvN,GACnByL,EAAS,CACP3M,KC9TgB,eD+ThBkB,WAGNyL,EAAS,CAAE3M,KCpUU,cDoUSgB,QAAShD,KAEzCuI,gBAAiB,SAACoJ,GAChBhD,EAAS,CAAE3M,KCnUU,cDmUS4P,MAAO5R,EAAI6R,oBAEvC7R,EAAI8R,OAAOP,aADTI,GAGwBA,GAG9BlJ,aAAc,SAACsJ,GACb/R,EAAIyQ,GAAG,aAAc,SAACuB,EAAQ9O,GACxB6O,IACFpD,EAAS,CACP3M,KCjVa,YDkVbkB,OACAlD,QAEFA,EAAIiS,aAAaD,EAAQD,EAAa7O,EAAK2C,IAAK,CAAEqM,UAAU,QAIlExJ,SAAU,SAAChI,EAAUF,GACnBR,EAAIyQ,GAAG,cAAe,gBACH3O,IAAbpB,GAA0BF,GAC5BmO,EAAS,CACP3M,KC3ViB,gBD4VjBmQ,SAAUnS,EAAIoS,SAAS1R,QAK/BqI,eAAgB,SAACe,GACf6E,EAAS,CACP3M,KC/VmB,cDgWnBqB,KAAMrD,KAGVgN,cAAe,SAACqF,EAAUC,EAAQhS,EAAQuM,EAAUf,GAClDA,EAAMC,iBACN4C,EAAS,CACP3M,KC3VsB,iBD4VtB+B,OAAO,IAETzD,EAAOuC,OAAO,SAAA0P,GACZ,GAAIA,EAAKzP,MAAQwP,GAAUC,EAAK/O,QAAUqJ,EACxC,GAAIwF,EAASzR,QAAU,EAAG,CACxB,IAAM4R,EAAY,CAChBH,WACAC,OAAQC,EAAKzP,KAEfyM,IAAMC,KAAN,GAAAhN,OAAcyL,EAAd,aAAsCuE,GACnCxD,KAAK,SAAA7M,GACJ,IAAMsQ,EAActQ,EAAKA,KAAK2B,QAC9B6K,EAAS,CACP3M,KChXY,iBDiXZuB,OAAQkP,EACRjP,MAAO+O,EAAK/O,QAEd,IAAMkP,EAAU,CACdH,OACAE,gBAEkB,IAAhBA,GACF7D,aAAaqB,QAAQ,kBAAmBC,KAAKC,UAAUuC,IACvD/D,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,uEACPC,MAAO,cAGT2K,aAAaqB,QAAQ,kBAAmBC,KAAKC,UAAUuC,IACvD/D,EAAS,CACP3M,KC3XU,iBD4XV+B,OAAO,IAET4K,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,0FACPC,MAAO,eAIZmM,MAAM,SAAA/P,GACLsO,EAAS,CAAE3M,KC5ZD,aD4ZmB3B,iBAGjCsO,EAAS,CACP3M,KC1YgB,iBD2YhB+B,OAAO,IAET4K,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,0FACPC,MAAO,eAMjBgG,cAAe,SAAC0I,EAAYnS,EAAQD,GAClC,IAAIyG,EAAWkJ,KAAKG,MAAMzB,aAAa0B,QAAQ,oBAC3CsC,EAAYvI,GAAQxK,SAASmK,SAASb,MAAM,WAAW,GAC3D,GAAIyJ,EACF,GAAID,EAAW/R,OAAQ,CACrB,IACIiS,EADQF,EAAWtL,IAAI,SAAAlF,GAAI,OAAIA,EAAKqB,QAChBsP,KAAK,SAAAP,GAAI,OAAIA,IAASK,IAC1CC,GAA4B,OAAb7L,EACb4L,IAAc5L,EAASuL,KAAK/O,OAASwD,EAASyL,aAAeI,EAC/DlE,EAAS,CACP3M,KCpagB,mBDqahBG,KAAM6E,EAASyL,YACf5O,aAAa,IAGf8K,EAAS,CACP3M,KC1agB,mBD2ahBG,MAAM,EACN0B,aAAa,KAIjB8K,EAAS,CACP3M,KCjbkB,mBDkblBG,MAAM,EACN0B,aAAa,IAEW,IAAtB8O,EAAW/R,QACb+N,EAAS,CACP3M,KCvbgB,mBDwbhBG,MAAM,EACN0B,aAAa,UAKnB8K,EAAS,CACP3M,KC/boB,mBDgcpBG,MAAM,EACN0B,aAAa,SAIjB8K,EAAS,CACP3M,KCtcsB,mBDuctBG,MAAM,EACN0B,aAAa,KAInBoD,SAAU,SAAC6E,GACT,IAAMpI,EAASoI,EAAMS,OAAOC,QAAQ3G,GACpC8I,EAAS,CACP3M,KCjduB,kBDkdvByB,SAAS,EACTC,WAEFiL,EAAS,CACP3M,KCjd4B,uBDkd5B8B,QAAO,sFAET6K,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,oFACPC,MAAO,aAGXoI,cAAe,SAAC1I,GACdgL,EAAS,CACP3M,KCjeuB,kBDkevByB,SAAS,EACTE,iBAGJe,SAAU,WACRgK,GAAWC,GACXA,EAAS,CACP3M,KCxeuB,kBDyevByB,SAAS,EACTG,YAAY,EACZb,WAAW,IAEb4L,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,uEACPC,MAAO,UACPC,eAAe,KAGnB4C,YAAa,WACX4H,GAAWC,GACXA,EAAS,CACP3M,KCvfuB,kBDwfvBe,WAAW,KAGf4B,YAAa,WACXgK,EAAS,CACP3M,KC7fuB,kBD8fvByB,SAAS,KAGb6J,mBAAoB,WACEsB,aAAaC,WAAW,mBACxCxE,GAAQxK,SAASmK,SAASb,MAAM,WAAW,IAC7CwF,EAAS,CACP3M,KClgBsB,mBDmgBtBG,KAAM,KACNtB,MAAM,KAIZuM,UAAW,SAACuF,GACV,IAAII,EAAe1I,GAAQxK,SAASmK,SAASb,MAAM,WAAW,GAC9D,GAAIkB,GAAQxK,SAASmK,SAASb,MAAM,WAAW,GAAI,CACjD,IACI0J,EADQF,EAAWtL,IAAI,SAAAlF,GAAI,OAAIA,EAAKqB,QAChBsP,KAAK,SAAAP,GAAI,OAAIA,IAASQ,IAE5CpE,EADEkE,EACO,CACP7Q,KChhBoB,mBDihBpB6B,aAAa,GAGN,CACP7B,KCrhBoB,mBDshBpB6B,aAAa,MAKrByI,uBAAwB,WACtBqC,EAAS,CACP3M,KC3hB4B,uBD4hB5B8B,QAAS,yMAGb8I,wBAAyB,WACvB+B,EAAS,CACP3M,KCjiB4B,uBDkiB5B8B,QAAO,uFAGXoC,mBAAoB,WAClByI,EAAS,CACP3M,KAAM/B,EACN+D,MAAO,uEACPC,MAAO,UACPC,eAAe,KAGnB+B,cAAe,WACb0I,EAAS,CACP3M,KC5iBuB,kBD6iBvB4B,YAAY,KAGhBiI,eAAgB,WACd,IAAImH,EA/gBgB,WACxB,IAAIC,EACAC,EAAQC,UAAUC,UAAUC,cAChC,GAAyB,+BAArBF,UAAUG,QACZL,EAAO,aACF,GAAIC,EAAMK,OAAO,YAAc,EACpCN,EAAO,oBACF,MAAIC,EAAMK,OAAO,UAAY,GAGlC,OAAQ,EAFRN,EAAO,QAKT,OAAuB,MADb,IAAIO,OAAOP,EAAO,kCACpBQ,KAAKP,GAAuBQ,WAAWF,OAAOG,GAAKH,OAAOI,KAC1D,EAigBWC,GAEblF,GADe,GAAbqE,EACO,CACPhR,KCljBc,WDmjBdmC,WAAW,GAIJ,CACPnC,KCxjBc,WDyjBdmC,WAAW,KAIjBsF,WAAYqK,mBAAS,WACnBnF,EAAS,CACP3M,KC9jBqB,gBD+jBrBoC,cAAc,KAEf,OAIqD,KAAM,CAAE2P,SAAS,GAA9DjF,CAAsEpD,UcvlBrF0C,gBARc,CACZ4F,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,iBAINjG,ICET/D,GAAUiK,cAEVC,GAAQC,YACZC,wBAAcpK,GAAdoK,CAAuB9S,GACvB+S,YACEC,YACEC,2BAAiBvK,IACjBwK,OAKN9J,iBACInG,EAAAC,EAAAC,cAACgQ,EAAA,SAAD,CAAUP,MAAOA,IACf3P,EAAAC,EAAAC,cAACiQ,EAAA,gBAAD,CAAiB1K,QAASA,IACxBzF,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOG,OAAS,SAAAnD,GAAK,OAAIhD,EAAAC,EAAAC,cAACkQ,GAAD/S,OAAAgJ,OAAA,GAASrD,EAAT,CAAgByC,QAASA,WAGxD4K,SAASC,eAAe","file":"static/js/main.516e125e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { connect } from \"react-redux\";\nimport io from 'socket.io-client';\nimport { bindActionCreators } from 'redux'\nimport React, { Component } from 'react';\nimport { debounce } from \"lodash\";\nimport * as firebase from 'firebase';\nimport LioWebRTC from 'liowebrtc';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport App from \"../components/App.jsx\";\n\nimport {\n  IS_LOGIN_USER,\n  IS_LOGGED_IN_DATA,\n  IS_LOGOUT_DATA,\n  GET_ERRORS,\n  ROOMS_DATA,\n  CONNECTED_LOCAL,\n  LOCAL_VIDEO,\n  RTC_SETTING,\n  ADD_MEDIA,\n  REMOVE_VIDEO,\n  READY_TO_CALL,\n  AUDIO_CHECK,\n  ROOM_ADD,\n  ROOM_REMOVE,\n  CHANNEL_CHECK,\n  PASSWORD_CHECK,\n  POP_EVENT_CHECK,\n  POP_ClOSE_CHECK,\n  ROOM_MAINTENANCE,\n  ROOM_TITLE_MATCH,\n  FORMAT_ROOM_PASS,\n  ALERT_MESSAGE_CHANGE,\n  SPINNER_ACTION,\n  ALERT_WARNING,\n  LOGGIN_POP_OPEN,\n  ROOM_REMOVE_POP,\n  IE_CHECK,\n  WARNING_CHECK\n} from '../actions';\n\nimport createHistory from 'history/createBrowserHistory';\nlet rtc;\nconst simpLioRTC = 'https://sm1.lio.app:443/';\nconst localHostIp = 'https://videos-conf-service.herokuapp.com/';\nconst localHostIpApi = `${localHostIp}api/auth/`;\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst history = createHistory({ forceRefresh: true });\nconst socket = io(localHostIp);\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nconst get_version_of_IE = () => {\n  var word;\n  var agent = navigator.userAgent.toLowerCase();\n  if (navigator.appName == \"Microsoft Internet Explorer\") {\n    word = \"msie \";\n  } else if (agent.search(\"trident\") > -1) {\n    word = \"trident/.*rv:\";\n  } else if (agent.search(\"edge/\") > -1) {\n    word = \"edge/\";\n  } else {\n    return -1;\n  }\n  var reg = new RegExp(word + \"([0-9]{1,})(\\\\.{0,}[0-9]{0,1})\");\n  if (reg.exec(agent) != null) return parseFloat(RegExp.$1 + RegExp.$2);\n  return -1;\n}\n\nconst removeData = (dispatch) => {\n  let roomDataRmove = localStorage.removeItem('roomPassResults');\n  let roomNull = roomDataRmove === null ? false : null\n  dispatch({\n    type: ROOM_MAINTENANCE,\n    data: roomNull\n  });\n}\n\nconst mapStateToProps = state => ({\n  items: state.items,\n  isLoggedIn: state.isLoggedIn,\n  error: state.error,\n  isroom: state.isroom,\n  inroom: state.inroom,\n  peers: state.peers,\n  webrtc: state.webrtc,\n  mute: state.mute,\n  length: state.length,\n  popopen: state.popopen,\n  focusid: state.focusid,\n  pass: state.pass,\n  focustitle: state.focustitle,\n  aboutValueTitle: state.aboutValueTitle,\n  alertMessage: state.alertMessage,\n  spinner: state.spinner,\n  alertBoxBottom: state.alertBoxBottom,\n  alertColor: state.alertColor,\n  channelAlertMessage: state.channelAlertMessage,\n  loggedPopUp: state.loggedPopUp,\n  deleteAelrt: state.deleteAelrt,\n  ieCehck: state.ieCehck,\n  pageReturn: state.pageReturn\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loginUser: (user) => {\n      firebase.auth().signInWithPopup(provider).then(result => {\n        let token = result.credential.accessToken;\n        let users = result.user;\n        let loginUser = {\n          uid: users.uid,\n          name: users.displayName,\n          url: users.photoURL,\n          email: users.email\n        }\n        axios.post(`${localHostIpApi}login`, loginUser).then(res => {\n          const { token } = res.data;\n          setAuthToken(token);\n          const decoded = jwt_decode(token);\n          dispatch({\n            type: IS_LOGIN_USER,\n            data: decoded\n          });\n          localStorage.setItem('user', JSON.stringify(decoded));\n        });\n        dispatch({\n          type: ALERT_WARNING,\n          alert: '패스워드를 입력해주세요.',\n          color: '#3f46ad',\n          resultBoolean: false\n        });\n      }).catch(error => {\n        dispatch({ type: GET_ERRORS, error });\n      });\n    },\n    usingUserData: () => {\n      let user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: IS_LOGGED_IN_DATA,\n        data: user\n      });\n    },\n    userlogout: () => {\n      let userRemove = localStorage.removeItem('user');\n      firebase.auth().signOut().then(() => {\n        dispatch({\n          type: IS_LOGOUT_DATA,\n          data: userRemove\n        });\n        dispatch({\n          type: ALERT_WARNING,\n          alert: '패스워드를 입력해주세요.',\n          color: '#3f46ad',\n          resultBoolean: false\n        });\n      }).catch(error => {\n        dispatch({ type: GET_ERRORS, error });\n      });\n    },\n    channelData: () => {\n      socket.on('initialList', (data) => {\n        dispatch({\n          type: ROOMS_DATA,\n          data\n        });\n      });\n      socket.on('itemAdded', (data) => {\n        dispatch({\n          type: ROOM_ADD,\n          data\n        });\n      });\n      socket.on('itemRemove', (data) => {\n        dispatch({\n          type: ROOM_REMOVE_POP,\n          data\n        });\n      });\n    },\n    saveFormData: (logedin, items, title, roomPassword, isroom, callback) => {\n      removeData(dispatch)\n      const passRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{6,16}$/;\n      const titleBlank = title.replace(/\\s|　/gi, '');\n      let titleOverLap = Boolean(isroom.every(roommData => roommData.title !== title));\n      if (logedin) {\n        if (title.length > 1 && title.length < 11 ) {\n          let data = {\n            title,\n            roomPassword,\n            userName: items.name,\n            userMail: items.email\n          };\n          if (titleOverLap || isroom === []) {\n            if (!passRegex.test(roomPassword)) {\n              dispatch({\n                type: ALERT_WARNING,\n                alert: '패스워드는 숫자, 문자, 특수문자 조합으로 6글자 이상 입력해주세요.',\n                color: '#e30641',\n                resultBoolean: true\n              });\n            } else if ( titleBlank === '') {\n              dispatch({\n                type: ALERT_WARNING,\n                alert: '공백만으로는 제목을 작성 할 수 없습니다.',\n                color: '#e30641',\n                resultBoolean: true\n              });\n            } else {\n              socket.emit('addItem', data);\n              dispatch({\n                type: POP_EVENT_CHECK,\n                booelan: true,\n                title\n              })\n              callback(title)\n            }\n          } else {\n            dispatch({\n              type: ALERT_WARNING,\n              alert: '중복된 채널이 있습니다.',\n              color: '#e30641',\n              resultBoolean: true\n            });\n          }\n        } else {\n          dispatch({\n            type: ALERT_WARNING,\n            alert: '제목은 2글자 이상 11글자 미만이에요.',\n            color: '#e30641',\n            resultBoolean: true\n          });\n        }\n      } else {\n        dispatch({\n          type: ALERT_WARNING,\n          alert: '로그인을 해주셔야, 채널을 생성 하실 수 있습니다.',\n          color: '#e30641',\n          resultBoolean: true\n        });\n      }\n    },\n    goingChannels: (isLoggedIn, channelTitle, isroom, titleEqualCheck, callback) => {\n      removeData(dispatch)\n      if (isLoggedIn) {\n        if (channelTitle.length > 1 && channelTitle.length < 11) {\n          if (titleEqualCheck !== undefined) {\n            if (titleEqualCheck.title === channelTitle) {\n              callback(channelTitle);\n              dispatch({\n                type: ALERT_WARNING,\n                alert: '패스워드를 입력해주세요.',\n                color: '#3f46ad',\n                resultBoolean: false\n              });\n            }\n          } else {\n            dispatch({\n              type: ALERT_WARNING,\n              alert: '채널 목록에 없는 채널입니다.',\n              color: '#e30641',\n              resultBoolean: true\n            });\n          }\n        } else {\n          dispatch({\n            type: ALERT_WARNING,\n            alert: '채널 제목은 2글자 미만이거나, 11글자 이상 일 수 없습니다.',\n            color: '#e30641',\n            resultBoolean: true\n          });\n        }\n      } else {\n        dispatch({\n          type: ALERT_WARNING,\n          alert: '로그인을 해주셔야, 채널에 입장 하실 수 있습니다.',\n          color: '#e30641',\n          resultBoolean: true\n        });\n      }\n    },\n    goMoveChannel: (channelName) => {\n      history.push(`/rooms/${channelName}`)\n    },\n    roomDelete: (id) => {\n      localStorage.setItem('roomObjId', JSON.stringify(id));\n      dispatch({\n        type: ROOM_REMOVE,\n        deleteMsg: true\n      });\n    },\n    roomDeletePop: () => {\n      const id = JSON.parse(localStorage.getItem('roomObjId'));\n      dispatch({\n        type: ROOM_REMOVE_POP,\n        deleteMsg: false\n      });\n      socket.emit('removeItem', id);\n    },\n    init: (localele) => {\n      let user = JSON.parse(localStorage.getItem('user'));\n      let email = (user !== null) ? `${user.name},${user.url}` : 'Not user';\n      rtc = new LioWebRTC({\n        url: simpLioRTC,\n        localVideoEl: '',\n        dataOnly: false,\n        debug: false,\n        nick: email\n      });\n      rtc\n        .on('connectionReady', (sessionId) => {\n          dispatch({\n            type: CONNECTED_LOCAL,\n            sessionId\n          });\n        })\n        .on('videoRemoved', (peer) => {\n          dispatch({\n            type: REMOVE_VIDEO,\n            peer\n          });\n        });\n      dispatch({ type: RTC_SETTING, payload: rtc });\n    },\n    startLoclaVideo: (localvideo) => {\n      dispatch({ type: LOCAL_VIDEO, start: rtc.startLocalVideo() });\n      if (localvideo) {\n        rtc.config.localVideoEl = localvideo;\n      } else {\n        rtc.config.localVideoEl = localvideo;\n      }\n    },\n    AddpeerVideo: (targetremote) => {\n      rtc.on('videoAdded', (stream, peer) => {\n        if (targetremote) {\n          dispatch({\n            type: ADD_MEDIA,\n            peer,\n            rtc\n          });\n          rtc.attachStream(stream, targetremote[peer.id], { autoplay: true });\n        }\n      })\n    },\n    joinChat: (roomname, inroom) => {\n      rtc.on('readyToCall', () => {\n        if (roomname !== undefined && inroom) {\n          dispatch({\n            type: READY_TO_CALL,\n            joinroom: rtc.joinRoom(roomname)\n          });\n        }\n      });\n    },\n    handleSelfMute: (e) => {\n      dispatch({\n        type: AUDIO_CHECK,\n        func: rtc\n      });\n    },\n    passpostCheck: (password, roomid, isroom, dataTite, event) => {\n      event.preventDefault();\n      dispatch({\n        type: SPINNER_ACTION,\n        check: true\n      });\n      isroom.filter(item => {\n        if (item._id === roomid || item.title === dataTite) {\n          if (password.length >= 1) {\n            const inputdata = {\n              password,\n              roomid: item._id\n            }\n            axios.post(`${localHostIp}passcheck`, inputdata)\n              .then(data => {\n                const shouldCheck = data.data.message;\n                dispatch({\n                  type: PASSWORD_CHECK,\n                  result: shouldCheck,\n                  title: item.title\n                })\n                const roomObj = {\n                  item,\n                  shouldCheck\n                }\n                if (shouldCheck === true) {\n                  localStorage.setItem('roomPassResults', JSON.stringify(roomObj));\n                  dispatch({\n                    type: ALERT_WARNING,\n                    alert: '패스워드를 입력해주세요.',\n                    color: '#3f46ad'\n                  });\n                } else {\n                  localStorage.setItem('roomPassResults', JSON.stringify(roomObj));\n                  dispatch({\n                    type: SPINNER_ACTION,\n                    check: false\n                  });\n                  dispatch({\n                    type: ALERT_WARNING,\n                    alert: '패스워드를 잘못 입력하셨습니다.',\n                    color: '#e30641'\n                  });\n                }\n              })\n              .catch(error => {\n                dispatch({ type: GET_ERRORS, error });\n              });\n          } else {\n            dispatch({\n              type: SPINNER_ACTION,\n              check: false\n            });\n            dispatch({\n              type: ALERT_WARNING,\n              alert: '패스워드가 입력되지 않았습니다.',\n              color: '#e30641'\n            });\n          }\n        }\n      });\n    },\n    chatRoomUsing: (isroomdata, inroom, peers) => {\n      let roomData = JSON.parse(localStorage.getItem('roomPassResults'));\n      let roomTitle = history.location.pathname.split('/rooms/')[1];\n      if (roomTitle) {\n        if (isroomdata.length) {\n          let title = isroomdata.map(data => data.title);\n          let isRoomValid = title.some(item => item === roomTitle);\n          if (isRoomValid && roomData !== null) {\n            if (roomTitle === roomData.item.title && roomData.shouldCheck && isRoomValid) {\n              dispatch({\n                type: ROOM_MAINTENANCE,\n                data: roomData.shouldCheck,\n                roomBoolean: true\n              });\n            } else {\n              dispatch({\n                type: ROOM_MAINTENANCE,\n                data: false,\n                roomBoolean: false\n              });\n            }\n          } else {\n            dispatch({\n              type: ROOM_MAINTENANCE,\n              data: false,\n              roomBoolean: false\n            });\n            if (isroomdata.length === 0) {\n              dispatch({\n                type: ROOM_MAINTENANCE,\n                data: false,\n                roomBoolean: false\n              });\n            }\n          }\n        } else {\n          dispatch({\n            type: ROOM_MAINTENANCE,\n            data: false,\n            roomBoolean: false\n          });\n        }\n      } else {\n        dispatch({\n          type: ROOM_MAINTENANCE,\n          data: false,\n          roomBoolean: false\n        });\n      }\n    },\n    popEvent: (event) => {\n      const dataId = event.target.dataset.id;\n      dispatch({\n        type: POP_EVENT_CHECK,\n        booelan: true,\n        dataId\n      });\n      dispatch({\n        type: ALERT_MESSAGE_CHANGE,\n        message: `채널 패스워드를 입력해주세요.`\n      });\n      dispatch({\n        type: ALERT_WARNING,\n        alert: '채널 패스워드를 입력해주세요.',\n        color: '#3f46ad'\n      });\n    },\n    aboutPopEvent: (targetTitle) => {\n      dispatch({\n        type: POP_EVENT_CHECK,\n        booelan: true,\n        targetTitle\n      });\n    },\n    popClose: () => {\n      removeData(dispatch)\n      dispatch({\n        type: POP_ClOSE_CHECK,\n        booelan: false,\n        popBoolean: false,\n        deleteMsg: false\n      });\n      dispatch({\n        type: ALERT_WARNING,\n        alert: '패스워드를 입력해주세요.',\n        color: '#3f46ad',\n        resultBoolean: false\n      });\n    },\n    delPopClose: () => {\n      removeData(dispatch)\n      dispatch({\n        type: POP_ClOSE_CHECK,\n        deleteMsg: false\n      });\n    },\n    inputCancel: () => {\n      dispatch({\n        type: POP_ClOSE_CHECK,\n        booelan: false\n      });\n    },\n    formatRoomPassword: () => {\n      let roomDataRmove = localStorage.removeItem('roomPassResults');\n      if (history.location.pathname.split('/rooms/')[1]) {\n        dispatch({\n          type: FORMAT_ROOM_PASS,\n          data: null,\n          pass: true\n        });\n      }\n    },\n    roomMatch: (isroomdata) => {\n      let roomTitleUrl = history.location.pathname.split('/rooms/')[1];\n      if (history.location.pathname.split('/rooms/')[1]) {\n        let title = isroomdata.map(data => data.title);\n        let isRoomValid = title.some(item => item === roomTitleUrl);\n        if (isRoomValid) {\n          dispatch({\n            type: ROOM_TITLE_MATCH,\n            roomBoolean: true\n          });\n        } else {\n          dispatch({\n            type: ROOM_TITLE_MATCH,\n            roomBoolean: false\n          });\n        }\n      }\n    },\n    MainAlertMessageChange: () => {\n      dispatch({\n        type: ALERT_MESSAGE_CHANGE,\n        message: '채널이 생성되었습니다.\\n지금 바로 입장하실려면 패스워드를 입력해주세요.'\n      });\n    },\n    aboutAlertMessageChange: () => {\n      dispatch({\n        type: ALERT_MESSAGE_CHANGE,\n        message: `채널 패스워드를 입력해주세요.`\n      });\n    },\n    alertMessageFormat: () => {\n      dispatch({\n        type: ALERT_WARNING,\n        alert: '패스워드를 입력해주세요.',\n        color: '#3f46ad',\n        resultBoolean: false\n      });\n    },\n    loginpopEvent: () => {\n      dispatch({\n        type: LOGGIN_POP_OPEN,\n        popBoolean: true\n      })\n    },\n    getVersionOfIE: () => {\n      let checkVer = get_version_of_IE();\n      if (checkVer == -1) {\n        dispatch({\n          type: IE_CHECK,\n          ieBoolean: true\n        })\n      }\n      else {\n        dispatch({\n          type: IE_CHECK,\n          ieBoolean: false\n        })\n      }\n    },\n    pageGoback: debounce(() => {\n      dispatch({\n        type: WARNING_CHECK,\n        warningSould: true\n      })\n    }, 3000)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { withref: true })(App);\n","export const IS_LOGIN_USER = 'IS_LOGIN_USER';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const IS_LOGGED_IN_DATA = 'IS_LOGGED_IN_DATA';\nexport const IS_LOGOUT_DATA = 'IS_LOGOUT_DATA';\nexport const ROOMS_DATA = 'ROOMS_DATA';\nexport const RTC_SETTING = 'RTC_SETTING';\nexport const ADD_MEDIA = 'ADD_MEDIA';\nexport const REMOVE_VIDEO = 'REMOVE_VIDEO';\nexport const READY_TO_CALL = 'READY_TO_CALL';\nexport const LOCAL_VIDEO = 'LOCAL_VDIEO';\nexport const CONNECTED_LOCAL = 'CONNECTED_LOCAL';\nexport const DISCONNECTED_WEBCAM = 'DISCONNECTED_WEBCAM';\nexport const AUDIO_CHECK = 'AUDIO_CHECK';\nexport const ROOM_ADD = 'ROOM_ADD';\nexport const ROOM_REMOVE = 'ROOM_REMOVE';\nexport const CHANNEL_CHECK = 'CHANNEL_CHECK';\nexport const PASSWORD_CHECK = 'PASSWORD_CHECK';\nexport const POP_EVENT_CHECK = 'POP_EVENT_CHECK';\nexport const POP_ClOSE_CHECK = 'POP_ClOSE_CHECK';\nexport const ROOM_MAINTENANCE = 'ROOM_MAINTENANCE';\nexport const ROOM_TITLE_MATCH = 'ROOM_TITLE_MATCH';\nexport const FORMAT_ROOM_PASS = 'FORMAT_ROOM_PASS';\nexport const ALERT_MESSAGE_CHANGE = 'ALERT_MESSAGE_CHANGE';\nexport const SPINNER_ACTION = 'SPINNER_ACTION';\nexport const ALERT_WARNING = 'ALERT_WARNING';\nexport const LOGGIN_POP_OPEN = 'LOGGIN_POP_OPEN';\nexport const ROOM_REMOVE_POP = 'ROOM_REMOVE_POP';\nexport const IE_CHECK = 'IE_CHECK';\nexport const WARNING_CHECK = 'WARNING_CHECK';\n\nexport const isLogoutData = userRemove => ({\n  type: IS_LOGOUT_DATA, userRemove\n});\n\nexport const isLoggedInData = userData => ({\n  type: IS_LOGGED_IN_DATA, userData\n});\n\nexport const getErrors = error => ({\n  type: GET_ERRORS, error\n});\n\nexport const roomdData = roominfo => ({\n  type: ROOMS_DATA, roominfo\n});\n\nexport const isLoginUser = loginaction => ({\n  type: IS_LOGIN_USER, loginaction\n});\n\n/* video RTC */\nexport const rtcSetting = rtc => ({\n  type: RTC_SETTING, rtc\n});\n\nexport const addMeida = remoteMedia => ({\n  type: ADD_MEDIA, remoteMedia\n});\n\nexport const removeVideo = peerOut => ({\n  type: REMOVE_VIDEO, peerOut\n});\n\nexport const readyToCall = getStart => ({\n  type: READY_TO_CALL, getStart\n});\n\nexport const localVideo = local => ({\n  type: LOCAL_VIDEO, local\n});\n\nexport const connectedLocal = connect => ({\n  type: CONNECTED_LOCAL, connect\n});\n\nexport const disconnectedWebcam = chatOut => ({\n  type: DISCONNECTED_WEBCAM, chatOut\n});\n\nexport const audioCheck = muteOn => ({\n  type: AUDIO_CHECK, muteOn\n});\n\nexport const roomAdd = addList => ({\n  type: ROOM_ADD, addList\n});\n\nexport const roomRemove = delData => ({\n  type: ROOM_REMOVE, delData\n});\n\nexport const channelCheck = check => ({\n  type: CHANNEL_CHECK, check\n});\n\nexport const passwordCheck = password => ({\n  type: PASSWORD_CHECK, password\n});\n\nexport const popEventCheck = popup => ({\n  type: POP_EVENT_CHECK, popup\n});\n\nexport const popCloseCheck = closeBtn => ({\n  type: POP_ClOSE_CHECK, closeBtn\n});\n\nexport const roomMaintenance = roomUsing => ({\n  type: ROOM_MAINTENANCE, roomUsing\n});\n\nexport const roomMatchTtile = roomMatch => ({\n  type: ROOM_TITLE_MATCH, roomMatch\n});\n\nexport const formatRoomPass = passDel => ({\n  type: FORMAT_ROOM_PASS, passDel\n});\n\nexport const alertMessageChange = alertMsg => ({\n  type: ALERT_MESSAGE_CHANGE, alertMsg\n});\n\nexport const spinnerAction = spinner => ({\n  type: SPINNER_ACTION, spinner\n});\n\nexport const alertWarning = warning => ({\n  type: ALERT_WARNING, warning\n});\n\nexport const loginPopOpen = loginMsg => ({\n  type: LOGGIN_POP_OPEN, loginMsg\n});\n\nexport const roomRemovePop = popDel => ({\n  type: ROOM_REMOVE_POP, popDel\n});\n\nexport const ieCheck = ieVer => ({\n  type: IE_CHECK, ieVer\n});\n\nexport const warningCheck = warningMsg => ({\n  type: WARNING_CHECK, warningMsg\n});","import { combineReducers } from 'redux';\nimport {\n\tIS_LOGIN_USER,\n\tIS_LOGGED_IN_DATA,\n\tIS_LOGOUT_DATA,\n\tGET_ERRORS,\n\tROOMS_DATA,\n\tRTC_SETTING,\n\tCONNECTED_LOCAL,\n\tLOCAL_VIDEO,\n\tADD_MEDIA,\n\tREMOVE_VIDEO,\n\tREADY_TO_CALL,\n\tDISCONNECTED_WEBCAM,\n\tAUDIO_CHECK,\n\tROOM_ADD,\n\tROOM_REMOVE,\n\tCHANNEL_CHECK,\n\tPASSWORD_CHECK,\n\tPOP_EVENT_CHECK,\n\tPOP_ClOSE_CHECK,\n\tROOM_MAINTENANCE,\n\tROOM_TITLE_MATCH,\n\tFORMAT_ROOM_PASS,\n\tALERT_MESSAGE_CHANGE,\n\tSPINNER_ACTION,\n\tALERT_WARNING,\n\tLOGGIN_POP_OPEN,\n\tROOM_REMOVE_POP,\n\tIE_CHECK,\n\tWARNING_CHECK\n} from '../actions';\n\nexport const initialState = {\n\titems: {},\n\tisLoggedIn: false,\n\terror: null,\n\tisroom: [],\n\tpeers: [],\n\tinroom: true,\n\twebrtc: null,\n\troomname: '',\n\tmute: false,\n\tlength: 0,\n\tpass: false,\n\tpopopen: false,\n\tfocusid: '',\n\tfocustitle: '',\n\taboutValueTitle: '',\n\talertMessage: '회의실 패스워드를 입력해주세요.',\n\tspinner: false,\n\talertBoxBottom: '',\n\talertColor: '#3c29aa',\n\tchannelAlertMessage: false,\n\tloggedPopUp: false,\n\tdeleteAelrt: false,\n\tieCehck: '',\n\tpageReturn: false\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\t\n\t\tcase IS_LOGIN_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: true,\n\t\t\t\titems: action.data\n\t\t\t};\n\n\t\tcase IS_LOGGED_IN_DATA:\n\t\t\tlet user = Boolean(action.data) ? action.data : {};\n\t\t\tlet loggedTrue = Boolean(action.data) ? true : false;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: loggedTrue,\n\t\t\t\titems: user\n\t\t\t}\n\n\t\tcase IS_LOGOUT_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: false,\n\t\t\t\titems: {}\n\t\t\t}\n\n\t\tcase ROOMS_DATA:\n\t\t\tlet roomCopy = [...action.data, ...state.isroom];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: roomCopy\n\t\t\t}\n\n\t\tcase ROOM_ADD:\n\t\t\tconst dataroom = [...state.isroom, action.data];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: dataroom\n\t\t\t}\n\n\t\tcase ROOM_REMOVE_POP:\n\t\t\tconst removeRoom = state.isroom;\n\t\t\tconst roomId = action.data;\n\t\t\tconst removeUpdate = removeRoom.filter((data) => roomId !== data._id);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: removeUpdate,\n\t\t\t\tdeleteAelrt: action.deleteMsg\n\t\t\t}\n\n\t\tcase ROOM_REMOVE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeleteAelrt: action.deleteMsg\n\t\t\t}\n\n\t\tcase RTC_SETTING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\twebrtc: action.payload\n\t\t\t};\n\n\t\tcase ADD_MEDIA:\n\t\t\tlet peerCopy = [...state.peers, action.peer];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpeers: peerCopy\n\t\t\t};\n\n\t\tcase REMOVE_VIDEO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpeers: state.peers.filter(p => !p.closed)\n\t\t\t};\n\n\t\tcase READY_TO_CALL:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase LOCAL_VIDEO:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase CONNECTED_LOCAL:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase DISCONNECTED_WEBCAM:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase AUDIO_CHECK:\n\t\t\t(state.mute) ? action.func.unmute() : action.func.mute();\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmute: !state.mute\n\t\t\t};\n\n\t\tcase CHANNEL_CHECK:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t}\n\n\t\tcase PASSWORD_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpass: action.result,\n\t\t\t\tfocustitle: action.title,\n\t\t\t\tspinner: false\n\t\t\t}\n\n\t\tcase POP_EVENT_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopopen: action.booelan,\n\t\t\t\tfocusid: action.dataId,\n\t\t\t\taboutValueTitle: action.targetTitle\n\t\t\t}\n\n\t\tcase FORMAT_ROOM_PASS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpass: action.pass\n\t\t\t}\n\n\t\tcase POP_ClOSE_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopopen: action.booelan,\n\t\t\t\tloggedPopUp: action.popBoolean,\n\t\t\t\tdeleteAelrt: action.deleteMsg\n\t\t\t}\n\n\t\tcase ROOM_MAINTENANCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpass: action.data,\n\t\t\t\tinroom: action.roomBoolean\n\t\t\t}\n\n\t\tcase ROOM_TITLE_MATCH:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinroom: action.roomBoolean\n\t\t\t}\n\n\t\tcase ALERT_MESSAGE_CHANGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\talertMessage: action.message\n\t\t\t}\n\n\t\tcase SPINNER_ACTION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tspinner: action.check\n\t\t\t}\n\n\t\tcase ALERT_WARNING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\talertBoxBottom: action.alert,\n\t\t\t\talertColor: action.color,\n\t\t\t\tchannelAlertMessage: action.resultBoolean\n\t\t\t}\n\n\t\tcase LOGGIN_POP_OPEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloggedPopUp: action.popBoolean\n\t\t\t}\n\n\t\tcase IE_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tieCehck: action.ieBoolean\n\t\t\t}\n\n\t\tcase WARNING_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpageReturn: action.warningSould\n\t\t\t}\n\n\t\tcase GET_ERRORS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: {},\n\t\t\t\tisLoggedIn: false\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Alert = ({ gochnanelRoom, spinner, passCheckRef, passwordCheck, popClose, pass, focustitle, inputCancel, alertMessage, alertBoxBottom, alertColor }) => {\n  return (\n    <div className=\"AlertBox\">\n      <div className=\"loginContent\">\n        <div className=\"close-btn\">\n          <i className=\"fas fa-times\" onClick={popClose}></i>\n        </div>\n        <form>\n          <h3>{alertMessage}</h3>\n          <label htmlFor=\"pass-check\">\n            <input type=\"password\" name=\"pass-check\" ref={passCheckRef} placeholder='패스워드' autoFocus />\n            <button name=\"pass-check\" onClick={passwordCheck} >\n              check\n              {\n                spinner ?  <i className=\"fas fa-spinner\"></i> : null\n              }\n            </button>\n          </label>\n        </form>\n        <div className=\"pass-check\">\n          {\n            pass ?\n              <p className=\"sucess-password\" onClick={gochnanelRoom}>패스워드가 일치합니다. 참여하실려면 클릭해주세요.</p> : <p style={{ color : alertColor }}>{alertBoxBottom}</p>\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Alert;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Alert from './Alert.jsx';\n\nconst Main = ({ gochnanelRoom, channelAlertMessage, saveFormData, inputRef, passRef, passCheckRef, passwordCheck, popClose, pass, focustitle, inputCancel, popopen, alertMessage, spinner, alertBoxBottom, alertColor }) => {\n  return (\n    <div className=\"meeting-room-create\">\n      <div className=\"meeting-form-box\">\n        <div className=\"rooms-title\">\n          <form>\n            <label htmlFor=\"rooms-title\">\n              <h1>\n                <img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/logo.png?raw=true\" alt=\"\" />\n              </h1>\n              <div className=\"inputbox\">\n                <input type=\"text\" id=\"rooms-title\" name=\"rooms-title\" ref={inputRef} placeholder=\"안녕하세요. 채널을 생성해주세요.\" />\n                <input type=\"password\" id=\"rooms-password\" name=\"rooms-title\" ref={passRef} placeholder=\"패스워드도 설정해주세요.\" />\n              </div>\n              <button name=\"rooms-title\" onClick={saveFormData} >Create!</button>\n              {\n                channelAlertMessage ?\n                  <p className=\"goingChannel-Check-Message\" style={{ color: alertColor }}>{alertBoxBottom}</p> :\n                  null\n              }\n            </label>\n          </form>\n        </div>\n      </div>\n      {\n        (popopen) ?\n          <Alert gochnanelRoom={gochnanelRoom} alertColor={alertColor} alertBoxBottom={alertBoxBottom} spinner={spinner} alertMessage={alertMessage} passCheckRef={passCheckRef} passwordCheck={passwordCheck} popClose={popClose} pass={pass} focustitle={focustitle} inputCancel={inputCancel} /> :\n          null\n      }\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst LoginAlert = ({ popClose }) => {\n  return (\n    <div className=\"AlertBox\">\n      <div className=\"loginContent\">\n        <div className=\"close-btn\">\n          <i className=\"fas fa-times\" onClick={popClose}></i>\n        </div>\n        <h2>로그인을 해주세요.</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginAlert;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginAlert from './LoginAlert.jsx';\n\nconst Navbar = ({ loggedPopUp, popopen, popClose, loginpopEvent, isLoggedIn, alertMessageFormat, signAlert, onLoginButtonClick, onLogoutButtonClick, items }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"navbar-start\">\n        <div className=\"nav-content\">\n          <div className=\"nav-menu\">\n            <dl>\n              <dt>\n                <Link onClick={alertMessageFormat} to=\"/\">\n                  <img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/logo.png?raw=true\" alt=\"\" />\n                </Link>\n              </dt>\n              <dd>\n                <Link onClick={alertMessageFormat} to=\"/about\">About</Link>\n              </dd>\n              <dd>\n                {\n                  (isLoggedIn) ?\n                    <Link onClick={alertMessageFormat} to=\"/rooms\">Channel List</Link> :\n                    <p onClick={loginpopEvent}>Channel List</p>\n                }\n              </dd>\n              <dd>\n                {\n                  (isLoggedIn) ?\n                    <p onClick={onLogoutButtonClick}>Sign Out</p> :\n                    <p onClick={onLoginButtonClick}>Sign In</p>\n                }\n              </dd>\n            </dl>\n          </div>\n          <div className=\"user-info-nav\">\n            {\n              (isLoggedIn) ?\n                <p className=\"userIn\"><img src={items.url} /> <strong>{items.name}</strong>님 안녕하세요.</p> :\n                <p>로그인을 해주세요.</p>\n            }\n          </div>\n        </div>\n      </div>\n      {\n        (loggedPopUp) ?\n          <LoginAlert popClose={popClose} /> :\n          null\n      }\n    </div>\n  );\n};\n\nexport default Navbar;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Alert from './Alert.jsx';\n\nconst About = ({ gochnanelRoom, channelAlertMessage, goingRef, goingChannel, passCheckRef, passwordCheck, popClose, pass, focustitle, popopen, inputCancel, alertMessage, spinner, alertBoxBottom, alertColor }) => {\n\treturn (\n\t\t<div className=\"about\">\n\t\t\t<div className=\"about-content\">\n\t\t\t\t<div className=\"about-img\"></div>\n\t\t\t\t<div className=\"about-info-text\">\n\t\t\t\t\t<h2>Videos Conf</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t언제 어디서든 노트북만 있으면, 화상회의를<br />시작하실 수 있습니다.\n\t\t\t\t\t\t지금 바로 시작해보세요.\n\t\t\t\t\t </p>\n\t\t\t\t\t<div className=\"goingChannel\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<label htmlFor=\"going-channel\">\n\t\t\t\t\t\t\t\t<input type=\"text\" id=\"going-channel\" name=\"going-channel\" ref={goingRef} placeholder=\"채널 제목을 입력해주세요!\" />\n\t\t\t\t\t\t\t\t<button name=\"going-channel\" onClick={goingChannel} >Go!</button>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tchannelAlertMessage ?\n\t\t\t\t\t\t\t\t\t\t<p className=\"goingChannel-Check-Message\" style={{ color: alertColor }}>{alertBoxBottom}</p> :\n\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\t(popopen) ?\n\t\t\t\t\t<Alert gochnanelRoom={gochnanelRoom} alertColor={alertColor} alertBoxBottom={alertBoxBottom} spinner={spinner} alertMessage={alertMessage} passCheckRef={passCheckRef} passwordCheck={passwordCheck} popClose={popClose} pass={pass} focustitle={focustitle} inputCancel={inputCancel} /> :\n\t\t\t\t\tnull\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default About;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from \"react-router-dom\";\nimport { uniqWith, isEqual } from \"lodash\";\nimport Alert from './Alert.jsx';\n\nconst Rooms = ({ peers, delPopClose, gochnanelRoom, deleteAelrt, spinner, roomDelete, roomData, passCheckRef, passwordCheck, items, popopen, popEvent, popClose, roomDeletePop, pass, focustitle, inputCancel, alertMessage, alertBoxBottom, alertColor }) => {\n  return (\n    <div className=\"rooms-list\">\n      <dl>\n        <dt>\n          <h2 className=\"title\">\n            Enjoy Channel\n            <em>여기는 채널 리스트입니다.</em>\n          </h2>\n        </dt>\n        {\n          (roomData.length) ?\n            uniqWith(roomData, isEqual).map(data => {\n              return (\n                <dd key={data._id}>\n                  <h3>\n                    {data.title}\n                    <p> Organiser {data.userName}</p>\n                  </h3>\n                  <div className=\"del-enter\">\n                    <button onClick={popEvent} data-id={data._id}>\n                      <i className=\"fas fa-sign-in-alt\" data-id={data._id}></i>\n                    </button>\n                    {\n                      (data.userName === items.name) ?\n                        <button onClick={roomDelete} data-mail={data.userMail} data-id={data._id} >\n                          <i className=\"fas fa-trash\" onClick={roomDelete} data-mail={data.userMail} data-id={data._id} ></i>\n                        </button> : null\n                    }\n                  </div>\n                </dd>\n              );\n            }) :\n            <dd className=\"no-channel\">현재 채널이 없습니다. 생성해주세요.</dd>\n        }\n      </dl>\n      {\n        (popopen) ?\n          <Alert gochnanelRoom={gochnanelRoom} alertColor={alertColor} alertBoxBottom={alertBoxBottom} spinner={spinner} alertMessage={alertMessage} passCheckRef={passCheckRef} passwordCheck={passwordCheck} popClose={popClose} pass={pass} focustitle={focustitle} inputCancel={inputCancel} /> :\n          null\n      }\n      {\n        (deleteAelrt) ?\n          <div className=\"removeAlertBox\">\n            <div className=\"loginContent\">\n              <div className=\"close-btn\">\n                <i className=\"fas fa-times\" onClick={delPopClose} > </i>\n              </div>\n              <h2>채널을 삭제 하시겠습니까?</h2>\n              <ul className=\"delbutton\">\n                <li><button onClick={roomDeletePop}>예</button></li>\n                <li><button onClick={delPopClose}>아니요</button></li>\n              </ul>\n            </div>\n          </div> :\n          null\n      }\n    </div>\n  );\n};\n\nexport default Rooms;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { uniqWith, isEqual } from \"lodash\";\n\nexport default class RoomsDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.remoteVideos = {};\n  }\n\n  componentDidUpdate() {\n\n    this.pass = this.props.pass\n  }\n\n  componentDidMount() {\n    const { inroom, isroom, pass, peers } = this.props;\n    const { room_name } = this.props.match.params;\n    this.webrtc = this.props.webrtc;\n    this.props.startLoclaVideo(this.localVideo);\n    this.props.AddpeerVideo(this.remoteVideos);\n    this.props.joinChat(room_name, isroom);\n  }\n\n  render() {\n    const { peers, email, url, AddpeerVideo, webrtc, disconnect, handleSelfMute, mute } = this.props;\n    const { room_name } = this.props.match.params;\n    return (\n      <div className=\"details-box\">\n        <div className=\"sidebar local\">\n          <h2>\n            {room_name}\n          </h2>\n          <div className=\"localBox\">\n            <video id='localVideo' autoPlay={true} ref={(vid) => this.localVideo = vid} />\n            <div className=\"buttons\">\n              <button onClick={handleSelfMute}>\n                {\n                  (mute) ?\n                    <i className=\"fas fa-volume-up\"></i> :\n                    <i className=\"fas fa-volume-mute\"></i>\n                }\n              </button>\n              <button onClick={disconnect}>\n                <i className=\"fas fa-sign-out-alt\"></i>\n              </button>\n            </div>\n            <div className=\"nick\">\n              <p> {email} </p>\n            </div>\n          </div>\n          <div className=\"remotePeerList\">\n            <h3><em><i className=\"far fa-user\"></i>{peers.length + 1}</em>Member</h3>\n            <ul>\n              <li> <img src={url} alt=\"\" /> <p>{email}</p></li>\n              {\n                peers.map(name => <li key={name.id}> <img src={name.nick.split(',')[1]} alt=\"\" /> <p>{name.nick.split(',')[0]}</p></li>)\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"remotevideo\" >\n          <div className=\"remoteList\">\n            {\n              uniqWith(peers, isEqual).map(data => (\n                <div className=\"vidContainer\" key={data.id} id={`${webrtc.getContainerId(data)}`} >\n                  <video id={webrtc.getId(data)} autoPlay={true} ref={(vid) => this.remoteVideos[data.id] = vid} playsInline />\n                  <div className=\"nick\">\n                    <p>{data.nick.split(',')[0]}</p>\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Warning extends React.Component {\n  constructor (props) {\n    super(props);\n  }\n\n  componentDidMount () {\n   this.props.pageGoback();\n   this.props.popClose();\n  }\n\n  render () {\n    const {pageReturn} = this.props;\n    return (\n      <div className=\"warning-page\">\n        <div>\n          <p>잘못된 접근입니다.<br />잠시만 기다려주세요 채널리스트로 돌아가겠습니다.</p>\n          <p className=\"import\">주최자가 채널을 삭제 할 경우 자동으로 통신이 끊어 집니다.</p>\n        </div>\n        <div className=\"loadspin\"></div>\n        {\n          (pageReturn) ? <Redirect to=\"/rooms\" /> : null\n        }\n      </div>\n    );\n  }\n};","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Main from './Main.jsx';\nimport Navbar from './Navbar.jsx';\nimport About from './About.jsx';\nimport Rooms from './Rooms.jsx';\nimport RoomsDetails from './RoomsDetails.jsx';\nimport Warning from './Warning.jsx';\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    window.onpopstate = e => {\n      this.props.popClose();\n      this.disconnectSet();\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.props.location.pathname.split('/rooms/')[1]) {\n      this.disconnectSet();\n    } else {\n      this.props.chatRoomUsing(this.props.isroom, this.props.inroom, this.props.peers);\n    }\n  }\n\n  disconnectSet() {\n    this.props.webrtc.connection.disconnect();\n    this.props.webrtc.stopLocalVideo();\n    this.props.webrtc.leaveRoom();\n  }\n\n  disconnect() {\n    this.props.history.push('/rooms');\n    this.props.alertMessageChange();\n    this.props.popClose();\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      inputRef,\n      goingRef,\n      items,\n      isroom,\n      init,\n      peers,\n      inroom,\n      webrtc,\n      saveFormData,\n      AddpeerVideo,\n      joinChat,\n      startLoclaVideo,\n      handleSelfMute,\n      goingChannel,\n      passRef,\n      passCheckRef,\n      passwordCheck,\n      pass,\n      mute,\n      popopen,\n      popEvent,\n      popClose,\n      focustitle,\n      inputCancel,\n      alertMessage,\n      spinner,\n      alertBoxBottom,\n      alertColor,\n      channelAlertMessage,\n      alertMessageFormat,\n      onLogoutButtonClick,\n      onLoginButtonClick,\n      signAlert,\n      loginpopEvent,\n      loggedPopUp,\n      deleteAelrt,\n      roomDeletePop,\n      gochnanelRoom,\n      delPopClose,\n      roomDelete,\n      pageGoback,\n      pageReturn,\n      validityCheck } = this.props;\n    return (\n      <div id=\"app\" className=\"container\">\n        <Navbar\n          items={items}\n          loginpopEvent={loginpopEvent}\n          loggedPopUp={loggedPopUp}\n          isLoggedIn={isLoggedIn}\n          signAlert={signAlert}\n          onLoginButtonClick={onLoginButtonClick}\n          onLogoutButtonClick={onLogoutButtonClick}\n          alertMessageFormat={alertMessageFormat}\n          alertBoxBottom={alertBoxBottom}\n          popEvent={popEvent}\n          popClose={popClose}\n          popopen={popopen}\n        />\n        <Switch>\n          <Route exact path=\"/\" render={props => {\n            return (\n              <Main\n                {...props}\n                spinner={spinner}\n                isLoggedIn={isLoggedIn}\n                saveFormData={saveFormData}\n                inputRef={inputRef}\n                passRef={passRef}\n                pass={pass}\n                popEvent={popEvent}\n                popClose={popClose}\n                popopen={popopen}\n                passwordCheck={passwordCheck}\n                passCheckRef={passCheckRef}\n                focustitle={focustitle}\n                alertMessage={alertMessage}\n                alertBoxBottom={alertBoxBottom}\n                alertColor={alertColor}\n                channelAlertMessage={channelAlertMessage}\n                gochnanelRoom={gochnanelRoom}\n              />\n            );\n          }} />\n          <Route exact path=\"/about\" render={props => {\n            return (\n              <About\n                {...props}\n                spinner={spinner}\n                goingRef={goingRef}\n                goingChannel={goingChannel}\n                pass={pass}\n                channelAlertMessage={channelAlertMessage}\n                popEvent={popEvent}\n                popClose={popClose}\n                popopen={popopen}\n                passwordCheck={passwordCheck}\n                passCheckRef={passCheckRef}\n                focustitle={focustitle}\n                inputCancel={inputCancel}\n                alertMessage={alertMessage}\n                alertBoxBottom={alertBoxBottom}\n                alertColor={alertColor}\n                gochnanelRoom={gochnanelRoom}\n              />\n            );\n          }} />\n          <Route exact path=\"/rooms\" render={props => {\n            if (isLoggedIn) {\n              return (\n                <Rooms\n                  spinner={spinner}\n                  popClose={popClose}\n                  popopen={popopen}\n                  pass={pass}\n                  items={items}\n                  roomData={isroom}\n                  roomDelete={roomDelete}\n                  passCheckRef={passCheckRef}\n                  passwordCheck={passwordCheck}\n                  popEvent={popEvent}\n                  focustitle={focustitle}\n                  inputCancel={inputCancel}\n                  alertMessage={alertMessage}\n                  alertBoxBottom={alertBoxBottom}\n                  alertColor={alertColor}\n                  deleteAelrt={deleteAelrt}\n                  roomDeletePop={roomDeletePop}\n                  gochnanelRoom={gochnanelRoom}\n                  delPopClose={delPopClose}\n                  peers={peers}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }} />\n          <Route exact path=\"/rooms/:room_name\" render={props => {\n            let email = items.name ? items.name : 'null';\n            if (isLoggedIn) {\n              if (inroom) {\n                return (\n                  <RoomsDetails\n                    {...props}\n                    init={init}\n                    email={email}\n                    url={items.url}\n                    peers={peers}\n                    webrtc={webrtc}\n                    inroom={inroom}\n                    isroom={isroom}\n                    startLoclaVideo={startLoclaVideo}\n                    AddpeerVideo={AddpeerVideo}\n                    joinChat={joinChat}\n                    mute={mute}\n                    pass={pass}\n                    disconnect={this.disconnect.bind(this)}\n                    handleSelfMute={handleSelfMute}\n                    localref={(vid) => this.localVideo = vid}\n                  />\n                );\n              } else {\n                return <Redirect to=\"/warning\" />;\n              }\n            } else {\n              return <span>Loading...</span>;\n            }\n\n          }} />\n          <Route path=\"/warning\" render={props => (<Warning {...props} pageGoback={pageGoback} pageReturn={pageReturn} popClose={popClose} />)} />\n          <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n        <footer>\n          <p>COPYRIGHT@VIDEOS. SEOKSANGHWAN</p>\n        </footer>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst NotSupport = () => {\n  return (\n    <div className=\"NotSupport\">\n      <p>\n        현재 이 서비스는 익스플로러를 지원 하지 않습니다.\n        <br />크롬을 다운 후 실행시켜주세요.\n        <a href=\"https://www.google.com/intl/ko_ALL/chrome/\">CHROME 다운로드</a>\n      </p>\n      <p className=\"NotSupportText\">Not Support</p>\n    </div>\n  );\n};\n\nexport default NotSupport;\n","import React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route } from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './Home.jsx';\nimport { throws } from 'assert';\nimport NotSupport from './NotSupport.jsx'\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.usingUserData();\n    this.props.channelData();\n    this.props.init();\n    this.props.getVersionOfIE();\n  }\n\n  saveFormDatas(event) {\n    event.preventDefault();\n    const { isLoggedIn, items, isroom } = this.props;\n    const channelTitle = this.inputNode.value\n    const channelPassword = this.passNode.value\n    this.props.saveFormData(isLoggedIn, items, channelTitle, channelPassword, isroom, this.props.aboutPopEvent);\n    this.props.MainAlertMessageChange();\n    this.inputNode.value = '';\n    this.passNode.value = '';\n  }\n\n  roomDeletes(event) {\n    event.preventDefault();\n    const dataId = event.target.dataset.id;\n    this.props.roomDelete(dataId);\n  }\n\n  goingChannel(event) {\n    event.preventDefault();\n    const channelTitle = this.gochannel.value;\n    const { isLoggedIn, isroom } = this.props;\n    const titleEqualCheck = isroom.filter(data => data.title === channelTitle)[0]\n    this.props.goingChannels(isLoggedIn, channelTitle, isroom, titleEqualCheck, this.props.aboutPopEvent)\n    this.props.aboutAlertMessageChange();\n    this.gochannel.value = '';\n  }\n\n  passwordCheck(event) {\n    event.preventDefault();\n    const dataTite = this.props.aboutValueTitle;\n    const dataId = this.props.focusid;\n    const passCheck = this.checkNode.value;\n    const { isroom } = this.props;\n    this.props.passpostCheck(passCheck, dataId, isroom, dataTite, event)\n  }\n\n  gochnanelRoom() {\n    const {focustitle} = this.props;\n    this.props.goMoveChannel(focustitle);\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      items,\n      isroom,\n      peers,\n      inroom,\n      webrtc,\n      joinChat,\n      AddpeerVideo,\n      startLoclaVideo,\n      handleSelfMute,\n      mute,\n      pass,\n      history,\n      popopen,\n      channelcheck,\n      popEvent,\n      popClose,\n      passpostCheck,\n      focustitle,\n      roomMatch,\n      alertHide,\n      inputCancel,\n      formatRoomPassword,\n      alertMessage,\n      loginUser,\n      userlogout,\n      aboutAlertMessageChange,\n      spinner,\n      alertBoxBottom,\n      alertColor,\n      channelAlertMessage,\n      alertMessageFormat,\n      loginpopEvent,\n      loggedPopUp,\n      deleteAelrt,\n      roomDeletePop,\n      gochnanelRoom,\n      ieCehck,\n      delPopClose,\n      chatRoomUsing,\n      pageGoback,\n      pageReturn } = this.props;\n    return (\n      <Fragment>\n        <Route path=\"/\" \n          render={props => {\n            if (ieCehck) {\n              return (\n                (webrtc !== null && Boolean(isroom)) ?\n                  <Home\n                    {...props}\n                    isLoggedIn={isLoggedIn}\n                    items={items}\n                    isroom={isroom}\n                    channelcheck={channelcheck}\n                    chatRoomUsing={chatRoomUsing}\n                    alertMessageFormat={alertMessageFormat}\n                    saveFormData={this.saveFormDatas.bind(this)}\n                    roomDelete={this.roomDeletes.bind(this)}\n                    roomDeletePop={roomDeletePop.bind(this)}\n                    goingChannel={this.goingChannel.bind(this)}\n                    passwordCheck={this.passwordCheck.bind(this)}\n                    formatRoomPassword={formatRoomPassword}\n                    handleSelfMute={handleSelfMute.bind(this)}\n                    inputCancel={inputCancel.bind(this)}\n                    passpostCheck={passpostCheck}\n                    popEvent={popEvent.bind(this)}\n                    delPopClose={delPopClose.bind(this)}\n                    gochnanelRoom={this.gochnanelRoom.bind(this)}\n                    loginpopEvent={loginpopEvent.bind(this)}\n                    loggedPopUp={loggedPopUp}\n                    pageGoback={pageGoback}\n                    popClose={popClose}\n                    focustitle={focustitle}\n                    alertHide={alertHide}\n                    alertColor={alertColor}\n                    pageReturn={pageReturn}\n                    alertBoxBottom={alertBoxBottom}\n                    onLoginButtonClick={loginUser}\n                    onLogoutButtonClick={userlogout}\n                    signAlert={this.signAlertMessage}\n                    alertMessageChange={aboutAlertMessageChange}\n                    webrtc={webrtc}\n                    peers={peers}\n                    inroom={inroom}\n                    pass={pass}\n                    roomMatch={roomMatch}\n                    channelAlertMessage={channelAlertMessage}\n                    startLoclaVideo={startLoclaVideo}\n                    AddpeerVideo={AddpeerVideo}\n                    mute={mute}\n                    loginpopEvent={loginpopEvent}\n                    popopen={popopen}\n                    joinChat={joinChat}\n                    alertMessage={alertMessage}\n                    spinner={spinner}\n                    deleteAelrt={deleteAelrt}\n                    inputRef={value => this.inputNode = value}\n                    goingRef={value => this.gochannel = value}\n                    passRef={value => this.passNode = value}\n                    passCheckRef={value => this.checkNode = value}\n                  /> :\n                  <div className=\"loadspin\"></div>\n              )\n            } else {\n              return <NotSupport />\n            }\n          }}\n        />\n      </Fragment>\n    );\n  };\n};\n","import * as firebase from 'firebase';\n\n var config = {\n  apiKey: \"AIzaSyA2aWhmtwcW-HJ80tYyv1Hs2A9MRzY3acQ\",\n  authDomain: \"videoconference-bf935.firebaseapp.com\",\n  databaseURL: \"https://videoconference-bf935.firebaseio.com\",\n  projectId: \"videoconference-bf935\",\n  storageBucket: \"videoconference-bf935.appspot.com\",\n  messagingSenderId: \"895553387250\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Route } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { connectRouter, routerMiddleware, ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history'\nimport * as serviceWorker from './serviceWorker';\nimport logger from 'redux-logger';\nimport reducer from './reducer'\nimport App from './containers/App.jsx';\nimport './style.css';\nimport './service/firebase';\n\nconst history = createBrowserHistory();\n\nconst store = createStore(\n  connectRouter(history)(reducer),\n  compose(\n    applyMiddleware(\n      routerMiddleware(history),\n      logger\n    )\n  )\n);\n\nrender(\n    <Provider store={store}>\n      <ConnectedRouter history={history} >\n        <Route render={ props => <App {...props} history={history}/> } />\n      </ConnectedRouter>\n    </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}