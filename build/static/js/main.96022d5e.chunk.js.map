{"version":3,"sources":["actions/index.js","reducers/index.js","containers/App.jsx","components/Main.jsx","components/Navbar.jsx","components/Alert.jsx","components/About.jsx","components/Rooms.jsx","components/RoomsDetails.jsx","components/Home.jsx","components/App.jsx","service/firebase.js","index.js"],"names":["IS_LOGIN_USER","FETCH_PRODUCTS_BEGIN","GET_ERRORS","IS_LOGGED_IN_DATA","IS_LOGOUT_DATA","ROOMS_DATA","RTC_SETTING","ADD_MEDIA","REMOVE_VIDEO","READY_TO_CALL","LOCAL_VIDEO","CONNECTED_LOCAL","DISCONNECTED_WEBCAM","AUDIO_CHECK","ROOM_ADD","ROOM_REMOVE","CHANNEL_CHECK","PASSWORD_CHECK","POP_EVENT_CHECK","POP_ClOSE_CHECK","ROOM_MAINTENANCE","ROOM_TITLE_MATCH","FORMAT_ROOM_PASS","initialState","items","isLoggedIn","error","isroom","peers","inroom","webrtc","roomname","mute","length","pass","popopen","focusid","focustitle","aboutValueTitle","createHistory","forceRefresh","rtc","Main","props","react_default","a","createElement","className","htmlFor","src","alt","Link","to","type","id","name","ref","inputRef","placeholder","passRef","onClick","saveFormData","Navbar","signAlert","onLogoutButtonClick","onLoginButtonClick","url","Alert","_ref","passCheckRef","passwordCheck","popClose","inputCancel","concat","About","goingRef","goingChannel","components_Alert","Rooms","roomDelete","roomData","popEvent","uniqWith","isEqual","map","data","key","_id","title","userName","data-id","data-mail","userMail","RoomsDetails","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","remoteVideos","room_name","match","params","startLoclaVideo","localVideo","AddpeerVideo","joinChat","_this2","_this$props","email","disconnect","handleSelfMute","connectVideo","autoPlay","vid","nick","split","getContainerId","getId","playsInline","Component","Home","location","pathname","disconnectSet","roomMatch","connection","stopLocalVideo","leaveRoom","history","go","push","init","components_Navbar","Switch","Route","exact","path","render","components_Main","assign","components_About","components_Rooms","Redirect","RoomsDetails_RoomsDetails","bind","localref","alert","React","App","usingUserData","channelData","chatRoomUsing","event","preventDefault","inputNode","value","passNode","dataId","target","dataset","dataMail","mail","channelTitle","gochannel","titleEqualCheck","filter","undefined","aboutPopEvent","dataTite","passCheck","checkNode","passpostCheck","_this$props2","channelcheck","alertHide","formatRoomPassword","BrowserRouter","Home_Home","saveFormDatas","roomDeletes","loginUser","userlogout","signAlertMessage","localHostIp","localHostIpApi","provider","firebase","GoogleAuthProvider","socket","io","connect","state","dispatch","ownProps","user","signInWithPopup","then","result","credential","accessToken","users","uid","displayName","photoURL","axios","post","res","token","defaults","headers","common","setAuthToken","decoded","jwt_decode","localStorage","setItem","JSON","stringify","catch","parse","getItem","userRemove","removeItem","signOut","on","logedin","roomPassword","console","log","titleOverLap","Boolean","every","roommData","emit","itemsMail","localele","LioWebRTC","localVideoEl","dataOnly","network","maxPeers","minPeers","debug","sessionId","peer","payload","localvideo","start","startLocalVideo","config","targetremote","stream","attachStream","autoplay","joinroom","joinRoom","e","func","password","roomid","item","inputdata","shouldCheck","message","roomObj","roomTitle","booelan","targetTitle","roomNull","isroomdata","roomTitleUrl","isRoomValid","some","roomBoolean","withref","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","arguments","action","objectSpread","islogedin","loggedTrue","roomCopy","toConsumableArray","dataroom","removeRoom","roomId","removeUpdate","peerCopy","p","closed","unmute","applyMiddleware","logger","ReactDOM","react_redux_es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.96022d5e.chunk.js","sourcesContent":["export const IS_LOGIN_USER = 'IS_LOGIN_USER';\nexport const FETCH_PRODUCTS_BEGIN = 'FETCH_PRODUCTS_BEGIN';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const IS_LOGGED_IN_DATA = 'IS_LOGGED_IN_DATA';\nexport const IS_LOGOUT_DATA = 'IS_LOGOUT_DATA';\nexport const ROOMS_DATA = 'ROOMS_DATA';\nexport const RTC_SETTING = 'RTC_SETTING';\nexport const ADD_MEDIA = 'ADD_MEDIA';\nexport const REMOVE_VIDEO = 'REMOVE_VIDEO';\nexport const READY_TO_CALL = 'READY_TO_CALL';\nexport const LOCAL_VIDEO = 'LOCAL_VDIEO';\nexport const CONNECTED_LOCAL = 'CONNECTED_LOCAL';\nexport const DISCONNECTED_WEBCAM = 'DISCONNECTED_WEBCAM';\nexport const AUDIO_CHECK = 'AUDIO_CHECK';\nexport const ROOM_ADD = 'ROOM_ADD';\nexport const ROOM_REMOVE = 'ROOM_REMOVE';\nexport const CHANNEL_CHECK = 'CHANNEL_CHECK';\nexport const PASSWORD_CHECK = 'PASSWORD_CHECK';\nexport const POP_EVENT_CHECK = 'POP_EVENT_CHECK';\nexport const POP_ClOSE_CHECK = 'POP_ClOSE_CHECK';\nexport const ROOM_MAINTENANCE = 'ROOM_MAINTENANCE';\nexport const ROOM_TITLE_MATCH = 'ROOM_TITLE_MATCH';\nexport const FORMAT_ROOM_PASS = 'FORMAT_ROOM_PASS';\n\nexport const isLogoutData = () => ({\n\ttype: IS_LOGOUT_DATA\n});\n\nexport const isLoggedInData = () => ({\n\ttype: IS_LOGGED_IN_DATA\n});  \n\nexport const fetchProductsBegin = () => ({\n\ttype: FETCH_PRODUCTS_BEGIN\n});  \n\nexport const getErrors = () => ({\n\ttype: GET_ERRORS\n});  \n\nexport const roomdData = () => ({\n\ttype: ROOMS_DATA\n});\n\nexport const isLoginUser = products => ({\n  type: IS_LOGIN_USER\n});\n\n/* video RTC */\nexport const rtcSetting = products => ({\n  type: RTC_SETTING\n});\n\nexport const addMeida = products => ({\n  type: ADD_MEDIA\n});\n\nexport const removeVideo = products => ({\n  type: REMOVE_VIDEO\n});\n\nexport const readyToCall = products => ({\n  type: READY_TO_CALL\n});\n\nexport const localVideo = products => ({\n  type: LOCAL_VIDEO\n});\n\nexport const connectedLocal = products => ({\n  type: CONNECTED_LOCAL\n});\n\nexport const disconnectedWebcam = products => ({\n  type: DISCONNECTED_WEBCAM\n});\n\nexport const audioCheck = products => ({\n  type: AUDIO_CHECK\n});\n\nexport const roomAdd = products => ({\n  type: ROOM_ADD\n});\n\nexport const roomRemove = products => ({\n  type: ROOM_REMOVE\n});\n\nexport const channelCheck = products => ({\n  type: CHANNEL_CHECK\n});\n\nexport const passwordCheck = products => ({\n  type: PASSWORD_CHECK\n});\n\nexport const popEventCheck = products => ({\n  type: POP_EVENT_CHECK\n});\n\nexport const popCloseCheck = products => ({\n  type: POP_ClOSE_CHECK\n});\n\nexport const roomMaintenance = products => ({\n  type: ROOM_MAINTENANCE\n});\n\nexport const roomMatchTtile = products => ({\n  type: ROOM_TITLE_MATCH\n});\n\nexport const formatRoomPass = products => ({\n  type: FORMAT_ROOM_PASS\n});\n\n","import LioWebRTC from 'liowebrtc';\nimport { combineReducers } from 'redux';\nimport createHistory from 'history/createBrowserHistory';\nimport {\n\tFETCH_PRODUCTS_BEGIN,\n\tIS_LOGIN_USER,\n\tIS_LOGGED_IN_DATA,\n\tIS_LOGOUT_DATA,\n\tGET_ERRORS,\n\tROOMS_DATA,\n\tRTC_SETTING,\n\tCONNECTED_LOCAL,\n\tLOCAL_VIDEO,\n\tADD_MEDIA,\n\tREMOVE_VIDEO,\n\tREADY_TO_CALL,\n\tDISCONNECTED_WEBCAM,\n\tAUDIO_CHECK,\n\tROOM_ADD,\n\tROOM_REMOVE,\n\tCHANNEL_CHECK,\n\tPASSWORD_CHECK,\n\tPOP_EVENT_CHECK,\n\tPOP_ClOSE_CHECK,\n\tROOM_MAINTENANCE,\n\tROOM_TITLE_MATCH,\n\tFORMAT_ROOM_PASS\n} from '../actions';\n\nconst initialState = {\n\titems: {},\n\tisLoggedIn: false,\n\terror: null,\n\tisroom: [],\n\tpeers: [],\n\tinroom: false,\n\twebrtc: null,\n\troomname: '',\n\tmute: false,\n\tlength: 0,\n\tpass: false,\n\tpopopen: false,\n\tfocusid: '',\n\tfocustitle: '',\n\taboutValueTitle: '',\n};\nconst history = createHistory({ forceRefresh: true });\n\nexport default function productReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FETCH_PRODUCTS_BEGIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tislogedin: false,\n\t\t\t\titems: {},\n\t\t\t\tisroom: []\n\t\t\t};\n\n\t\tcase IS_LOGIN_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: true,\n\t\t\t\titems: action.data\n\t\t\t};\n\n\t\tcase IS_LOGGED_IN_DATA:\n\t\t\tlet user = Boolean(action.data) ? action.data : {};\n\t\t\tlet loggedTrue = Boolean(action.data) ? true : false;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: loggedTrue,\n\t\t\t\titems: user\n\t\t\t}\n\n\t\tcase IS_LOGOUT_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: false,\n\t\t\t\titems: {},\n\t\t\t\tisroom: []\n\t\t\t}\n\n\t\tcase ROOMS_DATA:\n\t\t\tlet roomCopy = [...action.data, ...state.isroom];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: roomCopy\n\t\t\t}\n\n\t\tcase ROOM_ADD:\n\t\t\tconst dataroom = [...state.isroom, action.data];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: dataroom\n\t\t\t}\n\n\t\tcase ROOM_REMOVE:\n\t\t\tconst removeRoom = state.isroom;\n\t\t\tconst roomId = action.data;\n\t\t\tconst removeUpdate = removeRoom.filter((data) => roomId !== data._id);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisroom: removeUpdate\n\t\t\t}\n\n\t\tcase RTC_SETTING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\twebrtc: action.payload\n\t\t\t};\n\n\t\tcase ADD_MEDIA:\n\t\t\tlet peerCopy = [...state.peers, action.peer];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpeers: peerCopy\n\t\t\t};\n\n\t\tcase REMOVE_VIDEO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpeers: state.peers.filter(p => !p.closed)\n\t\t\t};\n\n\t\tcase READY_TO_CALL:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase LOCAL_VIDEO:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase CONNECTED_LOCAL:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase DISCONNECTED_WEBCAM:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\n\t\tcase AUDIO_CHECK:\n\t\t\t(state.mute) ? action.func.unmute() : action.func.mute();\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmute: !state.mute\n\t\t\t};\n\n\t\tcase CHANNEL_CHECK:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t}\n\n\t\tcase PASSWORD_CHECK:\n\t\t\tif (action.result) {\n\t\t\t\tstate.inroom = true\n\t\t\t} else {\n\t\t\t\tstate.inroom = false\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpass: action.result,\n\t\t\t\tfocustitle: action.title\n\t\t\t}\n\n\t\tcase POP_EVENT_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopopen: action.booelan,\n\t\t\t\tfocusid: action.dataId,\n\t\t\t\taboutValueTitle: action.targetTitle\n\t\t\t}\n\n\t\tcase FORMAT_ROOM_PASS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpass : action.pass\n\t\t\t}\n\n\t\tcase POP_ClOSE_CHECK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopopen: action.booelan\n\t\t\t}\n\n\t\tcase ROOM_MAINTENANCE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopopen: action.booelan,\n\t\t\t\tpass: action.data\n\t\t\t}\n\n\t\tcase ROOM_TITLE_MATCH:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinroom : action.roomBoolean\n\t\t\t}\n\n\t\tcase GET_ERRORS:\n\t\t\treturn action.payload;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import { connect } from \"react-redux\";\nimport io from 'socket.io-client';\nimport { bindActionCreators } from 'redux'\nimport React, { Component } from 'react';\nimport { debounce } from \"lodash\";\nimport * as firebase from 'firebase';\nimport LioWebRTC from 'liowebrtc';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport {\n  IS_LOGIN_USER,\n  IS_LOGGED_IN_DATA,\n  IS_LOGOUT_DATA,\n  GET_ERRORS,\n  ROOMS_DATA,\n  CONNECTED_LOCAL,\n  LOCAL_VIDEO,\n  RTC_SETTING,\n  ADD_MEDIA,\n  REMOVE_VIDEO,\n  READY_TO_CALL,\n  AUDIO_CHECK,\n  ROOM_ADD,\n  ROOM_REMOVE,\n  CHANNEL_CHECK,\n  PASSWORD_CHECK,\n  POP_EVENT_CHECK,\n  POP_ClOSE_CHECK,\n  ROOM_MAINTENANCE,\n  ROOM_TITLE_MATCH,\n  FORMAT_ROOM_PASS\n} from '../actions';\nimport App from \"../components/App.jsx\";\nimport createHistory from 'history/createBrowserHistory';\n\n//https://videos-conf-service.herokuapp.com/\n//http://localhost:8080/\nlet rtc;\nconst simpLioRTC = 'https://sm1.lio.app:443/';\nconst localHostIp = 'https://videos-conf-service.herokuapp.com/';\nconst localHostIpApi = `${localHostIp}api/auth/`;\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst history = createHistory({ forceRefresh: true });\nconst socket = io(localHostIp);\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: state.items,\n  isLoggedIn: state.isLoggedIn,\n  error: state.error,\n  isroom: state.isroom,\n  inroom: state.inroom,\n  peers: state.peers,\n  webrtc: state.webrtc,\n  mute: state.mute,\n  length: state.length,\n  popopen: state.popopen,\n  focusid: state.focusid,\n  pass: state.pass,\n  focustitle: state.focustitle,\n  aboutValueTitle: state.aboutValueTitle\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    loginUser: (user) => {\n      firebase.auth().signInWithPopup(provider).then(result => {\n        let token = result.credential.accessToken;\n        let users = result.user;\n        let loginUser = {\n          uid: users.uid,\n          name: users.displayName,\n          url: users.photoURL,\n          email: users.email\n        }\n        axios.post(`${localHostIpApi}login`, loginUser).then(res => {\n          const { token } = res.data;\n          setAuthToken(token);\n          const decoded = jwt_decode(token);\n          dispatch({\n            type: IS_LOGIN_USER,\n            data: decoded\n          });\n          localStorage.setItem('user', JSON.stringify(decoded));\n        })\n      }).catch(error => {\n        dispatch({ type: GET_ERRORS, error });\n      });\n    },\n    usingUserData: () => {\n      let user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: IS_LOGGED_IN_DATA,\n        data: user\n      });\n    },\n    userlogout: () => {\n      let userRemove = localStorage.removeItem('user');\n      firebase.auth().signOut().then(() => {\n        history.push('/');\n        dispatch({\n          type: IS_LOGOUT_DATA,\n          data: userRemove\n        });\n      }).catch(error => {\n        dispatch({ type: GET_ERRORS, error });\n      });\n    },\n    channelData: () => {\n      socket.on('initialList', (data) => {\n        dispatch({\n          type: ROOMS_DATA,\n          data\n        });\n      });\n      socket.on('itemAdded', (data) => {\n        dispatch({\n          type: ROOM_ADD,\n          data\n        });\n      });\n      socket.on('itemRemove', (data) => {\n        dispatch({\n          type: ROOM_REMOVE,\n          data\n        });\n      });\n    },\n    saveFormData: (logedin, items, title, roomPassword, isroom) => {\n      console.log()\n      let titleOverLap = Boolean(isroom.every(roommData => roommData.title !== title));\n      if (logedin) {\n        if (title.length > 1 && title.length < 11 && roomPassword.length > 1 && roomPassword.length < 11) {\n          let data = {\n            title,\n            roomPassword,\n            userName: items.name,\n            userMail: items.email\n          };\n          if (titleOverLap || isroom === []) {\n            socket.emit('addItem', data);\n            history.push(`/rooms/${title}`);\n          } else {\n            alert('중복된 회의실이 있습니다.');\n          }\n        } else {\n          alert('회의방 제목 및 패스워드는 2글자 이상 10글자 미만이에요.\\n다시 한번 작성해주세요');\n        }\n      } else {\n        alert('로그인을 해주세요');\n      }\n    },\n    roomDelete: (id, dataMail, itemsMail) => {\n      if (dataMail === itemsMail) {\n        socket.emit('removeItem', id);\n        dispatch({\n          type: ROOM_REMOVE\n        });\n        alert('회의실이 삭제되었습니다.');\n      } else {\n        alert('회의실 삭제 권한은 주최자에게만 있어요.');\n      }\n    },\n    init: (localele) => {\n      let user = JSON.parse(localStorage.getItem('user'));\n      let email = (user !== null) ? `${user.email},${user.url}` : 'Not user';\n      rtc = new LioWebRTC({\n        url: simpLioRTC,\n        localVideoEl: '',\n        dataOnly: false,\n        network: {\n          maxPeers: 2,\n          minPeers: 1\n        },\n        debug: false,\n        nick: email\n      });\n      rtc\n        .on('connectionReady', (sessionId) => {\n          dispatch({\n            type: CONNECTED_LOCAL,\n            sessionId\n          });\n        })\n        .on('videoRemoved', (peer) => {\n          dispatch({\n            type: REMOVE_VIDEO,\n            peer\n          });\n        });\n      dispatch({ type: RTC_SETTING, payload: rtc });\n    },\n    startLoclaVideo: (localvideo) => {\n      dispatch({ type: LOCAL_VIDEO, start: rtc.startLocalVideo() });\n      if (localvideo) {\n        rtc.config.localVideoEl = localvideo;\n      } else {\n        rtc.config.localVideoEl = localvideo;\n      }\n    },\n    AddpeerVideo: (targetremote) => {\n      rtc.on('videoAdded', (stream, peer) => {\n        if (targetremote) {\n          dispatch({\n            type: ADD_MEDIA,\n            peer,\n            rtc\n          });\n          rtc.attachStream(stream, targetremote[peer.id], { autoplay: true });\n        }\n      })\n    },\n    joinChat: (roomname) => {\n      // /history.go(0);\n      rtc.on('readyToCall', () => {\n        if (roomname !== undefined) {\n          dispatch({\n            type: READY_TO_CALL,\n            joinroom: rtc.joinRoom(roomname)\n          });\n        }\n      });\n    },\n    handleSelfMute: (e) => {\n      dispatch({\n        type: AUDIO_CHECK,\n        func: rtc\n      });\n    },\n    passpostCheck: (password, roomid, isroom, dataTite, event) => {\n      event.preventDefault();\n      isroom.filter(item => {\n        if (item._id === roomid || item.title === dataTite) {\n          if (password.length >= 1) {\n            const inputdata = {\n              password,\n              roomid: item._id\n            }\n            axios.post(`${localHostIp}passcheck`, inputdata)\n              .then(data => {\n                const shouldCheck = data.data.message;\n                dispatch({\n                  type: PASSWORD_CHECK,\n                  result: shouldCheck,\n                  title: item.title\n                })\n                const roomObj = {\n                  item,\n                  shouldCheck\n                }\n                if (shouldCheck === true) {\n                  localStorage.setItem('roomPassResults', JSON.stringify(roomObj));\n                } else {\n                  localStorage.setItem('roomPassResults', JSON.stringify(roomObj));\n                }\n              })\n              .catch(error => {\n                dispatch({ type: GET_ERRORS, error });\n              });\n          }\n        }\n      })\n    },\n    chatRoomUsing: () => {\n      let roomData = JSON.parse(localStorage.getItem('roomPassResults'));\n      let roomTitle = history.location.pathname.split('/rooms/')[1];\n      if (roomTitle !== undefined && roomData !== null) {\n        if (history.location.pathname.split('/rooms/')[1] && roomData !== null) {\n          if (roomTitle === roomData.item.title && roomData.shouldCheck) {\n            dispatch({\n              type: ROOM_MAINTENANCE,\n              data: roomData.shouldCheck\n            })\n          } else {\n            dispatch({\n              type: ROOM_MAINTENANCE,\n              data: false\n            })\n          }\n        }\n      }\n    },\n    popEvent: (event) => {\n      const dataId = event.target.dataset.id;\n      dispatch({\n        type: POP_EVENT_CHECK,\n        booelan: true,\n        dataId\n      })\n    },\n    aboutPopEvent: (targetTitle) => {\n      dispatch({\n        type: POP_EVENT_CHECK,\n        booelan: true,\n        targetTitle\n      })\n    },\n    popClose: () => {\n      let roomDataRmove = localStorage.removeItem('roomPassResults');\n      let roomNull = roomDataRmove === null ? false : null\n      dispatch({\n        type: POP_ClOSE_CHECK,\n        booelan: false\n      })\n      dispatch({\n        type: ROOM_MAINTENANCE,\n        data: roomNull\n      })\n    },\n    inputCancel: () => {\n      dispatch({\n        type: POP_ClOSE_CHECK,\n        booelan: false\n      })\n    },\n    formatRoomPassword: () => {\n      let roomDataRmove = localStorage.removeItem('roomPassResults');\n      if (history.location.pathname.split('/rooms/')[1]) {\n        dispatch({\n          type: FORMAT_ROOM_PASS,\n          data: null,\n          pass: true\n        })\n      }\n    },\n    roomMatch: (isroomdata) => {\n      let roomTitleUrl = history.location.pathname.split('/rooms/')[1];\n      if (history.location.pathname.split('/rooms/')[1]) {\n        let title = isroomdata.map(data => data.title);\n        let isRoomValid = title.some(item => item === roomTitleUrl);\n        if (isRoomValid) {\n          dispatch({\n            type: ROOM_TITLE_MATCH,\n            roomBoolean: true\n          })\n        } else {\n          dispatch({\n            type: ROOM_TITLE_MATCH,\n            roomBoolean: false\n          })\n        }\n      }\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { withref: true })(App);\n\n\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Main = props => {\n  return (\n    <div className=\"meeting-room-create\">\n      <div className=\"rooms_title\">\n        <form>\n          <label htmlFor=\"rooms_title\">\n            <h1>\n              <img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/logo.png?raw=true\" alt=\"\" />\n              <Link className=\"navbar-item\" to=\"/rooms\">Channel List</Link>\n            </h1>\n            <div className=\"inputbox\">\n              <input type=\"text\" id=\"rooms_title\" name=\"rooms_title\" ref={props.inputRef} placeholder=\"안녕하세요!! 회의실을 생성해주세요.\" />\n              <input type=\"password\" id=\"rooms_password\" name=\"rooms_title\" ref={props.passRef} placeholder=\"비밀번호도 설정해봐요.\" />\n            </div>\n            <button name=\"rooms_title\" onClick={props.saveFormData} >Create!</button>\n          </label>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = props => {\n  return (\n    <div className=\"container\">\n      <div className=\"navbar-start\">\n        <div className=\"nav-content\">\n          <div className=\"nav-menu\">\n            <dl>\n              <dt><Link to=\"/\"><img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/logo.png?raw=true\" alt=\"\"/></Link></dt>\n              <dd>\n                <Link to=\"/about\">About</Link>\n              </dd>\n              <dd>\n                {\n                  (props.isLoggedIn) ?\n                    <Link to=\"/rooms\">Channel List</Link> :\n                    <Link onClick={props.signAlert} to=\"/\">Channel List</Link>\n                }\n              </dd>\n              <dd>\n                {\n                  (props.isLoggedIn) ?\n                    <p onClick={props.onLogoutButtonClick}>Sign Out</p> :\n                    <p onClick={props.onLoginButtonClick}>Sign In</p>\n                }\n              </dd>\n            </dl>\n          </div>\n          <div className=\"user-info-nav\">\n            {\n              (props.isLoggedIn) ?\n                <p><img src={props.items.url} /> <strong>{props.items.name}</strong>님 안녕하세요.!!</p> :\n                <p>로그인해주세요.</p>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Alert = ({ passCheckRef, passwordCheck, popClose, pass, focustitle, inputCancel }) => {\n  return (\n    <div className=\"AlertBox\">\n      <div className=\"loginContent\">\n        <div className=\"close-btn\">\n          <i className=\"fas fa-times\" onClick={popClose}></i>\n        </div>\n        <form>\n          <h3>회의실 패스워드를 입력해주세요.</h3>\n          <label htmlFor=\"pass_check\">\n            <input type=\"password\" name=\"pass_check\" ref={passCheckRef} placeholder='패스워드' />\n            <button name=\"pass_check\" onClick={passwordCheck} type=\"button\"> check </button>\n          </label>\n        </form>\n        <div className=\"pass-check\">\n          {\n            pass ?\n              <Link to={`rooms/${focustitle}`}  >패스워드가 일치합니다. 참여하실려면 클릭해주세요.</Link> : <p>패스워드를 입력해주세요.</p>\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Alert;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Alert from './Alert.jsx';\n\nconst About = ({goingRef, goingChannel, passCheckRef, passwordCheck, popClose, pass, focustitle, popopen, inputCancel})=> {\n\treturn (\n\t\t<div className=\"about\">\n\t\t\t<div className=\"about-content\">\n\t\t\t\t<div className=\"about-img\">\n\t\t\t\t\t<img src=\"https://github.com/seoksanghwan/videosConf---client/blob/master/src/img/webcamconf.png?raw=true\" alt=\"\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"about-info-text\">\n\t\t\t\t\t<h2>Videos Conf</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t언제 어디서든 노트북만 있으면, 화상회의를 시작 하실 수 있습니다.\n\t\t\t\t\t\t지금 바로 시작해보세요.!!\n\t\t\t\t\t </p>\n\t\t\t\t\t<div className=\"goingChannel\">\n\t\t\t\t\t\t<label htmlFor=\"going_channel\">\n\t\t\t\t\t\t\t<input type=\"text\" id=\"going_channel\" name=\"going_channel\" ref={goingRef} placeholder=\"채널 제목을 입력해주세요!\" />\n\t\t\t\t\t\t\t<button name=\"going_channel\" onClick={goingChannel} >Go!</button>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n        (popopen) ?\n          <Alert passCheckRef={passCheckRef} passwordCheck={passwordCheck} popClose={popClose} pass={pass} focustitle={focustitle} inputCancel={inputCancel} /> :\n          null\n      }\n\t\t</div>\n\t);\n};\n\nexport default About;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from \"react-router-dom\";\nimport { uniqWith, isEqual } from \"lodash\";\nimport Alert from './Alert.jsx';\n\nconst Rooms = ({ roomDelete, roomData, passCheckRef, passwordCheck, items, popopen, popEvent, popClose, pass, focustitle, inputCancel }) => {\n  return (\n    <div className=\"rooms-list\">\n      <dl>\n        <dt>\n          <h2 className=\"title\">\n            Enjoy Channel!!\n            <em>안녕하세요 회의실 리스트입니다.</em>\n          </h2>\n        </dt>\n        {\n          uniqWith(roomData, isEqual).map(data => {\n            return (\n              <dd key={data._id}>\n                <h3>\n                  {data.title}\n                  <p> Organiser {data.userName}</p>\n                </h3>\n                <div className=\"del-enter\">\n                  <button onClick={popEvent} data-id={data._id}>\n                    <i className=\"fas fa-sign-in-alt\" data-id={data._id}></i>\n                  </button>\n                  {\n                    (data.userName === items.name) ?\n                      <button onClick={roomDelete} data-mail={data.userMail} data-id={data._id} >\n                       <i className=\"fas fa-trash\" data-mail={data.userMail} data-id={data._id} ></i>\n                      </button> : null\n                  }\n                </div>\n              </dd>\n            );\n          })\n        }\n      </dl>\n      {\n        (popopen) ?\n          <Alert passCheckRef={passCheckRef} passwordCheck={passwordCheck} popClose={popClose} pass={pass} focustitle={focustitle} inputCancel={inputCancel} /> :\n          null\n      }\n    </div>\n  );\n};\n\nexport default Rooms;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { uniqWith, isEqual } from \"lodash\";\n\nexport default class RoomsDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.remoteVideos = {};\n  }\n\n  componentDidMount() {\n    const { room_name } = this.props.match.params;\n    this.webrtc = this.props.webrtc;\n    this.props.startLoclaVideo(this.localVideo);\n    this.props.AddpeerVideo(this.remoteVideos);\n    this.props.joinChat(room_name);\n  }\n\n  render() {\n    const { peers, email, url, AddpeerVideo, webrtc, disconnect, handleSelfMute, mute, connectVideo } = this.props;\n    const { room_name } = this.props.match.params;\n    return (\n      <div className=\"details-box\">\n        <div className=\"sidebar local\">\n          <h2>\n            {room_name}\n            <em><i className=\"far fa-user\"></i> {peers.length + 1}</em>\n          </h2>\n          <div className=\"localBox\">\n            <video id='localVideo' autoPlay={true} ref={(vid) => this.localVideo = vid} />\n            <div className=\"nick\">\n              <p> {email} </p>\n            </div>\n          </div>\n          <div className=\"buttons\">\n            <button onClick={connectVideo}>\n              <i className=\"fas fa-video\"></i>\n            </button>\n            <button onClick={handleSelfMute}>\n              {\n                (mute) ?\n                  <i className=\"fas fa-volume-up\"></i> :\n                  <i className=\"fas fa-volume-mute\"></i>\n              }\n            </button>\n            <button onClick={disconnect}>\n              <i className=\"fas fa-sign-out-alt\"></i>\n            </button>\n            <p>통화버튼을 눌러주세요.</p>\n          </div>\n          <div className=\"remotePeerList\">\n            <h3>Member</h3>\n            <ul>\n              <li> <img src={url} alt=\"\" /> <p>{email}</p></li>\n              {\n                peers.map(name => <li key={name.id}> <img src={name.nick.split(',')[1]} alt=\"\" /> <p>{name.nick.split(',')[0]}</p></li>)\n              }\n            </ul>\n          </div>\n        </div>\n        <div className=\"remotevideo\" >\n          {\n            uniqWith(peers, isEqual).map(data => (\n              <div className=\"vidContainer\" key={data.id} id={`${webrtc.getContainerId(data)}`} >\n                <video id={webrtc.getId(data)} autoPlay={true} ref={(vid) => this.remoteVideos[data.id] = vid} playsInline />\n                <div className=\"nick\">\n                  <p>{data.nick.split(',')[0]}</p>\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Main from './Main.jsx';\nimport Navbar from './Navbar.jsx';\nimport About from './About.jsx';\nimport Rooms from './Rooms.jsx';\nimport RoomsDetails from './RoomsDetails.jsx';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidUpdate() {\n    if (!this.props.location.pathname.split('/rooms/')[1]) {\n      this.disconnectSet();\n    }\n    this.props.roomMatch(this.props.isroom);\n  }\n\n  disconnectSet() {\n    this.props.webrtc.connection.disconnect();\n    this.props.webrtc.stopLocalVideo();\n    this.props.webrtc.leaveRoom();\n  }\n\n  connectVideo() {\n    this.props.history.go(0);\n  }\n\n  disconnect() {\n    this.props.history.push('/rooms');\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      inputRef,\n      goingRef,\n      items,\n      isroom,\n      init,\n      peers,\n      inroom,\n      webrtc,\n      saveFormData,\n      AddpeerVideo,\n      joinChat,\n      startLoclaVideo,\n      handleSelfMute,\n      goingChannel,\n      passRef,\n      passCheckRef,\n      passwordCheck,\n      pass,\n      mute,\n      popopen,\n      popEvent,\n      popClose,\n      focustitle,\n      inputCancel } = this.props;\n    return (\n      <div id=\"app\" className=\"container\">\n        <Navbar\n          items={items}\n          isLoggedIn={isLoggedIn}\n          signAlert={this.props.signAlert}\n          onLoginButtonClick={this.props.onLoginButtonClick}\n          onLogoutButtonClick={this.props.onLogoutButtonClick}\n        />\n        <Switch>\n          <Route exact path=\"/\" render={props => {\n            return (\n              <Main\n                {...props}\n                isLoggedIn={isLoggedIn}\n                saveFormData={saveFormData}\n                inputRef={inputRef}\n                passRef={passRef}\n              />\n            );\n          }} />\n          <Route exact path=\"/about\" render={props => {\n            return (\n              <About\n                {...props}\n                goingRef={goingRef}\n                goingChannel={goingChannel}\n                pass={pass}\n                popEvent={popEvent}\n                popClose={popClose}\n                popopen={popopen}\n                passwordCheck={passwordCheck}\n                passCheckRef={passCheckRef}\n                focustitle={focustitle}\n                inputCancel={inputCancel}\n              />\n            );\n          }} />\n          <Route exact path=\"/rooms\" render={props => {\n            if (isLoggedIn) {\n              return (\n                <Rooms\n                  popClose={popClose}\n                  popopen={popopen}\n                  pass={pass}\n                  items={items}\n                  roomData={isroom}\n                  roomDelete={this.props.roomDelete}\n                  passCheckRef={passCheckRef}\n                  passwordCheck={passwordCheck}\n                  popEvent={popEvent}\n                  focustitle={focustitle}\n                  inputCancel={inputCancel}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }} />\n          <Route exact path=\"/rooms/:room_name\" render={props => {\n            let email = items.email ? items.email : 'null';\n            if (isLoggedIn && isroom ) {\n              if (pass) {\n                return (\n                  <RoomsDetails\n                    {...props}\n                    init={init}\n                    email={email}\n                    url={items.url}\n                    peers={peers}\n                    webrtc={webrtc}\n                    inroom={inroom}\n                    isroom={isroom}\n                    startLoclaVideo={startLoclaVideo}\n                    AddpeerVideo={AddpeerVideo}\n                    joinChat={joinChat}\n                    mute={mute}\n                    pass={pass}\n                    connectVideo={this.connectVideo.bind(this)}\n                    disconnect={this.disconnect.bind(this)}\n                    handleSelfMute={handleSelfMute}\n                    localref={(vid) => this.localVideo = vid}\n                  />\n                );\n              } else {\n                alert('잘못된 접근입니다.');\n                return <Redirect to=\"/rooms\" />;\n              }\n            } else {\n              return <span>Loading...</span>;\n            }\n          }} />\n          <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </div>\n    );\n  };\n};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './Home.jsx';\nimport { throws } from 'assert';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.usingUserData();\n    this.props.channelData();\n    this.props.init();\n    this.props.chatRoomUsing();\n  }\n\n  signAlertMessage() {\n    alert('로그인을 해주세요');\n  }\n\n  saveFormDatas(event) {\n    event.preventDefault();\n    const { isLoggedIn, items, isroom } = this.props;\n    this.props.saveFormData(isLoggedIn, items, this.inputNode.value, this.passNode.value, isroom);\n    this.inputNode.value = '';\n    this.passNode.value = '';\n  }\n\n  roomDeletes(event) {\n    event.preventDefault();\n    const dataId = event.target.dataset.id;\n    const dataMail = event.target.dataset.mail;\n    const { items } = this.props;\n    this.props.roomDelete(dataId, dataMail, items.email);\n  }\n\n  goingChannel(event) {\n    event.preventDefault();\n    const channelTitle = this.gochannel.value;\n    const {isroom} = this.props;\n    const titleEqualCheck = isroom.filter( data => data.title === channelTitle)[0]\n    if( channelTitle.length > 1 && channelTitle.length < 11) {\n      if ( titleEqualCheck !== undefined) {\n        if (titleEqualCheck.title ===  channelTitle ) {\n          this.props.aboutPopEvent(channelTitle);\n        }\n      } else {\n        alert('채널 목록에 없는 채널입니다.');\n        this.gochannel.value = '';\n      }\n    } else {\n      alert('채널 제목은 2글자 미만이거나, 11글자 이상 일 수 없습니다.');\n      this.gochannel.value = '';\n    }\n  }\n\n  passwordCheck(event) {\n    event.preventDefault();\n    const dataTite = this.props.aboutValueTitle;\n    const dataId = this.props.focusid;\n    const passCheck = this.checkNode.value;\n    const {isroom} = this.props;\n    this.props.passpostCheck(passCheck, dataId, isroom, dataTite, event)\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      items,\n      isroom,\n      peers,\n      inroom,\n      webrtc,\n      joinChat,\n      AddpeerVideo,\n      startLoclaVideo,\n      handleSelfMute,\n      mute,\n      pass,\n      history,\n      popopen,\n      channelcheck,\n      popEvent,\n      popClose,\n      passpostCheck,\n      focustitle,\n      roomMatch,\n      alertHide,\n      inputCancel,\n      formatRoomPassword } = this.props;\n    return (\n      <Router>\n        <Route\n          render={props => {\n            if (isroom) {\n              return (\n                (webrtc !== null) ?\n                  <Home\n                    {...props}\n                    isLoggedIn={isLoggedIn}\n                    items={items}\n                    isroom={isroom}\n                    channelcheck={channelcheck}\n                    saveFormData={this.saveFormDatas.bind(this)}\n                    roomDelete={this.roomDeletes.bind(this)}\n                    goingChannel={this.goingChannel.bind(this)}\n                    passwordCheck={this.passwordCheck.bind(this)}\n                    formatRoomPassword={formatRoomPassword}\n                    handleSelfMute={handleSelfMute.bind(this)}\n                    inputCancel={inputCancel.bind(this)}\n                    passpostCheck={passpostCheck}\n                    popEvent={popEvent.bind(this)}\n                    popClose={popClose}\n                    focustitle={focustitle}\n                    alertHide={alertHide}\n                    onLoginButtonClick={this.props.loginUser}\n                    onLogoutButtonClick={this.props.userlogout}\n                    signAlert={this.signAlertMessage}\n                    webrtc={webrtc}\n                    peers={peers}\n                    inroom={inroom}\n                    pass={pass}\n                    roomMatch={roomMatch}\n                    startLoclaVideo={startLoclaVideo}\n                    AddpeerVideo={AddpeerVideo}\n                    mute={mute}\n                    popopen={popopen}\n                    joinChat={joinChat}\n                    inputRef={value => this.inputNode = value}\n                    goingRef={value => this.gochannel = value}\n                    passRef={value => this.passNode = value}\n                    passCheckRef={value => this.checkNode = value}\n                  /> :\n                  null\n              )\n            }\n          }}\n        />\n      </Router>\n    );\n  };\n};\n","import * as firebase from 'firebase';\n\n var config = {\n  apiKey: \"AIzaSyA2aWhmtwcW-HJ80tYyv1Hs2A9MRzY3acQ\",\n  authDomain: \"videoconference-bf935.firebaseapp.com\",\n  databaseURL: \"https://videoconference-bf935.firebaseio.com\",\n  projectId: \"videoconference-bf935\",\n  storageBucket: \"videoconference-bf935.appspot.com\",\n  messagingSenderId: \"895553387250\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport reducer from './reducers'\nimport App from './containers/App.jsx';\nimport './style.css';\nimport './service/firebase';\nimport createHistory from 'history/createBrowserHistory';\n\nconst history = createHistory({ forceRefresh: true });\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\t\n    <App history={history}/>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}